[[32mDebug[39m] 
struct test1::Pair<T1, T2>{
  x : T1,
  y : T2}

enum test1::List<T> =
|  Cons(0 : T, 1 : std::boxed::Box<test1::List<T>>)
|  Nil()

enum test1::One<T1> =
|  One(0 : T1)

enum test1::EmptyEnum =
|  Empty()

enum test1::Enum =
|  Variant1()
|  Variant2()

struct test1::EmptyStruct{}

enum test1::Sum<T1, T2> =
|  Left(0 : T1)
|  Right(0 : T2)

fn add_test(x : u32, y : u32) -> u32 {
  var@0 : u32;
  x : u32;
  y : u32;
  var@3 : u32;
  var@4 : u32;
  var@5 : (u32, bool);

  var@3 := copy x;
  var@4 := copy y;
  var@0 := copy var@3 + copy var@4;
  return
}

fn subs_test(x : u32, y : u32) -> u32 {
  var@0 : u32;
  x : u32;
  y : u32;
  var@3 : u32;
  var@4 : u32;
  var@5 : (u32, bool);

  var@3 := copy x;
  var@4 := copy y;
  var@0 := copy var@3 - copy var@4;
  return
}

fn div_test(x : u32, y : u32) -> u32 {
  var@0 : u32;
  x : u32;
  y : u32;
  var@3 : u32;
  var@4 : u32;
  var@5 : bool;

  var@3 := copy x;
  var@4 := copy y;
  var@0 := move var@3 / move var@4;
  return
}

fn rem_test(x : u32, y : u32) -> u32 {
  var@0 : u32;
  x : u32;
  y : u32;
  var@3 : u32;
  var@4 : u32;
  var@5 : bool;

  var@3 := copy x;
  var@4 := copy y;
  var@0 := move var@3 % move var@4;
  return
}

fn test2() {
  var@0 : ();
  x : u32;
  y : u32;
  z : u32;
  p : test1::Pair<u32, u32>;
  var@5 : u32;
  s : test1::Sum<u32, bool>;
  o : test1::One<u64>;
  e0 : test1::EmptyEnum;
  e1 : test1::EmptyEnum;
  enum0 : test1::Enum;

  x := 23: u32;
  y := 44: u32;
  z := 67: u32;
  var@5 := copy x;
  (p).x := move var@5;
  (p).y := 67: u32;
  (s as test1::Sum::Right).0 := true;
  set_discriminant(s, 1);
  (o as test1::One::One).0 := 3: u64;
  set_discriminant(o, 0);
  set_discriminant(e0, 0);
  set_discriminant(enum0, 0);
  return
}

fn get_max(x : u32, y : u32) -> u32 {
  var@0 : u32;
  x : u32;
  y : u32;
  var@3 : bool;
  var@4 : u32;
  var@5 : u32;

  var@4 := copy x;
  var@5 := copy y;
  var@3 := move var@4 >= move var@5;
  if (move var@3) {
    var@0 := copy x
  }
  else {
    var@0 := copy y
  };
  return
}

fn test3() {
  var@0 : ();
  x : u32;
  y : u32;
  z : u32;
  var@4 : u32;
  var@5 : u32;
  var@6 : (u32, bool);
  var@7 : bool;
  var@8 : bool;
  var@9 : u32;

  x := move get_max(4: u32, 3: u32);
  y := move get_max(10: u32, 11: u32);
  var@4 := copy x;
  var@5 := copy y;
  z := copy var@4 + copy var@5;
  var@9 := copy z;
  var@8 := move var@9 == 15: u32;
  var@7 := Â¬ move var@8;
  assert(Â¬move var@7);
  return
}

fn test_neg(x : i32) -> i32 {
  var@0 : i32;
  x : i32;
  var@2 : i32;
  var@3 : bool;

  var@2 := copy x;
  var@3 := copy var@2 == -2147483648: i32;
  assert(Â¬move var@3);
  var@0 := - move var@2;
  return
}

fn test_neg1() {
  var@0 : ();
  x : i32;
  y : i32;

  x := 3: i32;
  y := -3: i32;
  return
}

fn refs_test1() {
  var@0 : ();
  x : i32;
  px : &'_ mut (i32);
  ppx : &'_ mut (&'_ mut (i32));
  var@4 : bool;
  var@5 : bool;
  var@6 : i32;

  x := 0: i32;
  px := &mut x;
  ppx := &mut px;
  *(*(ppx)) := 1: i32;
  var@6 := copy x;
  var@5 := move var@6 == 1: i32;
  var@4 := Â¬ move var@5;
  assert(Â¬move var@4);
  return
}

fn refs_test2() {
  var@0 : ();
  x : i32;
  y : i32;
  px : &'_ mut (i32);
  py : &'_ mut (i32);
  ppx : &'_ mut (&'_ mut (i32));
  var@6 : &'_ mut (i32);
  var@7 : bool;
  var@8 : bool;
  var@9 : i32;
  var@10 : bool;
  var@11 : bool;
  var@12 : i32;
  var@13 : bool;
  var@14 : bool;
  var@15 : i32;
  var@16 : bool;
  var@17 : bool;
  var@18 : i32;

  x := 0: i32;
  y := 1: i32;
  px := &mut x;
  py := &mut y;
  ppx := &mut px;
  var@6 := &mut *(py);
  *(ppx) := move var@6;
  *(*(ppx)) := 2: i32;
  var@9 := copy *(px);
  var@8 := move var@9 == 2: i32;
  var@7 := Â¬ move var@8;
  assert(Â¬move var@7);
  var@12 := copy x;
  var@11 := move var@12 == 0: i32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  var@15 := copy *(py);
  var@14 := move var@15 == 2: i32;
  var@13 := Â¬ move var@14;
  assert(Â¬move var@13);
  var@18 := copy y;
  var@17 := move var@18 == 2: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
}

fn test_list1() {
  var@0 : ();
  l : test1::List<i32>;
  var@2 : std::boxed::Box<test1::List<i32>>;
  var@3 : test1::List<i32>;

  set_discriminant(var@3, 1);
  var@2 := move alloc::boxed::Box<test1::List<i32>>::new(move var@3);
  (l as test1::List::Cons).0 := 0: i32;
  (l as test1::List::Cons).1 := move var@2;
  set_discriminant(l, 0);
  drop(l);
  return
}

fn test_box1() {
  var@0 : ();
  b : std::boxed::Box<i32>;
  x : &'_ mut (i32);
  var@3 : &'_ mut (std::boxed::Box<i32>);
  x : &'_ (i32);
  var@5 : &'_ (std::boxed::Box<i32>);
  var@6 : bool;
  var@7 : bool;
  var@8 : i32;

  b := move alloc::boxed::Box<i32>::new(0: i32);
  var@3 := &two-phase b;
  x := move core::ops::deref::DerefMut<i32>::deref_mut(move var@3);
  *(x) := 1: i32;
  var@5 := &b;
  x := move core::ops::deref::Deref<Box<i32>>::deref(move var@5);
  var@8 := copy *(x);
  var@7 := move var@8 == 1: i32;
  var@6 := Â¬ move var@7;
  assert(Â¬move var@6);
  drop(b);
  return
}

fn copy_int(x : i32) -> i32 {
  var@0 : i32;
  x : i32;

  var@0 := copy x;
  return
}

fn test_copy_int() {
  var@0 : ();
  x : i32;
  px : &'_ (i32);
  y : i32;
  var@4 : i32;
  var@5 : bool;
  var@6 : bool;
  var@7 : i32;
  var@8 : i32;

  x := 0: i32;
  px := &x;
  var@4 := copy x;
  y := move copy_int(move var@4);
  var@7 := copy *(px);
  var@8 := copy y;
  var@6 := move var@7 == move var@8;
  var@5 := Â¬ move var@6;
  assert(Â¬move var@5);
  return
}

fn is_cons<0,T>(l : &0 (test1::List<T>)) -> bool {
  var@0 : bool;
  l : &'_ (test1::List<T>);
  var@2 : isize;

  var@2 := discriminant(*(l));
  switch (move var@2) {
    0: isize => {
      var@0 := true
    }
    1: isize => {
      var@0 := false
    }
    _ => {
      panic
    }
  };
  return
}

fn test_is_cons() {
  var@0 : ();
  l : test1::List<i32>;
  var@2 : std::boxed::Box<test1::List<i32>>;
  var@3 : test1::List<i32>;
  var@4 : bool;
  var@5 : bool;
  var@6 : &'_ (test1::List<i32>);
  var@7 : &'_ (test1::List<i32>);

  set_discriminant(var@3, 1);
  var@2 := move alloc::boxed::Box<test1::List<i32>>::new(move var@3);
  (l as test1::List::Cons).0 := 0: i32;
  (l as test1::List::Cons).1 := move var@2;
  set_discriminant(l, 0);
  var@7 := &l;
  var@6 := copy var@7;
  var@5 := move is_cons<i32>(move var@6);
  var@4 := Â¬ move var@5;
  assert(Â¬move var@4);
  drop(l);
  return
}

fn split_list<T>(l : test1::List<T>) -> (T, test1::List<T>) {
  var@0 : (T, test1::List<T>);
  l : test1::List<T>;
  var@2 : isize;
  hd : T;
  tl : std::boxed::Box<test1::List<T>>;
  var@5 : T;
  var@6 : test1::List<T>;
  var@7 : bool;
  var@8 : bool;
  var@9 : ();
  var@10 : isize;

  var@8 := false;
  var@7 := false;
  var@7 := true;
  var@8 := true;
  var@2 := discriminant(l);
  switch (move var@2) {
    0: isize => {
      var@8 := false;
      hd := move (l as test1::List::Cons).0;
      var@7 := false;
      tl := move (l as test1::List::Cons).1;
      var@5 := move hd;
      var@6 := move deref_box(tl);
      (var@0).0 := move var@5;
      (var@0).1 := move var@6;
      var@9 := move alloc::alloc::box_free<test1::List<T>>(move tl);
      return
    }
    _ => {
      panic
    }
  }
}

fn test_split_list() {
  var@0 : ();
  l : test1::List<i32>;
  var@2 : std::boxed::Box<test1::List<i32>>;
  var@3 : test1::List<i32>;
  hd : i32;
  tl : test1::List<i32>;
  var@6 : (i32, test1::List<i32>);
  var@7 : test1::List<i32>;
  var@8 : bool;
  var@9 : bool;
  var@10 : i32;

  set_discriminant(var@3, 1);
  var@2 := move alloc::boxed::Box<test1::List<i32>>::new(move var@3);
  (l as test1::List::Cons).0 := 0: i32;
  (l as test1::List::Cons).1 := move var@2;
  set_discriminant(l, 0);
  var@7 := move l;
  var@6 := move split_list<i32>(move var@7);
  hd := copy (var@6).0;
  tl := move (var@6).1;
  var@10 := copy hd;
  var@9 := move var@10 == 0: i32;
  var@8 := Â¬ move var@9;
  assert(Â¬move var@8);
  drop(tl);
  return
}

fn get_elem<'a,T>(b : bool, x : &'a mut (T), y : &'a mut (T)) -> &'a mut (T) {
  var@0 : &'_ mut (T);
  b : bool;
  x : &'_ mut (T);
  y : &'_ mut (T);
  var@4 : bool;

  var@4 := copy b;
  if (move var@4) {
    var@0 := &mut *(x)
  }
  else {
    var@0 := move y
  };
  return
}

fn get_elem_test() {
  var@0 : ();
  x : i32;
  y : i32;
  z : &'_ mut (i32);
  var@4 : &'_ mut (i32);
  var@5 : &'_ mut (i32);
  var@6 : &'_ mut (i32);
  var@7 : &'_ mut (i32);
  var@8 : i32;
  var@9 : (i32, bool);
  var@10 : bool;
  var@11 : bool;
  var@12 : i32;
  var@13 : bool;
  var@14 : bool;
  var@15 : i32;
  var@16 : bool;
  var@17 : bool;
  var@18 : i32;

  x := 0: i32;
  y := 0: i32;
  var@5 := &mut x;
  var@4 := &two-phase *(var@5);
  var@7 := &mut y;
  var@6 := &two-phase *(var@7);
  z := move get_elem<i32>(true, move var@4, move var@6);
  var@8 := copy *(z);
  *(z) := copy var@8 + 1: i32;
  var@12 := copy *(z);
  var@11 := move var@12 == 1: i32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  var@15 := copy x;
  var@14 := move var@15 == 1: i32;
  var@13 := Â¬ move var@14;
  assert(Â¬move var@13);
  var@18 := copy y;
  var@17 := move var@18 == 0: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
}

fn id_mut_mut<'a,'b,T>(x : &'a mut (&'b mut (T))) -> &'a mut (&'b mut (T)) {
  var@0 : &'_ mut (&'_ mut (T));
  x : &'_ mut (&'_ mut (T));
  var@2 : &'_ mut (&'_ mut (T));

  var@2 := &mut *(x);
  var@0 := &mut *(var@2);
  return
}

fn id_mut_pair<'a,T>(x : &'a mut ((&'a mut (T), u32))) -> &'a mut ((&'a mut (T), u32)) {
  var@0 : &'_ mut ((&'_ mut (T), u32));
  x : &'_ mut ((&'_ mut (T), u32));
  var@2 : &'_ mut ((&'_ mut (T), u32));

  var@2 := &mut *(x);
  var@0 := &mut *(var@2);
  return
}

fn id_mut_pair_test1() {
  var@0 : ();
  x : u32;
  px : &'_ mut (u32);
  p : (&'_ mut (u32), u32);
  var@4 : &'_ mut (u32);
  pp0 : &'_ mut ((&'_ mut (u32), u32));
  pp1 : &'_ mut ((&'_ mut (u32), u32));
  var@7 : &'_ mut ((&'_ mut (u32), u32));
  y : u32;
  var@9 : &'_ mut (u32);
  var@10 : &'_ mut (u32);

  x := 0: u32;
  px := &mut x;
  var@4 := move px;
  (p).0 := move var@4;
  (p).1 := 1: u32;
  pp0 := &mut p;
  var@7 := &two-phase *(pp0);
  pp1 := move id_mut_pair<u32>(move var@7);
  y := 2: u32;
  var@10 := &mut y;
  var@9 := &mut *(var@10);
  *((pp1).0) := move var@9;
  *((pp1).1) := 3: u32;
  return
}

fn id_mut_mut_pair<'a,T>(x : &'a mut (&'a mut ((&'a mut (T), u32)))) -> &'a mut (&'a mut ((&'a mut (T), u32))) {
  var@0 : &'_ mut (&'_ mut ((&'_ mut (T), u32)));
  x : &'_ mut (&'_ mut ((&'_ mut (T), u32)));
  var@2 : &'_ mut (&'_ mut ((&'_ mut (T), u32)));

  var@2 := &mut *(x);
  var@0 := &mut *(var@2);
  return
}

fn id_mut_mut_mut_same<'a,T>(x : &'a mut (&'a mut (&'a mut (u32)))) -> &'a mut (&'a mut (&'a mut (u32))) {
  var@0 : &'_ mut (&'_ mut (&'_ mut (u32)));
  x : &'_ mut (&'_ mut (&'_ mut (u32)));
  var@2 : &'_ mut (&'_ mut (&'_ mut (u32)));

  var@2 := &mut *(x);
  var@0 := &mut *(var@2);
  return
}

fn id_borrow1<'a,'b>(_x : &'a mut (&'b (u32)), _y : &'a (&'a mut (u32))) {
  var@0 : ();
  _x : &'_ mut (&'_ (u32));
  _y : &'_ (&'_ mut (u32));

  return
}

fn test_loop1(max : u32) -> u32 {
  s : u32;
  max : u32;
  i : u32;
  var@3 : bool;
  var@4 : u32;
  var@5 : u32;
  var@6 : u32;
  var@7 : (u32, bool);
  var@8 : (u32, bool);
  var@9 : (u32, bool);

  i := 0: u32;
  s := 0: u32;
  loop {
    var@4 := copy i;
    var@5 := copy max;
    var@3 := move var@4 < move var@5;
    if (move var@3) {
      var@6 := copy i;
      s := copy s + copy var@6;
      i := copy i + 1: u32;
      continue 0
    }
    else {
      break 0
    }
  };
  s := copy s * 2: u32;
  return
}

fn test_loop2(max : u32) -> u32 {
  s : u32;
  max : u32;
  i : u32;
  var@3 : bool;
  var@4 : u32;
  var@5 : u32;
  var@6 : u32;
  var@7 : u32;
  var@8 : (u32, bool);
  var@9 : (u32, bool);

  i := 0: u32;
  s := 0: u32;
  loop {
    var@4 := copy i;
    var@5 := copy max;
    var@3 := move var@4 < move var@5;
    if (move var@3) {
      var@6 := copy i;
      switch (move var@6) {
        17: u32 => {
          break 0
        }
        _ => {
          var@7 := copy i;
          s := copy s + copy var@7;
          i := copy i + 1: u32;
          continue 0
        }
      }
    }
    else {
      break 0
    }
  };
  return
}

fn test_loop3(max : u32) -> u32 {
  s : u32;
  max : u32;
  i : u32;
  j : u32;
  var@4 : bool;
  var@5 : u32;
  var@6 : u32;
  var@7 : bool;
  var@8 : u32;
  var@9 : u32;
  var@10 : u32;
  var@11 : u32;
  var@12 : u32;
  var@13 : (u32, bool);
  var@14 : u32;
  var@15 : (u32, bool);
  var@16 : (u32, bool);
  var@17 : u32;
  var@18 : (u32, bool);
  var@19 : (u32, bool);

  i := 0: u32;
  j := 0: u32;
  s := 0: u32;
  loop {
    var@5 := copy i;
    var@6 := copy max;
    var@4 := move var@5 < move var@6;
    if (move var@4) {
      loop {
        var@8 := copy j;
        var@9 := copy max;
        var@7 := move var@8 < move var@9;
        if (move var@7) {
          var@11 := copy i;
          var@12 := copy j;
          var@10 := copy var@11 + copy var@12;
          switch (move var@10) {
            17: u32 => {
              continue 0
            }
            _ => {
              nop
            }
          };
          var@14 := copy i;
          s := copy s + copy var@14;
          j := copy j + 1: u32;
          continue 1
        }
        else {
          break 0
        }
      };
      j := 0: u32;
      var@17 := copy i;
      s := copy s + copy var@17;
      i := copy i + 1: u32;
      continue 0
    }
    else {
      break 0
    }
  };
  return
}

fn test_loop4(max : u32) -> u32 {
  s : u32;
  max : u32;
  i : u32;
  j : u32;
  var@4 : bool;
  var@5 : u32;
  var@6 : u32;
  var@7 : bool;
  var@8 : u32;
  var@9 : u32;
  var@10 : u32;
  var@11 : u32;
  var@12 : u32;
  var@13 : (u32, bool);
  var@14 : u32;
  var@15 : (u32, bool);
  var@16 : (u32, bool);
  var@17 : u32;
  var@18 : (u32, bool);
  var@19 : (u32, bool);

  i := 1: u32;
  j := 0: u32;
  s := 0: u32;
  loop {
    var@5 := copy i;
    var@6 := copy max;
    var@4 := move var@5 < move var@6;
    if (move var@4) {
      loop {
        var@8 := copy j;
        var@9 := copy max;
        var@7 := move var@8 < move var@9;
        if (move var@7) {
          var@11 := copy i;
          var@12 := copy j;
          var@10 := copy var@11 + copy var@12;
          switch (move var@10) {
            17: u32 => {
              continue 0
            }
            _ => {
              nop
            }
          };
          var@14 := copy i;
          s := copy s + copy var@14;
          j := copy j + 1: u32;
          break 1
        }
        else {
          break 0
        }
      };
      j := 0: u32;
      var@17 := copy i;
      s := copy s + copy var@17;
      i := copy i + 1: u32;
      continue 0
    }
    else {
      break 0
    }
  };
  return
}

fn test_loop5(max : u32) -> u32 {
  s : u32;
  max : u32;
  i : u32;
  j : u32;
  var@4 : bool;
  var@5 : u32;
  var@6 : u32;
  var@7 : bool;
  var@8 : u32;
  var@9 : u32;
  var@10 : u32;
  var@11 : (u32, bool);
  var@12 : (u32, bool);
  var@13 : u32;
  var@14 : (u32, bool);
  var@15 : (u32, bool);

  i := 0: u32;
  j := 0: u32;
  s := 0: u32;
  loop {
    var@5 := copy i;
    var@6 := copy max;
    var@4 := move var@5 < move var@6;
    if (move var@4) {
      loop {
        var@8 := copy j;
        var@9 := copy max;
        var@7 := move var@8 < move var@9;
        if (move var@7) {
          var@10 := copy j;
          s := copy s + copy var@10;
          j := copy j + 1: u32;
          continue 0
        }
        else {
          break 0
        }
      };
      var@13 := copy i;
      s := copy s + copy var@13;
      i := copy i + 1: u32;
      continue 0
    }
    else {
      break 0
    }
  };
  return
}

fn test_loop6(max : u32) -> u32 {
  s : u32;
  max : u32;
  i : u32;
  var@3 : bool;
  var@4 : u32;
  var@5 : u32;
  var@6 : bool;
  var@7 : u32;
  var@8 : u32;
  var@9 : (u32, bool);
  var@10 : (u32, bool);
  var@11 : (u32, bool);

  i := 0: u32;
  s := 0: u32;
  loop {
    var@4 := copy i;
    var@5 := copy max;
    var@3 := move var@4 < move var@5;
    if (move var@3) {
      var@7 := copy i;
      var@6 := move var@7 > 3: u32;
      if (move var@6) {
        break 0
      }
      else {
        var@8 := copy i;
        s := copy s + copy var@8;
        i := copy i + 1: u32;
        continue 0
      }
    }
    else {
      break 0
    }
  };
  s := copy s + 1: u32;
  return
}

fn test_static(x : &'static (u32)) -> &'static (u32) {
  var@0 : &'_ (u32);
  x : &'_ (u32);

  var@0 := copy x;
  return
}

fn test_char() -> char {
  var@0 : char;

  var@0 := a;
  return
}

fn test_loops() {
  var@0 : ();
  x : u32;
  var@2 : bool;
  var@3 : bool;
  var@4 : u32;
  x : u32;
  var@6 : bool;
  var@7 : bool;
  var@8 : u32;
  x : u32;
  var@10 : bool;
  var@11 : bool;
  var@12 : u32;
  x : u32;
  var@14 : bool;
  var@15 : bool;
  var@16 : u32;
  x : u32;
  var@18 : bool;
  var@19 : bool;
  var@20 : u32;
  x : u32;
  var@22 : bool;
  var@23 : bool;
  var@24 : u32;

  x := move test_loop1(2: u32);
  var@4 := copy x;
  var@3 := move var@4 == 2: u32;
  var@2 := Â¬ move var@3;
  assert(Â¬move var@2);
  x := move test_loop2(2: u32);
  var@8 := copy x;
  var@7 := move var@8 == 1: u32;
  var@6 := Â¬ move var@7;
  assert(Â¬move var@6);
  x := move test_loop3(2: u32);
  var@12 := copy x;
  var@11 := move var@12 == 3: u32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  x := move test_loop4(20: u32);
  var@16 := copy x;
  var@15 := move var@16 == 1: u32;
  var@14 := Â¬ move var@15;
  assert(Â¬move var@14);
  x := move test_loop5(2: u32);
  var@20 := copy x;
  var@19 := move var@20 == 2: u32;
  var@18 := Â¬ move var@19;
  assert(Â¬move var@18);
  x := move test_loop6(2: u32);
  var@24 := copy x;
  var@23 := move var@24 == 2: u32;
  var@22 := Â¬ move var@23;
  assert(Â¬move var@22);
  return
}

fn id_mut_mut_test1() {
  var@0 : ();
  x : i32;
  px : &'_ mut (i32);
  ppx : &'_ mut (&'_ mut (i32));
  ppy : &'_ mut (&'_ mut (i32));
  var@5 : &'_ mut (&'_ mut (i32));
  var@6 : bool;
  var@7 : bool;
  var@8 : i32;
  var@9 : bool;
  var@10 : bool;
  var@11 : i32;

  x := 0: i32;
  px := &mut x;
  ppx := &mut px;
  var@5 := &two-phase *(ppx);
  ppy := move id_mut_mut<i32>(move var@5);
  *(*(ppy)) := 1: i32;
  var@8 := copy *(px);
  var@7 := move var@8 == 1: i32;
  var@6 := Â¬ move var@7;
  assert(Â¬move var@6);
  var@11 := copy x;
  var@10 := move var@11 == 1: i32;
  var@9 := Â¬ move var@10;
  assert(Â¬move var@9);
  return
}

fn id_mut_mut_test2() {
  var@0 : ();
  x : i32;
  px : &'_ mut (i32);
  ppx : &'_ mut (&'_ mut (i32));
  ppy : &'_ mut (&'_ mut (i32));
  var@5 : &'_ mut (&'_ mut (i32));
  y : i32;
  py : &'_ mut (i32);
  var@8 : &'_ mut (i32);
  var@9 : bool;
  var@10 : bool;
  var@11 : i32;
  var@12 : bool;
  var@13 : bool;
  var@14 : i32;
  var@15 : bool;
  var@16 : bool;
  var@17 : i32;

  x := 0: i32;
  px := &mut x;
  ppx := &mut px;
  var@5 := &two-phase *(ppx);
  ppy := move id_mut_mut<i32>(move var@5);
  *(*(ppy)) := 1: i32;
  y := 2: i32;
  py := &mut y;
  var@8 := &mut *(py);
  *(ppy) := move var@8;
  var@11 := copy *(px);
  var@10 := move var@11 == 2: i32;
  var@9 := Â¬ move var@10;
  assert(Â¬move var@9);
  *(px) := 3: i32;
  var@14 := copy x;
  var@13 := move var@14 == 1: i32;
  var@12 := Â¬ move var@13;
  assert(Â¬move var@12);
  var@17 := copy y;
  var@16 := move var@17 == 3: i32;
  var@15 := Â¬ move var@16;
  assert(Â¬move var@15);
  return
}

fn id_mut_mut_test3() {
  var@0 : ();
  x : i32;
  px : &'_ mut (i32);
  ppx : &'_ mut (&'_ mut (i32));
  ppy : &'_ mut (&'_ mut (i32));
  var@5 : &'_ mut (&'_ mut (i32));
  ppz : &'_ mut (&'_ mut (i32));
  var@7 : &'_ mut (&'_ mut (i32));
  var@8 : bool;
  var@9 : bool;
  var@10 : i32;
  var@11 : bool;
  var@12 : bool;
  var@13 : i32;

  x := 0: i32;
  px := &mut x;
  ppx := &mut px;
  var@5 := &two-phase *(ppx);
  ppy := move id_mut_mut<i32>(move var@5);
  *(*(ppy)) := 1: i32;
  var@7 := &two-phase *(ppy);
  ppz := move id_mut_mut<i32>(move var@7);
  *(*(ppz)) := 2: i32;
  var@10 := copy *(px);
  var@9 := move var@10 == 2: i32;
  var@8 := Â¬ move var@9;
  assert(Â¬move var@8);
  var@13 := copy x;
  var@12 := move var@13 == 2: i32;
  var@11 := Â¬ move var@12;
  assert(Â¬move var@11);
  return
}

[[32mDebug[39m] test_unit_function: test2
[[32mDebug[39m] 
**About to evaluate statement**: [
  x := 23: u32;
  y := 44: u32;
  z := 67: u32;
  var@5 := copy x;
  (p).x := move var@5;
  (p).y := 67: u32;
  (s as test1::Sum::Right).0 := true;
  set_discriminant(s, 1);
  (o as test1::One::One).0 := 3: u64;
  set_discriminant(o, 0);
  set_discriminant(e0, 0);
  set_discriminant(enum0, 0);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (y) -> â¥ : u32 ;
  Some (z) -> â¥ : u32 ;
  Some (p) -> â¥ : test1::Pair<u32, u32> ;
  Some (var@5) -> â¥ : u32 ;
  Some (s) -> â¥ : test1::Sum<u32, bool> ;
  Some (o) -> â¥ : test1::One<u64> ;
  Some (e0) -> â¥ : test1::EmptyEnum ;
  Some (e1) -> â¥ : test1::EmptyEnum ;
  Some (enum0) -> â¥ : test1::Enum ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  x := 23: u32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (y) -> â¥ : u32 ;
  Some (z) -> â¥ : u32 ;
  Some (p) -> â¥ : test1::Pair<u32, u32> ;
  Some (var@5) -> â¥ : u32 ;
  Some (s) -> â¥ : test1::Sum<u32, bool> ;
  Some (o) -> â¥ : test1::One<u64> ;
  Some (e0) -> â¥ : test1::EmptyEnum ;
  Some (e1) -> â¥ : test1::EmptyEnum ;
  Some (enum0) -> â¥ : test1::Enum ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (y) -> â¥ : u32 ;
  Some (z) -> â¥ : u32 ;
  Some (p) -> â¥ : test1::Pair<u32, u32> ;
  Some (var@5) -> â¥ : u32 ;
  Some (s) -> â¥ : test1::Sum<u32, bool> ;
  Some (o) -> â¥ : test1::One<u64> ;
  Some (e0) -> â¥ : test1::EmptyEnum ;
  Some (e1) -> â¥ : test1::EmptyEnum ;
  Some (enum0) -> â¥ : test1::Enum ;
}


- op:
23: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  y := 44: u32;
  z := 67: u32;
  var@5 := copy x;
  (p).x := move var@5;
  (p).y := 67: u32;
  (s as test1::Sum::Right).0 := true;
  set_discriminant(s, 1);
  (o as test1::One::One).0 := 3: u64;
  set_discriminant(o, 0);
  set_discriminant(e0, 0);
  set_discriminant(enum0, 0);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 23: u32 ;
  Some (y) -> â¥ : u32 ;
  Some (z) -> â¥ : u32 ;
  Some (p) -> â¥ : test1::Pair<u32, u32> ;
  Some (var@5) -> â¥ : u32 ;
  Some (s) -> â¥ : test1::Sum<u32, bool> ;
  Some (o) -> â¥ : test1::One<u64> ;
  Some (e0) -> â¥ : test1::EmptyEnum ;
  Some (e1) -> â¥ : test1::EmptyEnum ;
  Some (enum0) -> â¥ : test1::Enum ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  y := 44: u32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 23: u32 ;
  Some (y) -> â¥ : u32 ;
  Some (z) -> â¥ : u32 ;
  Some (p) -> â¥ : test1::Pair<u32, u32> ;
  Some (var@5) -> â¥ : u32 ;
  Some (s) -> â¥ : test1::Sum<u32, bool> ;
  Some (o) -> â¥ : test1::One<u64> ;
  Some (e0) -> â¥ : test1::EmptyEnum ;
  Some (e1) -> â¥ : test1::EmptyEnum ;
  Some (enum0) -> â¥ : test1::Enum ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 23: u32 ;
  Some (y) -> â¥ : u32 ;
  Some (z) -> â¥ : u32 ;
  Some (p) -> â¥ : test1::Pair<u32, u32> ;
  Some (var@5) -> â¥ : u32 ;
  Some (s) -> â¥ : test1::Sum<u32, bool> ;
  Some (o) -> â¥ : test1::One<u64> ;
  Some (e0) -> â¥ : test1::EmptyEnum ;
  Some (e1) -> â¥ : test1::EmptyEnum ;
  Some (enum0) -> â¥ : test1::Enum ;
}


- op:
44: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  z := 67: u32;
  var@5 := copy x;
  (p).x := move var@5;
  (p).y := 67: u32;
  (s as test1::Sum::Right).0 := true;
  set_discriminant(s, 1);
  (o as test1::One::One).0 := 3: u64;
  set_discriminant(o, 0);
  set_discriminant(e0, 0);
  set_discriminant(enum0, 0);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 23: u32 ;
  Some (y) -> 44: u32 ;
  Some (z) -> â¥ : u32 ;
  Some (p) -> â¥ : test1::Pair<u32, u32> ;
  Some (var@5) -> â¥ : u32 ;
  Some (s) -> â¥ : test1::Sum<u32, bool> ;
  Some (o) -> â¥ : test1::One<u64> ;
  Some (e0) -> â¥ : test1::EmptyEnum ;
  Some (e1) -> â¥ : test1::EmptyEnum ;
  Some (enum0) -> â¥ : test1::Enum ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  z := 67: u32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 23: u32 ;
  Some (y) -> 44: u32 ;
  Some (z) -> â¥ : u32 ;
  Some (p) -> â¥ : test1::Pair<u32, u32> ;
  Some (var@5) -> â¥ : u32 ;
  Some (s) -> â¥ : test1::Sum<u32, bool> ;
  Some (o) -> â¥ : test1::One<u64> ;
  Some (e0) -> â¥ : test1::EmptyEnum ;
  Some (e1) -> â¥ : test1::EmptyEnum ;
  Some (enum0) -> â¥ : test1::Enum ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 23: u32 ;
  Some (y) -> 44: u32 ;
  Some (z) -> â¥ : u32 ;
  Some (p) -> â¥ : test1::Pair<u32, u32> ;
  Some (var@5) -> â¥ : u32 ;
  Some (s) -> â¥ : test1::Sum<u32, bool> ;
  Some (o) -> â¥ : test1::One<u64> ;
  Some (e0) -> â¥ : test1::EmptyEnum ;
  Some (e1) -> â¥ : test1::EmptyEnum ;
  Some (enum0) -> â¥ : test1::Enum ;
}


- op:
67: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := copy x;
  (p).x := move var@5;
  (p).y := 67: u32;
  (s as test1::Sum::Right).0 := true;
  set_discriminant(s, 1);
  (o as test1::One::One).0 := 3: u64;
  set_discriminant(o, 0);
  set_discriminant(e0, 0);
  set_discriminant(enum0, 0);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 23: u32 ;
  Some (y) -> 44: u32 ;
  Some (z) -> 67: u32 ;
  Some (p) -> â¥ : test1::Pair<u32, u32> ;
  Some (var@5) -> â¥ : u32 ;
  Some (s) -> â¥ : test1::Sum<u32, bool> ;
  Some (o) -> â¥ : test1::One<u64> ;
  Some (e0) -> â¥ : test1::EmptyEnum ;
  Some (e1) -> â¥ : test1::EmptyEnum ;
  Some (enum0) -> â¥ : test1::Enum ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := copy x
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 23: u32 ;
  Some (y) -> 44: u32 ;
  Some (z) -> 67: u32 ;
  Some (p) -> â¥ : test1::Pair<u32, u32> ;
  Some (var@5) -> â¥ : u32 ;
  Some (s) -> â¥ : test1::Sum<u32, bool> ;
  Some (o) -> â¥ : test1::One<u64> ;
  Some (e0) -> â¥ : test1::EmptyEnum ;
  Some (e1) -> â¥ : test1::EmptyEnum ;
  Some (enum0) -> â¥ : test1::Enum ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 23: u32 ;
  Some (y) -> 44: u32 ;
  Some (z) -> 67: u32 ;
  Some (p) -> â¥ : test1::Pair<u32, u32> ;
  Some (var@5) -> â¥ : u32 ;
  Some (s) -> â¥ : test1::Sum<u32, bool> ;
  Some (o) -> â¥ : test1::One<u64> ;
  Some (e0) -> â¥ : test1::EmptyEnum ;
  Some (e1) -> â¥ : test1::EmptyEnum ;
  Some (enum0) -> â¥ : test1::Enum ;
}


- op:
copy x

[[32mDebug[39m] 
**About to evaluate statement**: [
  (p).x := move var@5;
  (p).y := 67: u32;
  (s as test1::Sum::Right).0 := true;
  set_discriminant(s, 1);
  (o as test1::One::One).0 := 3: u64;
  set_discriminant(o, 0);
  set_discriminant(e0, 0);
  set_discriminant(enum0, 0);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 23: u32 ;
  Some (y) -> 44: u32 ;
  Some (z) -> 67: u32 ;
  Some (p) -> â¥ : test1::Pair<u32, u32> ;
  Some (var@5) -> 23: u32 ;
  Some (s) -> â¥ : test1::Sum<u32, bool> ;
  Some (o) -> â¥ : test1::One<u64> ;
  Some (e0) -> â¥ : test1::EmptyEnum ;
  Some (e1) -> â¥ : test1::EmptyEnum ;
  Some (enum0) -> â¥ : test1::Enum ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  (p).x := move var@5
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 23: u32 ;
  Some (y) -> 44: u32 ;
  Some (z) -> 67: u32 ;
  Some (p) -> â¥ : test1::Pair<u32, u32> ;
  Some (var@5) -> 23: u32 ;
  Some (s) -> â¥ : test1::Sum<u32, bool> ;
  Some (o) -> â¥ : test1::One<u64> ;
  Some (e0) -> â¥ : test1::EmptyEnum ;
  Some (e1) -> â¥ : test1::EmptyEnum ;
  Some (enum0) -> â¥ : test1::Enum ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 23: u32 ;
  Some (y) -> 44: u32 ;
  Some (z) -> 67: u32 ;
  Some (p) -> â¥ : test1::Pair<u32, u32> ;
  Some (var@5) -> 23: u32 ;
  Some (s) -> â¥ : test1::Sum<u32, bool> ;
  Some (o) -> â¥ : test1::One<u64> ;
  Some (e0) -> â¥ : test1::EmptyEnum ;
  Some (e1) -> â¥ : test1::EmptyEnum ;
  Some (enum0) -> â¥ : test1::Enum ;
}


- op:
move var@5

[[32mDebug[39m] expand_bottom_value_from_projection:
pe: (Expressions.Field ((Expressions.ProjAdt (0, None)), 0))
ty: (Types.Adt ((Types.AdtId 0), [],
   [(Types.Integer Types.U32); (Types.Integer Types.U32)]))
[[32mDebug[39m] 
**About to evaluate statement**: [
  (p).y := 67: u32;
  (s as test1::Sum::Right).0 := true;
  set_discriminant(s, 1);
  (o as test1::One::One).0 := 3: u64;
  set_discriminant(o, 0);
  set_discriminant(e0, 0);
  set_discriminant(enum0, 0);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 23: u32 ;
  Some (y) -> 44: u32 ;
  Some (z) -> 67: u32 ;
  Some (p) -> test1::Pair { x = 23: u32; y = â¥ : u32; } ;
  Some (var@5) -> â¥ : u32 ;
  Some (s) -> â¥ : test1::Sum<u32, bool> ;
  Some (o) -> â¥ : test1::One<u64> ;
  Some (e0) -> â¥ : test1::EmptyEnum ;
  Some (e1) -> â¥ : test1::EmptyEnum ;
  Some (enum0) -> â¥ : test1::Enum ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  (p).y := 67: u32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 23: u32 ;
  Some (y) -> 44: u32 ;
  Some (z) -> 67: u32 ;
  Some (p) -> test1::Pair { x = 23: u32; y = â¥ : u32; } ;
  Some (var@5) -> â¥ : u32 ;
  Some (s) -> â¥ : test1::Sum<u32, bool> ;
  Some (o) -> â¥ : test1::One<u64> ;
  Some (e0) -> â¥ : test1::EmptyEnum ;
  Some (e1) -> â¥ : test1::EmptyEnum ;
  Some (enum0) -> â¥ : test1::Enum ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 23: u32 ;
  Some (y) -> 44: u32 ;
  Some (z) -> 67: u32 ;
  Some (p) -> test1::Pair { x = 23: u32; y = â¥ : u32; } ;
  Some (var@5) -> â¥ : u32 ;
  Some (s) -> â¥ : test1::Sum<u32, bool> ;
  Some (o) -> â¥ : test1::One<u64> ;
  Some (e0) -> â¥ : test1::EmptyEnum ;
  Some (e1) -> â¥ : test1::EmptyEnum ;
  Some (enum0) -> â¥ : test1::Enum ;
}


- op:
67: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  (s as test1::Sum::Right).0 := true;
  set_discriminant(s, 1);
  (o as test1::One::One).0 := 3: u64;
  set_discriminant(o, 0);
  set_discriminant(e0, 0);
  set_discriminant(enum0, 0);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 23: u32 ;
  Some (y) -> 44: u32 ;
  Some (z) -> 67: u32 ;
  Some (p) -> test1::Pair { x = 23: u32; y = 67: u32; } ;
  Some (var@5) -> â¥ : u32 ;
  Some (s) -> â¥ : test1::Sum<u32, bool> ;
  Some (o) -> â¥ : test1::One<u64> ;
  Some (e0) -> â¥ : test1::EmptyEnum ;
  Some (e1) -> â¥ : test1::EmptyEnum ;
  Some (enum0) -> â¥ : test1::Enum ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  (s as test1::Sum::Right).0 := true
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 23: u32 ;
  Some (y) -> 44: u32 ;
  Some (z) -> 67: u32 ;
  Some (p) -> test1::Pair { x = 23: u32; y = 67: u32; } ;
  Some (var@5) -> â¥ : u32 ;
  Some (s) -> â¥ : test1::Sum<u32, bool> ;
  Some (o) -> â¥ : test1::One<u64> ;
  Some (e0) -> â¥ : test1::EmptyEnum ;
  Some (e1) -> â¥ : test1::EmptyEnum ;
  Some (enum0) -> â¥ : test1::Enum ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 23: u32 ;
  Some (y) -> 44: u32 ;
  Some (z) -> 67: u32 ;
  Some (p) -> test1::Pair { x = 23: u32; y = 67: u32; } ;
  Some (var@5) -> â¥ : u32 ;
  Some (s) -> â¥ : test1::Sum<u32, bool> ;
  Some (o) -> â¥ : test1::One<u64> ;
  Some (e0) -> â¥ : test1::EmptyEnum ;
  Some (e1) -> â¥ : test1::EmptyEnum ;
  Some (enum0) -> â¥ : test1::Enum ;
}


- op:
true

[[32mDebug[39m] expand_bottom_value_from_projection:
pe: (Expressions.Field ((Expressions.ProjAdt (6, (Some 1))), 0))
ty: (Types.Adt ((Types.AdtId 6), [], [(Types.Integer Types.U32); Types.Bool]))
[[32mDebug[39m] 
**About to evaluate statement**: [
  set_discriminant(s, 1);
  (o as test1::One::One).0 := 3: u64;
  set_discriminant(o, 0);
  set_discriminant(e0, 0);
  set_discriminant(enum0, 0);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 23: u32 ;
  Some (y) -> 44: u32 ;
  Some (z) -> 67: u32 ;
  Some (p) -> test1::Pair { x = 23: u32; y = 67: u32; } ;
  Some (var@5) -> â¥ : u32 ;
  Some (s) -> test1::Sum::Right { 0 = true; } ;
  Some (o) -> â¥ : test1::One<u64> ;
  Some (e0) -> â¥ : test1::EmptyEnum ;
  Some (e1) -> â¥ : test1::EmptyEnum ;
  Some (enum0) -> â¥ : test1::Enum ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  set_discriminant(s, 1)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 23: u32 ;
  Some (y) -> 44: u32 ;
  Some (z) -> 67: u32 ;
  Some (p) -> test1::Pair { x = 23: u32; y = 67: u32; } ;
  Some (var@5) -> â¥ : u32 ;
  Some (s) -> test1::Sum::Right { 0 = true; } ;
  Some (o) -> â¥ : test1::One<u64> ;
  Some (e0) -> â¥ : test1::EmptyEnum ;
  Some (e1) -> â¥ : test1::EmptyEnum ;
  Some (enum0) -> â¥ : test1::Enum ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  (o as test1::One::One).0 := 3: u64;
  set_discriminant(o, 0);
  set_discriminant(e0, 0);
  set_discriminant(enum0, 0);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 23: u32 ;
  Some (y) -> 44: u32 ;
  Some (z) -> 67: u32 ;
  Some (p) -> test1::Pair { x = 23: u32; y = 67: u32; } ;
  Some (var@5) -> â¥ : u32 ;
  Some (s) -> test1::Sum::Right { 0 = true; } ;
  Some (o) -> â¥ : test1::One<u64> ;
  Some (e0) -> â¥ : test1::EmptyEnum ;
  Some (e1) -> â¥ : test1::EmptyEnum ;
  Some (enum0) -> â¥ : test1::Enum ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  (o as test1::One::One).0 := 3: u64
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 23: u32 ;
  Some (y) -> 44: u32 ;
  Some (z) -> 67: u32 ;
  Some (p) -> test1::Pair { x = 23: u32; y = 67: u32; } ;
  Some (var@5) -> â¥ : u32 ;
  Some (s) -> test1::Sum::Right { 0 = true; } ;
  Some (o) -> â¥ : test1::One<u64> ;
  Some (e0) -> â¥ : test1::EmptyEnum ;
  Some (e1) -> â¥ : test1::EmptyEnum ;
  Some (enum0) -> â¥ : test1::Enum ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 23: u32 ;
  Some (y) -> 44: u32 ;
  Some (z) -> 67: u32 ;
  Some (p) -> test1::Pair { x = 23: u32; y = 67: u32; } ;
  Some (var@5) -> â¥ : u32 ;
  Some (s) -> test1::Sum::Right { 0 = true; } ;
  Some (o) -> â¥ : test1::One<u64> ;
  Some (e0) -> â¥ : test1::EmptyEnum ;
  Some (e1) -> â¥ : test1::EmptyEnum ;
  Some (enum0) -> â¥ : test1::Enum ;
}


- op:
3: u64

[[32mDebug[39m] expand_bottom_value_from_projection:
pe: (Expressions.Field ((Expressions.ProjAdt (2, (Some 0))), 0))
ty: (Types.Adt ((Types.AdtId 2), [], [(Types.Integer Types.U64)]))
[[32mDebug[39m] 
**About to evaluate statement**: [
  set_discriminant(o, 0);
  set_discriminant(e0, 0);
  set_discriminant(enum0, 0);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 23: u32 ;
  Some (y) -> 44: u32 ;
  Some (z) -> 67: u32 ;
  Some (p) -> test1::Pair { x = 23: u32; y = 67: u32; } ;
  Some (var@5) -> â¥ : u32 ;
  Some (s) -> test1::Sum::Right { 0 = true; } ;
  Some (o) -> test1::One::One { 0 = 3: u64; } ;
  Some (e0) -> â¥ : test1::EmptyEnum ;
  Some (e1) -> â¥ : test1::EmptyEnum ;
  Some (enum0) -> â¥ : test1::Enum ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  set_discriminant(o, 0)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 23: u32 ;
  Some (y) -> 44: u32 ;
  Some (z) -> 67: u32 ;
  Some (p) -> test1::Pair { x = 23: u32; y = 67: u32; } ;
  Some (var@5) -> â¥ : u32 ;
  Some (s) -> test1::Sum::Right { 0 = true; } ;
  Some (o) -> test1::One::One { 0 = 3: u64; } ;
  Some (e0) -> â¥ : test1::EmptyEnum ;
  Some (e1) -> â¥ : test1::EmptyEnum ;
  Some (enum0) -> â¥ : test1::Enum ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  set_discriminant(e0, 0);
  set_discriminant(enum0, 0);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 23: u32 ;
  Some (y) -> 44: u32 ;
  Some (z) -> 67: u32 ;
  Some (p) -> test1::Pair { x = 23: u32; y = 67: u32; } ;
  Some (var@5) -> â¥ : u32 ;
  Some (s) -> test1::Sum::Right { 0 = true; } ;
  Some (o) -> test1::One::One { 0 = 3: u64; } ;
  Some (e0) -> â¥ : test1::EmptyEnum ;
  Some (e1) -> â¥ : test1::EmptyEnum ;
  Some (enum0) -> â¥ : test1::Enum ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  set_discriminant(e0, 0)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 23: u32 ;
  Some (y) -> 44: u32 ;
  Some (z) -> 67: u32 ;
  Some (p) -> test1::Pair { x = 23: u32; y = 67: u32; } ;
  Some (var@5) -> â¥ : u32 ;
  Some (s) -> test1::Sum::Right { 0 = true; } ;
  Some (o) -> test1::One::One { 0 = 3: u64; } ;
  Some (e0) -> â¥ : test1::EmptyEnum ;
  Some (e1) -> â¥ : test1::EmptyEnum ;
  Some (enum0) -> â¥ : test1::Enum ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  set_discriminant(enum0, 0);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 23: u32 ;
  Some (y) -> 44: u32 ;
  Some (z) -> 67: u32 ;
  Some (p) -> test1::Pair { x = 23: u32; y = 67: u32; } ;
  Some (var@5) -> â¥ : u32 ;
  Some (s) -> test1::Sum::Right { 0 = true; } ;
  Some (o) -> test1::One::One { 0 = 3: u64; } ;
  Some (e0) -> test1::EmptyEnum::Empty ;
  Some (e1) -> â¥ : test1::EmptyEnum ;
  Some (enum0) -> â¥ : test1::Enum ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  set_discriminant(enum0, 0)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 23: u32 ;
  Some (y) -> 44: u32 ;
  Some (z) -> 67: u32 ;
  Some (p) -> test1::Pair { x = 23: u32; y = 67: u32; } ;
  Some (var@5) -> â¥ : u32 ;
  Some (s) -> test1::Sum::Right { 0 = true; } ;
  Some (o) -> test1::One::One { 0 = 3: u64; } ;
  Some (e0) -> test1::EmptyEnum::Empty ;
  Some (e1) -> â¥ : test1::EmptyEnum ;
  Some (enum0) -> â¥ : test1::Enum ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 23: u32 ;
  Some (y) -> 44: u32 ;
  Some (z) -> 67: u32 ;
  Some (p) -> test1::Pair { x = 23: u32; y = 67: u32; } ;
  Some (var@5) -> â¥ : u32 ;
  Some (s) -> test1::Sum::Right { 0 = true; } ;
  Some (o) -> test1::One::One { 0 = 3: u64; } ;
  Some (e0) -> test1::EmptyEnum::Empty ;
  Some (e1) -> â¥ : test1::EmptyEnum ;
  Some (enum0) -> test1::Enum::Variant1 ;
}



[[32mDebug[39m] test_unit_function: test3
[[32mDebug[39m] 
**About to evaluate statement**: [
  x := move get_max(4: u32, 3: u32);
  y := move get_max(10: u32, 11: u32);
  var@4 := copy x;
  var@5 := copy y;
  z := copy var@4 + copy var@5;
  var@9 := copy z;
  var@8 := move var@9 == 15: u32;
  var@7 := Â¬ move var@8;
  assert(Â¬move var@7);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (y) -> â¥ : u32 ;
  Some (z) -> â¥ : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  x := move get_max(4: u32, 3: u32)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (y) -> â¥ : u32 ;
  Some (z) -> â¥ : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (y) -> â¥ : u32 ;
  Some (z) -> â¥ : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
}


- op:
4: u32

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (y) -> â¥ : u32 ;
  Some (z) -> â¥ : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
}


- op:
3: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := copy x;
  var@5 := copy y;
  var@3 := move var@4 >= move var@5;
  if (move var@3) {
    var@0 := copy x
  }
  else {
    var@0 := copy y
  };
  return
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (y) -> â¥ : u32 ;
  Some (z) -> â¥ : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> 4: u32 ;
  Some (y) -> 3: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := copy x
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (y) -> â¥ : u32 ;
  Some (z) -> â¥ : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> 4: u32 ;
  Some (y) -> 3: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (y) -> â¥ : u32 ;
  Some (z) -> â¥ : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> 4: u32 ;
  Some (y) -> 3: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
}


- op:
copy x

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := copy y;
  var@3 := move var@4 >= move var@5;
  if (move var@3) {
    var@0 := copy x
  }
  else {
    var@0 := copy y
  };
  return
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (y) -> â¥ : u32 ;
  Some (z) -> â¥ : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> 4: u32 ;
  Some (y) -> 3: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> 4: u32 ;
  Some (var@5) -> â¥ : u32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := copy y
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (y) -> â¥ : u32 ;
  Some (z) -> â¥ : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> 4: u32 ;
  Some (y) -> 3: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> 4: u32 ;
  Some (var@5) -> â¥ : u32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (y) -> â¥ : u32 ;
  Some (z) -> â¥ : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> 4: u32 ;
  Some (y) -> 3: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> 4: u32 ;
  Some (var@5) -> â¥ : u32 ;
}


- op:
copy y

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@3 := move var@4 >= move var@5;
  if (move var@3) {
    var@0 := copy x
  }
  else {
    var@0 := copy y
  };
  return
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (y) -> â¥ : u32 ;
  Some (z) -> â¥ : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> 4: u32 ;
  Some (y) -> 3: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> 4: u32 ;
  Some (var@5) -> 3: u32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@3 := move var@4 >= move var@5
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (y) -> â¥ : u32 ;
  Some (z) -> â¥ : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> 4: u32 ;
  Some (y) -> 3: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> 4: u32 ;
  Some (var@5) -> 3: u32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (y) -> â¥ : u32 ;
  Some (z) -> â¥ : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> 4: u32 ;
  Some (y) -> 3: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> 4: u32 ;
  Some (var@5) -> 3: u32 ;
}


- op:
move var@4

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (y) -> â¥ : u32 ;
  Some (z) -> â¥ : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> 4: u32 ;
  Some (y) -> 3: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> 3: u32 ;
}


- op:
move var@5

[[32mDebug[39m] 
**About to evaluate statement**: [
  if (move var@3) {
    var@0 := copy x
  }
  else {
    var@0 := copy y
  };
  return
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (y) -> â¥ : u32 ;
  Some (z) -> â¥ : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> 4: u32 ;
  Some (y) -> 3: u32 ;
  Some (var@3) -> true ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  if (move var@3) {
    var@0 := copy x
  }
  else {
    var@0 := copy y
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (y) -> â¥ : u32 ;
  Some (z) -> â¥ : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> 4: u32 ;
  Some (y) -> 3: u32 ;
  Some (var@3) -> true ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (y) -> â¥ : u32 ;
  Some (z) -> â¥ : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> 4: u32 ;
  Some (y) -> 3: u32 ;
  Some (var@3) -> true ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
}


- op:
move var@3

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@0 := copy x
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (y) -> â¥ : u32 ;
  Some (z) -> â¥ : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> 4: u32 ;
  Some (y) -> 3: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (y) -> â¥ : u32 ;
  Some (z) -> â¥ : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> 4: u32 ;
  Some (y) -> 3: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
}


- op:
copy x

[[32mDebug[39m] 
**About to evaluate statement**: [
  return
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (y) -> â¥ : u32 ;
  Some (z) -> â¥ : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (var@0) -> 4: u32 ;
  Some (x) -> 4: u32 ;
  Some (y) -> 3: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
}



[[32mDebug[39m] ctx_pop_frame:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (y) -> â¥ : u32 ;
  Some (z) -> â¥ : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (var@0) -> 4: u32 ;
  Some (x) -> 4: u32 ;
  Some (y) -> 3: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
}

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (y) -> â¥ : u32 ;
  Some (z) -> â¥ : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (var@0) -> 4: u32 ;
  Some (x) -> 4: u32 ;
  Some (y) -> 3: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
}


- op:
move var@0

[[32mDebug[39m] 
**About to evaluate statement**: [
  y := move get_max(10: u32, 11: u32);
  var@4 := copy x;
  var@5 := copy y;
  z := copy var@4 + copy var@5;
  var@9 := copy z;
  var@8 := move var@9 == 15: u32;
  var@7 := Â¬ move var@8;
  assert(Â¬move var@7);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 4: u32 ;
  Some (y) -> â¥ : u32 ;
  Some (z) -> â¥ : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 4: u32 ;
  None -> 3: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  y := move get_max(10: u32, 11: u32)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 4: u32 ;
  Some (y) -> â¥ : u32 ;
  Some (z) -> â¥ : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 4: u32 ;
  None -> 3: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 4: u32 ;
  Some (y) -> â¥ : u32 ;
  Some (z) -> â¥ : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 4: u32 ;
  None -> 3: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
}


- op:
10: u32

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 4: u32 ;
  Some (y) -> â¥ : u32 ;
  Some (z) -> â¥ : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 4: u32 ;
  None -> 3: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
}


- op:
11: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := copy x;
  var@5 := copy y;
  var@3 := move var@4 >= move var@5;
  if (move var@3) {
    var@0 := copy x
  }
  else {
    var@0 := copy y
  };
  return
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 4: u32 ;
  Some (y) -> â¥ : u32 ;
  Some (z) -> â¥ : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 4: u32 ;
  None -> 3: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> 10: u32 ;
  Some (y) -> 11: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := copy x
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 4: u32 ;
  Some (y) -> â¥ : u32 ;
  Some (z) -> â¥ : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 4: u32 ;
  None -> 3: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> 10: u32 ;
  Some (y) -> 11: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 4: u32 ;
  Some (y) -> â¥ : u32 ;
  Some (z) -> â¥ : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 4: u32 ;
  None -> 3: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> 10: u32 ;
  Some (y) -> 11: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
}


- op:
copy x

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := copy y;
  var@3 := move var@4 >= move var@5;
  if (move var@3) {
    var@0 := copy x
  }
  else {
    var@0 := copy y
  };
  return
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 4: u32 ;
  Some (y) -> â¥ : u32 ;
  Some (z) -> â¥ : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 4: u32 ;
  None -> 3: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> 10: u32 ;
  Some (y) -> 11: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> 10: u32 ;
  Some (var@5) -> â¥ : u32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := copy y
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 4: u32 ;
  Some (y) -> â¥ : u32 ;
  Some (z) -> â¥ : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 4: u32 ;
  None -> 3: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> 10: u32 ;
  Some (y) -> 11: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> 10: u32 ;
  Some (var@5) -> â¥ : u32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 4: u32 ;
  Some (y) -> â¥ : u32 ;
  Some (z) -> â¥ : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 4: u32 ;
  None -> 3: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> 10: u32 ;
  Some (y) -> 11: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> 10: u32 ;
  Some (var@5) -> â¥ : u32 ;
}


- op:
copy y

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@3 := move var@4 >= move var@5;
  if (move var@3) {
    var@0 := copy x
  }
  else {
    var@0 := copy y
  };
  return
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 4: u32 ;
  Some (y) -> â¥ : u32 ;
  Some (z) -> â¥ : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 4: u32 ;
  None -> 3: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> 10: u32 ;
  Some (y) -> 11: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> 10: u32 ;
  Some (var@5) -> 11: u32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@3 := move var@4 >= move var@5
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 4: u32 ;
  Some (y) -> â¥ : u32 ;
  Some (z) -> â¥ : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 4: u32 ;
  None -> 3: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> 10: u32 ;
  Some (y) -> 11: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> 10: u32 ;
  Some (var@5) -> 11: u32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 4: u32 ;
  Some (y) -> â¥ : u32 ;
  Some (z) -> â¥ : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 4: u32 ;
  None -> 3: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> 10: u32 ;
  Some (y) -> 11: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> 10: u32 ;
  Some (var@5) -> 11: u32 ;
}


- op:
move var@4

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 4: u32 ;
  Some (y) -> â¥ : u32 ;
  Some (z) -> â¥ : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 4: u32 ;
  None -> 3: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> 10: u32 ;
  Some (y) -> 11: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> 11: u32 ;
}


- op:
move var@5

[[32mDebug[39m] 
**About to evaluate statement**: [
  if (move var@3) {
    var@0 := copy x
  }
  else {
    var@0 := copy y
  };
  return
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 4: u32 ;
  Some (y) -> â¥ : u32 ;
  Some (z) -> â¥ : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 4: u32 ;
  None -> 3: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> 10: u32 ;
  Some (y) -> 11: u32 ;
  Some (var@3) -> false ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  if (move var@3) {
    var@0 := copy x
  }
  else {
    var@0 := copy y
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 4: u32 ;
  Some (y) -> â¥ : u32 ;
  Some (z) -> â¥ : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 4: u32 ;
  None -> 3: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> 10: u32 ;
  Some (y) -> 11: u32 ;
  Some (var@3) -> false ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 4: u32 ;
  Some (y) -> â¥ : u32 ;
  Some (z) -> â¥ : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 4: u32 ;
  None -> 3: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> 10: u32 ;
  Some (y) -> 11: u32 ;
  Some (var@3) -> false ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
}


- op:
move var@3

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@0 := copy y
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 4: u32 ;
  Some (y) -> â¥ : u32 ;
  Some (z) -> â¥ : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 4: u32 ;
  None -> 3: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> 10: u32 ;
  Some (y) -> 11: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 4: u32 ;
  Some (y) -> â¥ : u32 ;
  Some (z) -> â¥ : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 4: u32 ;
  None -> 3: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> 10: u32 ;
  Some (y) -> 11: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
}


- op:
copy y

[[32mDebug[39m] 
**About to evaluate statement**: [
  return
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 4: u32 ;
  Some (y) -> â¥ : u32 ;
  Some (z) -> â¥ : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 4: u32 ;
  None -> 3: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
}

# Frame 1:
{
  Some (var@0) -> 11: u32 ;
  Some (x) -> 10: u32 ;
  Some (y) -> 11: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
}



[[32mDebug[39m] ctx_pop_frame:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 4: u32 ;
  Some (y) -> â¥ : u32 ;
  Some (z) -> â¥ : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 4: u32 ;
  None -> 3: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
}

# Frame 1:
{
  Some (var@0) -> 11: u32 ;
  Some (x) -> 10: u32 ;
  Some (y) -> 11: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
}

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 4: u32 ;
  Some (y) -> â¥ : u32 ;
  Some (z) -> â¥ : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 4: u32 ;
  None -> 3: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
}

# Frame 1:
{
  Some (var@0) -> 11: u32 ;
  Some (x) -> 10: u32 ;
  Some (y) -> 11: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
}


- op:
move var@0

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := copy x;
  var@5 := copy y;
  z := copy var@4 + copy var@5;
  var@9 := copy z;
  var@8 := move var@9 == 15: u32;
  var@7 := Â¬ move var@8;
  assert(Â¬move var@7);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 4: u32 ;
  Some (y) -> 11: u32 ;
  Some (z) -> â¥ : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 4: u32 ;
  None -> 3: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 10: u32 ;
  None -> 11: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := copy x
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 4: u32 ;
  Some (y) -> 11: u32 ;
  Some (z) -> â¥ : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 4: u32 ;
  None -> 3: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 10: u32 ;
  None -> 11: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 4: u32 ;
  Some (y) -> 11: u32 ;
  Some (z) -> â¥ : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 4: u32 ;
  None -> 3: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 10: u32 ;
  None -> 11: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
}


- op:
copy x

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := copy y;
  z := copy var@4 + copy var@5;
  var@9 := copy z;
  var@8 := move var@9 == 15: u32;
  var@7 := Â¬ move var@8;
  assert(Â¬move var@7);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 4: u32 ;
  Some (y) -> 11: u32 ;
  Some (z) -> â¥ : u32 ;
  Some (var@4) -> 4: u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 4: u32 ;
  None -> 3: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 10: u32 ;
  None -> 11: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := copy y
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 4: u32 ;
  Some (y) -> 11: u32 ;
  Some (z) -> â¥ : u32 ;
  Some (var@4) -> 4: u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 4: u32 ;
  None -> 3: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 10: u32 ;
  None -> 11: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 4: u32 ;
  Some (y) -> 11: u32 ;
  Some (z) -> â¥ : u32 ;
  Some (var@4) -> 4: u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 4: u32 ;
  None -> 3: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 10: u32 ;
  None -> 11: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
}


- op:
copy y

[[32mDebug[39m] 
**About to evaluate statement**: [
  z := copy var@4 + copy var@5;
  var@9 := copy z;
  var@8 := move var@9 == 15: u32;
  var@7 := Â¬ move var@8;
  assert(Â¬move var@7);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 4: u32 ;
  Some (y) -> 11: u32 ;
  Some (z) -> â¥ : u32 ;
  Some (var@4) -> 4: u32 ;
  Some (var@5) -> 11: u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 4: u32 ;
  None -> 3: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 10: u32 ;
  None -> 11: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  z := copy var@4 + copy var@5
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 4: u32 ;
  Some (y) -> 11: u32 ;
  Some (z) -> â¥ : u32 ;
  Some (var@4) -> 4: u32 ;
  Some (var@5) -> 11: u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 4: u32 ;
  None -> 3: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 10: u32 ;
  None -> 11: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 4: u32 ;
  Some (y) -> 11: u32 ;
  Some (z) -> â¥ : u32 ;
  Some (var@4) -> 4: u32 ;
  Some (var@5) -> 11: u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 4: u32 ;
  None -> 3: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 10: u32 ;
  None -> 11: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
}


- op:
copy var@4

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 4: u32 ;
  Some (y) -> 11: u32 ;
  Some (z) -> â¥ : u32 ;
  Some (var@4) -> 4: u32 ;
  Some (var@5) -> 11: u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 4: u32 ;
  None -> 3: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 10: u32 ;
  None -> 11: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
}


- op:
copy var@5

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@9 := copy z;
  var@8 := move var@9 == 15: u32;
  var@7 := Â¬ move var@8;
  assert(Â¬move var@7);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 4: u32 ;
  Some (y) -> 11: u32 ;
  Some (z) -> 15: u32 ;
  Some (var@4) -> 4: u32 ;
  Some (var@5) -> 11: u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 4: u32 ;
  None -> 3: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 10: u32 ;
  None -> 11: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@9 := copy z
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 4: u32 ;
  Some (y) -> 11: u32 ;
  Some (z) -> 15: u32 ;
  Some (var@4) -> 4: u32 ;
  Some (var@5) -> 11: u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 4: u32 ;
  None -> 3: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 10: u32 ;
  None -> 11: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 4: u32 ;
  Some (y) -> 11: u32 ;
  Some (z) -> 15: u32 ;
  Some (var@4) -> 4: u32 ;
  Some (var@5) -> 11: u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 4: u32 ;
  None -> 3: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 10: u32 ;
  None -> 11: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
}


- op:
copy z

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := move var@9 == 15: u32;
  var@7 := Â¬ move var@8;
  assert(Â¬move var@7);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 4: u32 ;
  Some (y) -> 11: u32 ;
  Some (z) -> 15: u32 ;
  Some (var@4) -> 4: u32 ;
  Some (var@5) -> 11: u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> 15: u32 ;
  None -> â¥ : u32 ;
  None -> 4: u32 ;
  None -> 3: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 10: u32 ;
  None -> 11: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := move var@9 == 15: u32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 4: u32 ;
  Some (y) -> 11: u32 ;
  Some (z) -> 15: u32 ;
  Some (var@4) -> 4: u32 ;
  Some (var@5) -> 11: u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> 15: u32 ;
  None -> â¥ : u32 ;
  None -> 4: u32 ;
  None -> 3: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 10: u32 ;
  None -> 11: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 4: u32 ;
  Some (y) -> 11: u32 ;
  Some (z) -> 15: u32 ;
  Some (var@4) -> 4: u32 ;
  Some (var@5) -> 11: u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> 15: u32 ;
  None -> â¥ : u32 ;
  None -> 4: u32 ;
  None -> 3: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 10: u32 ;
  None -> 11: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
}


- op:
move var@9

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 4: u32 ;
  Some (y) -> 11: u32 ;
  Some (z) -> 15: u32 ;
  Some (var@4) -> 4: u32 ;
  Some (var@5) -> 11: u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 4: u32 ;
  None -> 3: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 10: u32 ;
  None -> 11: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
}


- op:
15: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := Â¬ move var@8;
  assert(Â¬move var@7);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 4: u32 ;
  Some (y) -> 11: u32 ;
  Some (z) -> 15: u32 ;
  Some (var@4) -> 4: u32 ;
  Some (var@5) -> 11: u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> true ;
  Some (var@9) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 4: u32 ;
  None -> 3: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 10: u32 ;
  None -> 11: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := Â¬ move var@8
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 4: u32 ;
  Some (y) -> 11: u32 ;
  Some (z) -> 15: u32 ;
  Some (var@4) -> 4: u32 ;
  Some (var@5) -> 11: u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> true ;
  Some (var@9) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 4: u32 ;
  None -> 3: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 10: u32 ;
  None -> 11: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 4: u32 ;
  Some (y) -> 11: u32 ;
  Some (z) -> 15: u32 ;
  Some (var@4) -> 4: u32 ;
  Some (var@5) -> 11: u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> true ;
  Some (var@9) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 4: u32 ;
  None -> 3: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 10: u32 ;
  None -> 11: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
}


- op:
move var@8

[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@7);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 4: u32 ;
  Some (y) -> 11: u32 ;
  Some (z) -> 15: u32 ;
  Some (var@4) -> 4: u32 ;
  Some (var@5) -> 11: u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> false ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 4: u32 ;
  None -> 3: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 10: u32 ;
  None -> 11: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@7)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 4: u32 ;
  Some (y) -> 11: u32 ;
  Some (z) -> 15: u32 ;
  Some (var@4) -> 4: u32 ;
  Some (var@5) -> 11: u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> false ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 4: u32 ;
  None -> 3: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 10: u32 ;
  None -> 11: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 4: u32 ;
  Some (y) -> 11: u32 ;
  Some (z) -> 15: u32 ;
  Some (var@4) -> 4: u32 ;
  Some (var@5) -> 11: u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> false ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 4: u32 ;
  None -> 3: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 10: u32 ;
  None -> 11: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
}


- op:
move var@7

[[32mDebug[39m] 
**About to evaluate statement**: [
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 4: u32 ;
  Some (y) -> 11: u32 ;
  Some (z) -> 15: u32 ;
  Some (var@4) -> 4: u32 ;
  Some (var@5) -> 11: u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 4: u32 ;
  None -> 3: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 10: u32 ;
  None -> 11: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
}



[[32mDebug[39m] test_unit_function: test_neg1
[[32mDebug[39m] 
**About to evaluate statement**: [
  x := 3: i32;
  y := -3: i32;
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : i32 ;
  Some (y) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  x := 3: i32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : i32 ;
  Some (y) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : i32 ;
  Some (y) -> â¥ : i32 ;
}


- op:
3: i32

[[32mDebug[39m] 
**About to evaluate statement**: [
  y := -3: i32;
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 3: i32 ;
  Some (y) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  y := -3: i32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 3: i32 ;
  Some (y) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 3: i32 ;
  Some (y) -> â¥ : i32 ;
}


- op:
-3: i32

[[32mDebug[39m] 
**About to evaluate statement**: [
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 3: i32 ;
  Some (y) -> -3: i32 ;
}



[[32mDebug[39m] test_unit_function: refs_test1
[[32mDebug[39m] 
**About to evaluate statement**: [
  x := 0: i32;
  px := &mut x;
  ppx := &mut px;
  *(*(ppx)) := 1: i32;
  var@6 := copy x;
  var@5 := move var@6 == 1: i32;
  var@4 := Â¬ move var@5;
  assert(Â¬move var@4);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  x := 0: i32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : i32 ;
}


- op:
0: i32

[[32mDebug[39m] 
**About to evaluate statement**: [
  px := &mut x;
  ppx := &mut px;
  *(*(ppx)) := 1: i32;
  var@6 := copy x;
  var@5 := move var@6 == 1: i32;
  var@4 := Â¬ move var@5;
  assert(Â¬move var@4);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  px := &mut x
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  ppx := &mut px;
  *(*(ppx)) := 1: i32;
  var@6 := copy x;
  var@5 := move var@6 == 1: i32;
  var@4 := Â¬ move var@5;
  assert(Â¬move var@4);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@0 (0: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  ppx := &mut px
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@0 (0: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  *(*(ppx)) := 1: i32;
  var@6 := copy x;
  var@5 := move var@6 == 1: i32;
  var@4 := Â¬ move var@5;
  assert(Â¬move var@4);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (&mut@0 (0: i32)) ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  *(*(ppx)) := 1: i32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (&mut@0 (0: i32)) ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (&mut@0 (0: i32)) ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : i32 ;
}


- op:
1: i32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@6 := copy x;
  var@5 := move var@6 == 1: i32;
  var@4 := Â¬ move var@5;
  assert(Â¬move var@4);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (&mut@0 (1: i32)) ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@6 := copy x
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (&mut@0 (1: i32)) ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (&mut@0 (1: i32)) ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : i32 ;
}


- op:
copy x

[[32mDebug[39m] end borrow: 0:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (&mut@0 (1: i32)) ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : i32 ;
}

[[32mDebug[39m] end borrow: 0: found outer borrows/abs:(InterpreterBorrowsCore.OuterBorrows (InterpreterBorrowsCore.Borrow 1))
[[32mDebug[39m] end borrow: 1:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (&mut@0 (1: i32)) ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : i32 ;
}

[[32mDebug[39m] give_back:
- bid: 1
- content: &mut@1 (&mut@0 (1: i32))
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : i32 ;
}


[[32mDebug[39m] give_back_value:
- bid: 1
- value: &mut@0 (1: i32)
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : i32 ;
}


[[32mDebug[39m] end borrow: 0:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@0 (1: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : i32 ;
}

[[32mDebug[39m] give_back:
- bid: 0
- content: &mut@0 (1: i32)
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : i32 ;
}


[[32mDebug[39m] give_back_value:
- bid: 0
- value: 1: i32
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : i32 ;
}


[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := move var@6 == 1: i32;
  var@4 := Â¬ move var@5;
  assert(Â¬move var@4);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> 1: i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := move var@6 == 1: i32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> 1: i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> 1: i32 ;
}


- op:
move var@6

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : i32 ;
}


- op:
1: i32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := Â¬ move var@5;
  assert(Â¬move var@4);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> true ;
  Some (var@6) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := Â¬ move var@5
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> true ;
  Some (var@6) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> true ;
  Some (var@6) -> â¥ : i32 ;
}


- op:
move var@5

[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@4);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@4) -> false ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@4)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@4) -> false ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@4) -> false ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : i32 ;
}


- op:
move var@4

[[32mDebug[39m] 
**About to evaluate statement**: [
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : i32 ;
}



[[32mDebug[39m] test_unit_function: refs_test2
[[32mDebug[39m] 
**About to evaluate statement**: [
  x := 0: i32;
  y := 1: i32;
  px := &mut x;
  py := &mut y;
  ppx := &mut px;
  var@6 := &mut *(py);
  *(ppx) := move var@6;
  *(*(ppx)) := 2: i32;
  var@9 := copy *(px);
  var@8 := move var@9 == 2: i32;
  var@7 := Â¬ move var@8;
  assert(Â¬move var@7);
  var@12 := copy x;
  var@11 := move var@12 == 0: i32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  var@15 := copy *(py);
  var@14 := move var@15 == 2: i32;
  var@13 := Â¬ move var@14;
  assert(Â¬move var@13);
  var@18 := copy y;
  var@17 := move var@18 == 2: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : i32 ;
  Some (y) -> â¥ : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  x := 0: i32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : i32 ;
  Some (y) -> â¥ : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : i32 ;
  Some (y) -> â¥ : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}


- op:
0: i32

[[32mDebug[39m] 
**About to evaluate statement**: [
  y := 1: i32;
  px := &mut x;
  py := &mut y;
  ppx := &mut px;
  var@6 := &mut *(py);
  *(ppx) := move var@6;
  *(*(ppx)) := 2: i32;
  var@9 := copy *(px);
  var@8 := move var@9 == 2: i32;
  var@7 := Â¬ move var@8;
  assert(Â¬move var@7);
  var@12 := copy x;
  var@11 := move var@12 == 0: i32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  var@15 := copy *(py);
  var@14 := move var@15 == 2: i32;
  var@13 := Â¬ move var@14;
  assert(Â¬move var@13);
  var@18 := copy y;
  var@17 := move var@18 == 2: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> â¥ : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  y := 1: i32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> â¥ : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> â¥ : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}


- op:
1: i32

[[32mDebug[39m] 
**About to evaluate statement**: [
  px := &mut x;
  py := &mut y;
  ppx := &mut px;
  var@6 := &mut *(py);
  *(ppx) := move var@6;
  *(*(ppx)) := 2: i32;
  var@9 := copy *(px);
  var@8 := move var@9 == 2: i32;
  var@7 := Â¬ move var@8;
  assert(Â¬move var@7);
  var@12 := copy x;
  var@11 := move var@12 == 0: i32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  var@15 := copy *(py);
  var@14 := move var@15 == 2: i32;
  var@13 := Â¬ move var@14;
  assert(Â¬move var@13);
  var@18 := copy y;
  var@17 := move var@18 == 2: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> 1: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  px := &mut x
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> 1: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  py := &mut y;
  ppx := &mut px;
  var@6 := &mut *(py);
  *(ppx) := move var@6;
  *(*(ppx)) := 2: i32;
  var@9 := copy *(px);
  var@8 := move var@9 == 2: i32;
  var@7 := Â¬ move var@8;
  assert(Â¬move var@7);
  var@12 := copy x;
  var@11 := move var@12 == 0: i32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  var@15 := copy *(py);
  var@14 := move var@15 == 2: i32;
  var@13 := Â¬ move var@14;
  assert(Â¬move var@13);
  var@18 := copy y;
  var@17 := move var@18 == 2: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> 1: i32 ;
  Some (px) -> &mut@0 (0: i32) ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  py := &mut y
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> 1: i32 ;
  Some (px) -> &mut@0 (0: i32) ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  ppx := &mut px;
  var@6 := &mut *(py);
  *(ppx) := move var@6;
  *(*(ppx)) := 2: i32;
  var@9 := copy *(px);
  var@8 := move var@9 == 2: i32;
  var@7 := Â¬ move var@8;
  assert(Â¬move var@7);
  var@12 := copy x;
  var@11 := move var@12 == 0: i32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  var@15 := copy *(py);
  var@14 := move var@15 == 2: i32;
  var@13 := Â¬ move var@14;
  assert(Â¬move var@13);
  var@18 := copy y;
  var@17 := move var@18 == 2: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@1â ;
  Some (px) -> &mut@0 (0: i32) ;
  Some (py) -> &mut@1 (1: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  ppx := &mut px
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@1â ;
  Some (px) -> &mut@0 (0: i32) ;
  Some (py) -> &mut@1 (1: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@6 := &mut *(py);
  *(ppx) := move var@6;
  *(*(ppx)) := 2: i32;
  var@9 := copy *(px);
  var@8 := move var@9 == 2: i32;
  var@7 := Â¬ move var@8;
  assert(Â¬move var@7);
  var@12 := copy x;
  var@11 := move var@12 == 0: i32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  var@15 := copy *(py);
  var@14 := move var@15 == 2: i32;
  var@13 := Â¬ move var@14;
  assert(Â¬move var@13);
  var@18 := copy y;
  var@17 := move var@18 == 2: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@1â ;
  Some (px) -> âmut@2â ;
  Some (py) -> &mut@1 (1: i32) ;
  Some (ppx) -> &mut@2 (&mut@0 (0: i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@6 := &mut *(py)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@1â ;
  Some (px) -> âmut@2â ;
  Some (py) -> &mut@1 (1: i32) ;
  Some (ppx) -> &mut@2 (&mut@0 (0: i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  *(ppx) := move var@6;
  *(*(ppx)) := 2: i32;
  var@9 := copy *(px);
  var@8 := move var@9 == 2: i32;
  var@7 := Â¬ move var@8;
  assert(Â¬move var@7);
  var@12 := copy x;
  var@11 := move var@12 == 0: i32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  var@15 := copy *(py);
  var@14 := move var@15 == 2: i32;
  var@13 := Â¬ move var@14;
  assert(Â¬move var@13);
  var@18 := copy y;
  var@17 := move var@18 == 2: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@1â ;
  Some (px) -> âmut@2â ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> &mut@2 (&mut@0 (0: i32)) ;
  Some (var@6) -> &mut@3 (1: i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  *(ppx) := move var@6
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@1â ;
  Some (px) -> âmut@2â ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> &mut@2 (&mut@0 (0: i32)) ;
  Some (var@6) -> &mut@3 (1: i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@1â ;
  Some (px) -> âmut@2â ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> &mut@2 (&mut@0 (0: i32)) ;
  Some (var@6) -> &mut@3 (1: i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}


- op:
move var@6

[[32mDebug[39m] end borrow: 0:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@1â ;
  Some (px) -> âmut@2â ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> &mut@2 (â¥ : &'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  None -> &mut@3 (1: i32) ;
  None -> &mut@0 (0: i32) ;
}

[[32mDebug[39m] give_back:
- bid: 0
- content: &mut@0 (0: i32)
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@1â ;
  Some (px) -> âmut@2â ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> &mut@2 (â¥ : &'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  None -> &mut@3 (1: i32) ;
  None -> â¥ : &'_ mut (i32) ;
}


[[32mDebug[39m] give_back_value:
- bid: 0
- value: 0: i32
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@1â ;
  Some (px) -> âmut@2â ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> &mut@2 (â¥ : &'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  None -> &mut@3 (1: i32) ;
  None -> â¥ : &'_ mut (i32) ;
}


[[32mDebug[39m] 
**About to evaluate statement**: [
  *(*(ppx)) := 2: i32;
  var@9 := copy *(px);
  var@8 := move var@9 == 2: i32;
  var@7 := Â¬ move var@8;
  assert(Â¬move var@7);
  var@12 := copy x;
  var@11 := move var@12 == 0: i32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  var@15 := copy *(py);
  var@14 := move var@15 == 2: i32;
  var@13 := Â¬ move var@14;
  assert(Â¬move var@13);
  var@18 := copy y;
  var@17 := move var@18 == 2: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> âmut@2â ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> &mut@2 (&mut@3 (1: i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  *(*(ppx)) := 2: i32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> âmut@2â ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> &mut@2 (&mut@3 (1: i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> âmut@2â ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> &mut@2 (&mut@3 (1: i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}


- op:
2: i32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@9 := copy *(px);
  var@8 := move var@9 == 2: i32;
  var@7 := Â¬ move var@8;
  assert(Â¬move var@7);
  var@12 := copy x;
  var@11 := move var@12 == 0: i32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  var@15 := copy *(py);
  var@14 := move var@15 == 2: i32;
  var@13 := Â¬ move var@14;
  assert(Â¬move var@13);
  var@18 := copy y;
  var@17 := move var@18 == 2: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> âmut@2â ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> &mut@2 (&mut@3 (2: i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@9 := copy *(px)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> âmut@2â ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> &mut@2 (&mut@3 (2: i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> âmut@2â ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> &mut@2 (&mut@3 (2: i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}


- op:
copy *(px)

[[32mDebug[39m] end borrow: 2:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> âmut@2â ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> &mut@2 (&mut@3 (2: i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}

[[32mDebug[39m] give_back:
- bid: 2
- content: &mut@2 (&mut@3 (2: i32))
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> âmut@2â ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}


[[32mDebug[39m] give_back_value:
- bid: 2
- value: &mut@3 (2: i32)
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> âmut@2â ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}


[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := move var@9 == 2: i32;
  var@7 := Â¬ move var@8;
  assert(Â¬move var@7);
  var@12 := copy x;
  var@11 := move var@12 == 0: i32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  var@15 := copy *(py);
  var@14 := move var@15 == 2: i32;
  var@13 := Â¬ move var@14;
  assert(Â¬move var@13);
  var@18 := copy y;
  var@17 := move var@18 == 2: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> &mut@3 (2: i32) ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> 2: i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := move var@9 == 2: i32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> &mut@3 (2: i32) ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> 2: i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> &mut@3 (2: i32) ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> 2: i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}


- op:
move var@9

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> &mut@3 (2: i32) ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}


- op:
2: i32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := Â¬ move var@8;
  assert(Â¬move var@7);
  var@12 := copy x;
  var@11 := move var@12 == 0: i32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  var@15 := copy *(py);
  var@14 := move var@15 == 2: i32;
  var@13 := Â¬ move var@14;
  assert(Â¬move var@13);
  var@18 := copy y;
  var@17 := move var@18 == 2: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> &mut@3 (2: i32) ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> true ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := Â¬ move var@8
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> &mut@3 (2: i32) ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> true ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> &mut@3 (2: i32) ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> true ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}


- op:
move var@8

[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@7);
  var@12 := copy x;
  var@11 := move var@12 == 0: i32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  var@15 := copy *(py);
  var@14 := move var@15 == 2: i32;
  var@13 := Â¬ move var@14;
  assert(Â¬move var@13);
  var@18 := copy y;
  var@17 := move var@18 == 2: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> &mut@3 (2: i32) ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> false ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@7)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> &mut@3 (2: i32) ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> false ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> &mut@3 (2: i32) ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> false ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}


- op:
move var@7

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@12 := copy x;
  var@11 := move var@12 == 0: i32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  var@15 := copy *(py);
  var@14 := move var@15 == 2: i32;
  var@13 := Â¬ move var@14;
  assert(Â¬move var@13);
  var@18 := copy y;
  var@17 := move var@18 == 2: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> &mut@3 (2: i32) ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@12 := copy x
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> &mut@3 (2: i32) ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> &mut@3 (2: i32) ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}


- op:
copy x

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@11 := move var@12 == 0: i32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  var@15 := copy *(py);
  var@14 := move var@15 == 2: i32;
  var@13 := Â¬ move var@14;
  assert(Â¬move var@13);
  var@18 := copy y;
  var@17 := move var@18 == 2: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> &mut@3 (2: i32) ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> 0: i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@11 := move var@12 == 0: i32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> &mut@3 (2: i32) ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> 0: i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> &mut@3 (2: i32) ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> 0: i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}


- op:
move var@12

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> &mut@3 (2: i32) ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}


- op:
0: i32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  var@15 := copy *(py);
  var@14 := move var@15 == 2: i32;
  var@13 := Â¬ move var@14;
  assert(Â¬move var@13);
  var@18 := copy y;
  var@17 := move var@18 == 2: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> &mut@3 (2: i32) ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> true ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@10 := Â¬ move var@11
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> &mut@3 (2: i32) ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> true ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> &mut@3 (2: i32) ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> true ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}


- op:
move var@11

[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@10);
  var@15 := copy *(py);
  var@14 := move var@15 == 2: i32;
  var@13 := Â¬ move var@14;
  assert(Â¬move var@13);
  var@18 := copy y;
  var@17 := move var@18 == 2: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> &mut@3 (2: i32) ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> false ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@10)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> &mut@3 (2: i32) ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> false ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> &mut@3 (2: i32) ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> false ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}


- op:
move var@10

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@15 := copy *(py);
  var@14 := move var@15 == 2: i32;
  var@13 := Â¬ move var@14;
  assert(Â¬move var@13);
  var@18 := copy y;
  var@17 := move var@18 == 2: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> &mut@3 (2: i32) ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@15 := copy *(py)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> &mut@3 (2: i32) ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> &mut@3 (2: i32) ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}


- op:
copy *(py)

[[32mDebug[39m] end borrow: 3:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> &mut@3 (2: i32) ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}

[[32mDebug[39m] give_back:
- bid: 3
- content: &mut@3 (2: i32)
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}


[[32mDebug[39m] give_back_value:
- bid: 3
- value: 2: i32
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}


[[32mDebug[39m] 
**About to evaluate statement**: [
  var@14 := move var@15 == 2: i32;
  var@13 := Â¬ move var@14;
  assert(Â¬move var@13);
  var@18 := copy y;
  var@17 := move var@18 == 2: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (py) -> &mut@1 (2: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> 2: i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@14 := move var@15 == 2: i32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (py) -> &mut@1 (2: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> 2: i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (py) -> &mut@1 (2: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> 2: i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}


- op:
move var@15

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (py) -> &mut@1 (2: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}


- op:
2: i32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@13 := Â¬ move var@14;
  assert(Â¬move var@13);
  var@18 := copy y;
  var@17 := move var@18 == 2: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (py) -> &mut@1 (2: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> true ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@13 := Â¬ move var@14
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (py) -> &mut@1 (2: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> true ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (py) -> &mut@1 (2: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> true ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}


- op:
move var@14

[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@13);
  var@18 := copy y;
  var@17 := move var@18 == 2: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (py) -> &mut@1 (2: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> false ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@13)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (py) -> &mut@1 (2: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> false ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (py) -> &mut@1 (2: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> false ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}


- op:
move var@13

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@18 := copy y;
  var@17 := move var@18 == 2: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (py) -> &mut@1 (2: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@18 := copy y
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (py) -> &mut@1 (2: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (py) -> &mut@1 (2: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}


- op:
copy y

[[32mDebug[39m] end borrow: 1:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (py) -> &mut@1 (2: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}

[[32mDebug[39m] give_back:
- bid: 1
- content: &mut@1 (2: i32)
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}


[[32mDebug[39m] give_back_value:
- bid: 1
- value: 2: i32
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}


[[32mDebug[39m] 
**About to evaluate statement**: [
  var@17 := move var@18 == 2: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> 2: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> 2: i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@17 := move var@18 == 2: i32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> 2: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> 2: i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> 2: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> 2: i32 ;
}


- op:
move var@18

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> 2: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}


- op:
2: i32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> 2: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> true ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@16 := Â¬ move var@17
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> 2: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> true ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> 2: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> true ;
  Some (var@18) -> â¥ : i32 ;
}


- op:
move var@17

[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> 2: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> false ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@16)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> 2: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> false ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> 2: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> false ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}


- op:
move var@16

[[32mDebug[39m] 
**About to evaluate statement**: [
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> 2: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] test_unit_function: test_list1
[[32mDebug[39m] 
**About to evaluate statement**: [
  set_discriminant(var@3, 1);
  var@2 := move alloc::boxed::Box<test1::List<i32>>::new(move var@3);
  (l as test1::List::Cons).0 := 0: i32;
  (l as test1::List::Cons).1 := move var@2;
  set_discriminant(l, 0);
  drop(l);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  set_discriminant(var@3, 1)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@2 := move alloc::boxed::Box<test1::List<i32>>::new(move var@3);
  (l as test1::List::Cons).0 := 0: i32;
  (l as test1::List::Cons).1 := move var@2;
  set_discriminant(l, 0);
  drop(l);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> test1::List::Nil ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@2 := move alloc::boxed::Box<test1::List<i32>>::new(move var@3)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> test1::List::Nil ;
}



[[32mDebug[39m] eval_non_local_function_call:
- fid:CfimAst.BoxNew
- type_params: [test1::List<i32>]
- args: [move var@3]
- dest: var@2
[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> test1::List::Nil ;
}


- op:
move var@3

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
}

# Frame 1:
{
  Some (@return) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@1) -> test1::List::Nil ;
}


- op:
move var@1

[[32mDebug[39m] ctx_pop_frame:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
}

# Frame 1:
{
  Some (@return) -> @Box(test1::List::Nil) ;
  Some (var@1) -> â¥ : test1::List<i32> ;
}

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
}

# Frame 1:
{
  Some (@return) -> @Box(test1::List::Nil) ;
  Some (var@1) -> â¥ : test1::List<i32> ;
}


- op:
move @return

[[32mDebug[39m] 
**About to evaluate statement**: [
  (l as test1::List::Cons).0 := 0: i32;
  (l as test1::List::Cons).1 := move var@2;
  set_discriminant(l, 0);
  drop(l);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> @Box(test1::List::Nil) ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  (l as test1::List::Cons).0 := 0: i32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> @Box(test1::List::Nil) ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> @Box(test1::List::Nil) ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}


- op:
0: i32

[[32mDebug[39m] expand_bottom_value_from_projection:
pe: (Expressions.Field ((Expressions.ProjAdt (1, (Some 0))), 0))
ty: (Types.Adt ((Types.AdtId 1), [], [(Types.Integer Types.I32)]))
[[32mDebug[39m] 
**About to evaluate statement**: [
  (l as test1::List::Cons).1 := move var@2;
  set_discriminant(l, 0);
  drop(l);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> test1::List::Cons { 0 = 0: i32; 1 = â¥ : std::boxed::Box<test1::List<i32>>; } ;
  Some (var@2) -> @Box(test1::List::Nil) ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  (l as test1::List::Cons).1 := move var@2
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> test1::List::Cons { 0 = 0: i32; 1 = â¥ : std::boxed::Box<test1::List<i32>>; } ;
  Some (var@2) -> @Box(test1::List::Nil) ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> test1::List::Cons { 0 = 0: i32; 1 = â¥ : std::boxed::Box<test1::List<i32>>; } ;
  Some (var@2) -> @Box(test1::List::Nil) ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}


- op:
move var@2

[[32mDebug[39m] 
**About to evaluate statement**: [
  set_discriminant(l, 0);
  drop(l);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> test1::List::Cons { 0 = 0: i32; 1 = @Box(test1::List::Nil); } ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  set_discriminant(l, 0)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> test1::List::Cons { 0 = 0: i32; 1 = @Box(test1::List::Nil); } ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  drop(l);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> test1::List::Cons { 0 = 0: i32; 1 = @Box(test1::List::Nil); } ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  drop(l)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> test1::List::Cons { 0 = 0: i32; 1 = @Box(test1::List::Nil); } ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}



[[32mDebug[39m] drop_value: place: l
[[32mDebug[39m] 
**About to evaluate statement**: [
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}



[[32mDebug[39m] test_unit_function: test_box1
[[32mDebug[39m] 
**About to evaluate statement**: [
  b := move alloc::boxed::Box<i32>::new(0: i32);
  var@3 := &two-phase b;
  x := move core::ops::deref::DerefMut<i32>::deref_mut(move var@3);
  *(x) := 1: i32;
  var@5 := &b;
  x := move core::ops::deref::Deref<Box<i32>>::deref(move var@5);
  var@8 := copy *(x);
  var@7 := move var@8 == 1: i32;
  var@6 := Â¬ move var@7;
  assert(Â¬move var@6);
  drop(b);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> â¥ : std::boxed::Box<i32> ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ (i32) ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  b := move alloc::boxed::Box<i32>::new(0: i32)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> â¥ : std::boxed::Box<i32> ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ (i32) ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_non_local_function_call:
- fid:CfimAst.BoxNew
- type_params: [i32]
- args: [0: i32]
- dest: b
[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> â¥ : std::boxed::Box<i32> ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ (i32) ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
}


- op:
0: i32

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> â¥ : std::boxed::Box<i32> ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ (i32) ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
}

# Frame 1:
{
  Some (@return) -> â¥ : std::boxed::Box<i32> ;
  Some (var@1) -> 0: i32 ;
}


- op:
move var@1

[[32mDebug[39m] ctx_pop_frame:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> â¥ : std::boxed::Box<i32> ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ (i32) ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
}

# Frame 1:
{
  Some (@return) -> @Box(0: i32) ;
  Some (var@1) -> â¥ : i32 ;
}

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> â¥ : std::boxed::Box<i32> ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ (i32) ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
}

# Frame 1:
{
  Some (@return) -> @Box(0: i32) ;
  Some (var@1) -> â¥ : i32 ;
}


- op:
move @return

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@3 := &two-phase b;
  x := move core::ops::deref::DerefMut<i32>::deref_mut(move var@3);
  *(x) := 1: i32;
  var@5 := &b;
  x := move core::ops::deref::Deref<Box<i32>>::deref(move var@5);
  var@8 := copy *(x);
  var@7 := move var@8 == 1: i32;
  var@6 := Â¬ move var@7;
  assert(Â¬move var@6);
  drop(b);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> @Box(0: i32) ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ (i32) ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<i32> ;
  None -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@3 := &two-phase b
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> @Box(0: i32) ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ (i32) ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<i32> ;
  None -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  x := move core::ops::deref::DerefMut<i32>::deref_mut(move var@3);
  *(x) := 1: i32;
  var@5 := &b;
  x := move core::ops::deref::Deref<Box<i32>>::deref(move var@5);
  var@8 := copy *(x);
  var@7 := move var@8 == 1: i32;
  var@6 := Â¬ move var@7;
  assert(Â¬move var@6);
  drop(b);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> @shared_loan({0}, @Box(0: i32)) ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> âinactivated_mut@0â ;
  Some (x) -> â¥ : &'_ (i32) ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<i32> ;
  None -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  x := move core::ops::deref::DerefMut<i32>::deref_mut(move var@3)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> @shared_loan({0}, @Box(0: i32)) ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> âinactivated_mut@0â ;
  Some (x) -> â¥ : &'_ (i32) ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<i32> ;
  None -> â¥ : i32 ;
}



[[32mDebug[39m] eval_non_local_function_call:
- fid:CfimAst.BoxDerefMut
- type_params: [i32]
- args: [move var@3]
- dest: x
[[32mDebug[39m] activate_inactivated_mut_borrow: resulting value:
@Box(0: i32)
[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> âmut@0â ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> &mut@0 (@Box(0: i32)) ;
  Some (x) -> â¥ : &'_ (i32) ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<i32> ;
  None -> â¥ : i32 ;
}


- op:
move var@3

[[32mDebug[39m] ctx_pop_frame:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> âmut@0â ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ (i32) ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<i32> ;
  None -> â¥ : i32 ;
}

# Frame 1:
{
  Some (@return) -> &mut@1 (0: i32) ;
  Some (var@1) -> &mut@0 (@Box(âmut@1â)) ;
}

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> âmut@0â ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ (i32) ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<i32> ;
  None -> â¥ : i32 ;
}

# Frame 1:
{
  Some (@return) -> &mut@1 (0: i32) ;
  Some (var@1) -> &mut@0 (@Box(âmut@1â)) ;
}


- op:
move @return

[[32mDebug[39m] 
**About to evaluate statement**: [
  *(x) := 1: i32;
  var@5 := &b;
  x := move core::ops::deref::Deref<Box<i32>>::deref(move var@5);
  var@8 := copy *(x);
  var@7 := move var@8 == 1: i32;
  var@6 := Â¬ move var@7;
  assert(Â¬move var@6);
  drop(b);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> âmut@0â ;
  Some (x) -> &mut@1 (0: i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ (i32) ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<i32> ;
  None -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> &mut@0 (@Box(âmut@1â)) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  *(x) := 1: i32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> âmut@0â ;
  Some (x) -> &mut@1 (0: i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ (i32) ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<i32> ;
  None -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> &mut@0 (@Box(âmut@1â)) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> âmut@0â ;
  Some (x) -> &mut@1 (0: i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ (i32) ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<i32> ;
  None -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> &mut@0 (@Box(âmut@1â)) ;
}


- op:
1: i32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := &b;
  x := move core::ops::deref::Deref<Box<i32>>::deref(move var@5);
  var@8 := copy *(x);
  var@7 := move var@8 == 1: i32;
  var@6 := Â¬ move var@7;
  assert(Â¬move var@6);
  drop(b);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> âmut@0â ;
  Some (x) -> &mut@1 (1: i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ (i32) ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<i32> ;
  None -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> &mut@0 (@Box(âmut@1â)) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := &b
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> âmut@0â ;
  Some (x) -> &mut@1 (1: i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ (i32) ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<i32> ;
  None -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> &mut@0 (@Box(âmut@1â)) ;
}



[[32mDebug[39m] end borrow: 0:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> âmut@0â ;
  Some (x) -> &mut@1 (1: i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ (i32) ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<i32> ;
  None -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> &mut@0 (@Box(âmut@1â)) ;
}

[[32mDebug[39m] end borrow: 0: found outer borrows/abs:(InterpreterBorrowsCore.InnerLoans (InterpreterBorrowsCore.Borrow 1))
[[32mDebug[39m] end borrow: 1:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> âmut@0â ;
  Some (x) -> &mut@1 (1: i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ (i32) ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<i32> ;
  None -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> &mut@0 (@Box(âmut@1â)) ;
}

[[32mDebug[39m] give_back:
- bid: 1
- content: &mut@1 (1: i32)
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> âmut@0â ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ (i32) ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<i32> ;
  None -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> &mut@0 (@Box(âmut@1â)) ;
}


[[32mDebug[39m] give_back_value:
- bid: 1
- value: 1: i32
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> âmut@0â ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ (i32) ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<i32> ;
  None -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> &mut@0 (@Box(âmut@1â)) ;
}


[[32mDebug[39m] end borrow: 0:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> âmut@0â ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ (i32) ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<i32> ;
  None -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> &mut@0 (@Box(1: i32)) ;
}

[[32mDebug[39m] give_back:
- bid: 0
- content: &mut@0 (@Box(1: i32))
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> âmut@0â ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ (i32) ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<i32> ;
  None -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
}


[[32mDebug[39m] give_back_value:
- bid: 0
- value: @Box(1: i32)
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> âmut@0â ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ (i32) ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<i32> ;
  None -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
}


[[32mDebug[39m] 
**About to evaluate statement**: [
  x := move core::ops::deref::Deref<Box<i32>>::deref(move var@5);
  var@8 := copy *(x);
  var@7 := move var@8 == 1: i32;
  var@6 := Â¬ move var@7;
  assert(Â¬move var@6);
  drop(b);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> @shared_loan({2}, @Box(1: i32)) ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ (i32) ;
  Some (var@5) -> âshared@2â ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<i32> ;
  None -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  x := move core::ops::deref::Deref<Box<i32>>::deref(move var@5)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> @shared_loan({2}, @Box(1: i32)) ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ (i32) ;
  Some (var@5) -> âshared@2â ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<i32> ;
  None -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
}



[[32mDebug[39m] eval_non_local_function_call:
- fid:CfimAst.BoxDeref
- type_params: [i32]
- args: [move var@5]
- dest: x
[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> @shared_loan({2}, @Box(1: i32)) ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ (i32) ;
  Some (var@5) -> âshared@2â ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<i32> ;
  None -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
}


- op:
move var@5

[[32mDebug[39m] ctx_pop_frame:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> @shared_loan({2}, @Box(@shared_loan({3}, 1: i32))) ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ (i32) ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<i32> ;
  None -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
}

# Frame 1:
{
  Some (@return) -> âshared@3â ;
  Some (var@1) -> âshared@2â ;
}

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> @shared_loan({2}, @Box(@shared_loan({3}, 1: i32))) ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ (i32) ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<i32> ;
  None -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
}

# Frame 1:
{
  Some (@return) -> âshared@3â ;
  Some (var@1) -> âshared@2â ;
}


- op:
move @return

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := copy *(x);
  var@7 := move var@8 == 1: i32;
  var@6 := Â¬ move var@7;
  assert(Â¬move var@6);
  drop(b);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> @shared_loan({2}, @Box(@shared_loan({3}, 1: i32))) ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> âshared@3â ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<i32> ;
  None -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  None -> â¥ : &'_ (i32) ;
  None -> âshared@2â ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := copy *(x)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> @shared_loan({2}, @Box(@shared_loan({3}, 1: i32))) ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> âshared@3â ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<i32> ;
  None -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  None -> â¥ : &'_ (i32) ;
  None -> âshared@2â ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> @shared_loan({2}, @Box(@shared_loan({3}, 1: i32))) ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> âshared@3â ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<i32> ;
  None -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  None -> â¥ : &'_ (i32) ;
  None -> âshared@2â ;
}


- op:
copy *(x)

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := move var@8 == 1: i32;
  var@6 := Â¬ move var@7;
  assert(Â¬move var@6);
  drop(b);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> @shared_loan({2}, @Box(@shared_loan({3}, 1: i32))) ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> âshared@3â ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> 1: i32 ;
  None -> â¥ : std::boxed::Box<i32> ;
  None -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  None -> â¥ : &'_ (i32) ;
  None -> âshared@2â ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := move var@8 == 1: i32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> @shared_loan({2}, @Box(@shared_loan({3}, 1: i32))) ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> âshared@3â ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> 1: i32 ;
  None -> â¥ : std::boxed::Box<i32> ;
  None -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  None -> â¥ : &'_ (i32) ;
  None -> âshared@2â ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> @shared_loan({2}, @Box(@shared_loan({3}, 1: i32))) ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> âshared@3â ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> 1: i32 ;
  None -> â¥ : std::boxed::Box<i32> ;
  None -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  None -> â¥ : &'_ (i32) ;
  None -> âshared@2â ;
}


- op:
move var@8

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> @shared_loan({2}, @Box(@shared_loan({3}, 1: i32))) ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> âshared@3â ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<i32> ;
  None -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  None -> â¥ : &'_ (i32) ;
  None -> âshared@2â ;
}


- op:
1: i32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@6 := Â¬ move var@7;
  assert(Â¬move var@6);
  drop(b);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> @shared_loan({2}, @Box(@shared_loan({3}, 1: i32))) ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> âshared@3â ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> true ;
  Some (var@8) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<i32> ;
  None -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  None -> â¥ : &'_ (i32) ;
  None -> âshared@2â ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@6 := Â¬ move var@7
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> @shared_loan({2}, @Box(@shared_loan({3}, 1: i32))) ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> âshared@3â ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> true ;
  Some (var@8) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<i32> ;
  None -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  None -> â¥ : &'_ (i32) ;
  None -> âshared@2â ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> @shared_loan({2}, @Box(@shared_loan({3}, 1: i32))) ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> âshared@3â ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> true ;
  Some (var@8) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<i32> ;
  None -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  None -> â¥ : &'_ (i32) ;
  None -> âshared@2â ;
}


- op:
move var@7

[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@6);
  drop(b);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> @shared_loan({2}, @Box(@shared_loan({3}, 1: i32))) ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> âshared@3â ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> false ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<i32> ;
  None -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  None -> â¥ : &'_ (i32) ;
  None -> âshared@2â ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@6)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> @shared_loan({2}, @Box(@shared_loan({3}, 1: i32))) ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> âshared@3â ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> false ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<i32> ;
  None -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  None -> â¥ : &'_ (i32) ;
  None -> âshared@2â ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> @shared_loan({2}, @Box(@shared_loan({3}, 1: i32))) ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> âshared@3â ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> false ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<i32> ;
  None -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  None -> â¥ : &'_ (i32) ;
  None -> âshared@2â ;
}


- op:
move var@6

[[32mDebug[39m] 
**About to evaluate statement**: [
  drop(b);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> @shared_loan({2}, @Box(@shared_loan({3}, 1: i32))) ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> âshared@3â ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<i32> ;
  None -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  None -> â¥ : &'_ (i32) ;
  None -> âshared@2â ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  drop(b)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> @shared_loan({2}, @Box(@shared_loan({3}, 1: i32))) ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> âshared@3â ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<i32> ;
  None -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  None -> â¥ : &'_ (i32) ;
  None -> âshared@2â ;
}



[[32mDebug[39m] drop_value: place: b
[[32mDebug[39m] end borrow: 2:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> â¥ : std::boxed::Box<i32> ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> âshared@3â ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<i32> ;
  None -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  None -> â¥ : &'_ (i32) ;
  None -> âshared@2â ;
  None -> @shared_loan({2}, @Box(@shared_loan({3}, 1: i32))) ;
}

[[32mDebug[39m] give_back:
- bid: 2
- content: âshared@2â
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> â¥ : std::boxed::Box<i32> ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> âshared@3â ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<i32> ;
  None -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  None -> â¥ : &'_ (i32) ;
  None -> â¥ : &'_ (std::boxed::Box<i32>) ;
  None -> @shared_loan({2}, @Box(@shared_loan({3}, 1: i32))) ;
}


[[32mDebug[39m] end borrow: 3:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> â¥ : std::boxed::Box<i32> ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> âshared@3â ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<i32> ;
  None -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  None -> â¥ : &'_ (i32) ;
  None -> â¥ : &'_ (std::boxed::Box<i32>) ;
  None -> @Box(@shared_loan({3}, 1: i32)) ;
}

[[32mDebug[39m] give_back:
- bid: 3
- content: âshared@3â
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> â¥ : std::boxed::Box<i32> ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ (i32) ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<i32> ;
  None -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  None -> â¥ : &'_ (i32) ;
  None -> â¥ : &'_ (std::boxed::Box<i32>) ;
  None -> @Box(@shared_loan({3}, 1: i32)) ;
}


[[32mDebug[39m] 
**About to evaluate statement**: [
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> â¥ : std::boxed::Box<i32> ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ (i32) ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<i32> ;
  None -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  None -> â¥ : &'_ (i32) ;
  None -> â¥ : &'_ (std::boxed::Box<i32>) ;
}



[[32mDebug[39m] test_unit_function: test_copy_int
[[32mDebug[39m] 
**About to evaluate statement**: [
  x := 0: i32;
  px := &x;
  var@4 := copy x;
  y := move copy_int(move var@4);
  var@7 := copy *(px);
  var@8 := copy y;
  var@6 := move var@7 == move var@8;
  var@5 := Â¬ move var@6;
  assert(Â¬move var@5);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : i32 ;
  Some (px) -> â¥ : &'_ (i32) ;
  Some (y) -> â¥ : i32 ;
  Some (var@4) -> â¥ : i32 ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : i32 ;
  Some (var@8) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  x := 0: i32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : i32 ;
  Some (px) -> â¥ : &'_ (i32) ;
  Some (y) -> â¥ : i32 ;
  Some (var@4) -> â¥ : i32 ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : i32 ;
  Some (var@8) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : i32 ;
  Some (px) -> â¥ : &'_ (i32) ;
  Some (y) -> â¥ : i32 ;
  Some (var@4) -> â¥ : i32 ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : i32 ;
  Some (var@8) -> â¥ : i32 ;
}


- op:
0: i32

[[32mDebug[39m] 
**About to evaluate statement**: [
  px := &x;
  var@4 := copy x;
  y := move copy_int(move var@4);
  var@7 := copy *(px);
  var@8 := copy y;
  var@6 := move var@7 == move var@8;
  var@5 := Â¬ move var@6;
  assert(Â¬move var@5);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (px) -> â¥ : &'_ (i32) ;
  Some (y) -> â¥ : i32 ;
  Some (var@4) -> â¥ : i32 ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : i32 ;
  Some (var@8) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  px := &x
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (px) -> â¥ : &'_ (i32) ;
  Some (y) -> â¥ : i32 ;
  Some (var@4) -> â¥ : i32 ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : i32 ;
  Some (var@8) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := copy x;
  y := move copy_int(move var@4);
  var@7 := copy *(px);
  var@8 := copy y;
  var@6 := move var@7 == move var@8;
  var@5 := Â¬ move var@6;
  assert(Â¬move var@5);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> @shared_loan({0}, 0: i32) ;
  Some (px) -> âshared@0â ;
  Some (y) -> â¥ : i32 ;
  Some (var@4) -> â¥ : i32 ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : i32 ;
  Some (var@8) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := copy x
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> @shared_loan({0}, 0: i32) ;
  Some (px) -> âshared@0â ;
  Some (y) -> â¥ : i32 ;
  Some (var@4) -> â¥ : i32 ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : i32 ;
  Some (var@8) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> @shared_loan({0}, 0: i32) ;
  Some (px) -> âshared@0â ;
  Some (y) -> â¥ : i32 ;
  Some (var@4) -> â¥ : i32 ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : i32 ;
  Some (var@8) -> â¥ : i32 ;
}


- op:
copy x

[[32mDebug[39m] 
**About to evaluate statement**: [
  y := move copy_int(move var@4);
  var@7 := copy *(px);
  var@8 := copy y;
  var@6 := move var@7 == move var@8;
  var@5 := Â¬ move var@6;
  assert(Â¬move var@5);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> @shared_loan({0}, 0: i32) ;
  Some (px) -> âshared@0â ;
  Some (y) -> â¥ : i32 ;
  Some (var@4) -> 0: i32 ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : i32 ;
  Some (var@8) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  y := move copy_int(move var@4)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> @shared_loan({0}, 0: i32) ;
  Some (px) -> âshared@0â ;
  Some (y) -> â¥ : i32 ;
  Some (var@4) -> 0: i32 ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : i32 ;
  Some (var@8) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> @shared_loan({0}, 0: i32) ;
  Some (px) -> âshared@0â ;
  Some (y) -> â¥ : i32 ;
  Some (var@4) -> 0: i32 ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : i32 ;
  Some (var@8) -> â¥ : i32 ;
}


- op:
move var@4

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@0 := copy x;
  return
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> @shared_loan({0}, 0: i32) ;
  Some (px) -> âshared@0â ;
  Some (y) -> â¥ : i32 ;
  Some (var@4) -> â¥ : i32 ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : i32 ;
  Some (var@8) -> â¥ : i32 ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : i32 ;
  Some (x) -> 0: i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@0 := copy x
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> @shared_loan({0}, 0: i32) ;
  Some (px) -> âshared@0â ;
  Some (y) -> â¥ : i32 ;
  Some (var@4) -> â¥ : i32 ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : i32 ;
  Some (var@8) -> â¥ : i32 ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : i32 ;
  Some (x) -> 0: i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> @shared_loan({0}, 0: i32) ;
  Some (px) -> âshared@0â ;
  Some (y) -> â¥ : i32 ;
  Some (var@4) -> â¥ : i32 ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : i32 ;
  Some (var@8) -> â¥ : i32 ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : i32 ;
  Some (x) -> 0: i32 ;
}


- op:
copy x

[[32mDebug[39m] 
**About to evaluate statement**: [
  return
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> @shared_loan({0}, 0: i32) ;
  Some (px) -> âshared@0â ;
  Some (y) -> â¥ : i32 ;
  Some (var@4) -> â¥ : i32 ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : i32 ;
  Some (var@8) -> â¥ : i32 ;
}

# Frame 1:
{
  Some (var@0) -> 0: i32 ;
  Some (x) -> 0: i32 ;
}



[[32mDebug[39m] ctx_pop_frame:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> @shared_loan({0}, 0: i32) ;
  Some (px) -> âshared@0â ;
  Some (y) -> â¥ : i32 ;
  Some (var@4) -> â¥ : i32 ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : i32 ;
  Some (var@8) -> â¥ : i32 ;
}

# Frame 1:
{
  Some (var@0) -> 0: i32 ;
  Some (x) -> 0: i32 ;
}

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> @shared_loan({0}, 0: i32) ;
  Some (px) -> âshared@0â ;
  Some (y) -> â¥ : i32 ;
  Some (var@4) -> â¥ : i32 ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : i32 ;
  Some (var@8) -> â¥ : i32 ;
}

# Frame 1:
{
  Some (var@0) -> 0: i32 ;
  Some (x) -> 0: i32 ;
}


- op:
move var@0

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := copy *(px);
  var@8 := copy y;
  var@6 := move var@7 == move var@8;
  var@5 := Â¬ move var@6;
  assert(Â¬move var@5);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> @shared_loan({0}, 0: i32) ;
  Some (px) -> âshared@0â ;
  Some (y) -> 0: i32 ;
  Some (var@4) -> â¥ : i32 ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : i32 ;
  Some (var@8) -> â¥ : i32 ;
  None -> â¥ : i32 ;
  None -> 0: i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := copy *(px)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> @shared_loan({0}, 0: i32) ;
  Some (px) -> âshared@0â ;
  Some (y) -> 0: i32 ;
  Some (var@4) -> â¥ : i32 ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : i32 ;
  Some (var@8) -> â¥ : i32 ;
  None -> â¥ : i32 ;
  None -> 0: i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> @shared_loan({0}, 0: i32) ;
  Some (px) -> âshared@0â ;
  Some (y) -> 0: i32 ;
  Some (var@4) -> â¥ : i32 ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : i32 ;
  Some (var@8) -> â¥ : i32 ;
  None -> â¥ : i32 ;
  None -> 0: i32 ;
}


- op:
copy *(px)

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := copy y;
  var@6 := move var@7 == move var@8;
  var@5 := Â¬ move var@6;
  assert(Â¬move var@5);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> @shared_loan({0}, 0: i32) ;
  Some (px) -> âshared@0â ;
  Some (y) -> 0: i32 ;
  Some (var@4) -> â¥ : i32 ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> 0: i32 ;
  Some (var@8) -> â¥ : i32 ;
  None -> â¥ : i32 ;
  None -> 0: i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := copy y
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> @shared_loan({0}, 0: i32) ;
  Some (px) -> âshared@0â ;
  Some (y) -> 0: i32 ;
  Some (var@4) -> â¥ : i32 ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> 0: i32 ;
  Some (var@8) -> â¥ : i32 ;
  None -> â¥ : i32 ;
  None -> 0: i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> @shared_loan({0}, 0: i32) ;
  Some (px) -> âshared@0â ;
  Some (y) -> 0: i32 ;
  Some (var@4) -> â¥ : i32 ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> 0: i32 ;
  Some (var@8) -> â¥ : i32 ;
  None -> â¥ : i32 ;
  None -> 0: i32 ;
}


- op:
copy y

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@6 := move var@7 == move var@8;
  var@5 := Â¬ move var@6;
  assert(Â¬move var@5);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> @shared_loan({0}, 0: i32) ;
  Some (px) -> âshared@0â ;
  Some (y) -> 0: i32 ;
  Some (var@4) -> â¥ : i32 ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> 0: i32 ;
  Some (var@8) -> 0: i32 ;
  None -> â¥ : i32 ;
  None -> 0: i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@6 := move var@7 == move var@8
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> @shared_loan({0}, 0: i32) ;
  Some (px) -> âshared@0â ;
  Some (y) -> 0: i32 ;
  Some (var@4) -> â¥ : i32 ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> 0: i32 ;
  Some (var@8) -> 0: i32 ;
  None -> â¥ : i32 ;
  None -> 0: i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> @shared_loan({0}, 0: i32) ;
  Some (px) -> âshared@0â ;
  Some (y) -> 0: i32 ;
  Some (var@4) -> â¥ : i32 ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> 0: i32 ;
  Some (var@8) -> 0: i32 ;
  None -> â¥ : i32 ;
  None -> 0: i32 ;
}


- op:
move var@7

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> @shared_loan({0}, 0: i32) ;
  Some (px) -> âshared@0â ;
  Some (y) -> 0: i32 ;
  Some (var@4) -> â¥ : i32 ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : i32 ;
  Some (var@8) -> 0: i32 ;
  None -> â¥ : i32 ;
  None -> 0: i32 ;
}


- op:
move var@8

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := Â¬ move var@6;
  assert(Â¬move var@5);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> @shared_loan({0}, 0: i32) ;
  Some (px) -> âshared@0â ;
  Some (y) -> 0: i32 ;
  Some (var@4) -> â¥ : i32 ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> true ;
  Some (var@7) -> â¥ : i32 ;
  Some (var@8) -> â¥ : i32 ;
  None -> â¥ : i32 ;
  None -> 0: i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := Â¬ move var@6
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> @shared_loan({0}, 0: i32) ;
  Some (px) -> âshared@0â ;
  Some (y) -> 0: i32 ;
  Some (var@4) -> â¥ : i32 ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> true ;
  Some (var@7) -> â¥ : i32 ;
  Some (var@8) -> â¥ : i32 ;
  None -> â¥ : i32 ;
  None -> 0: i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> @shared_loan({0}, 0: i32) ;
  Some (px) -> âshared@0â ;
  Some (y) -> 0: i32 ;
  Some (var@4) -> â¥ : i32 ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> true ;
  Some (var@7) -> â¥ : i32 ;
  Some (var@8) -> â¥ : i32 ;
  None -> â¥ : i32 ;
  None -> 0: i32 ;
}


- op:
move var@6

[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@5);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> @shared_loan({0}, 0: i32) ;
  Some (px) -> âshared@0â ;
  Some (y) -> 0: i32 ;
  Some (var@4) -> â¥ : i32 ;
  Some (var@5) -> false ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : i32 ;
  Some (var@8) -> â¥ : i32 ;
  None -> â¥ : i32 ;
  None -> 0: i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@5)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> @shared_loan({0}, 0: i32) ;
  Some (px) -> âshared@0â ;
  Some (y) -> 0: i32 ;
  Some (var@4) -> â¥ : i32 ;
  Some (var@5) -> false ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : i32 ;
  Some (var@8) -> â¥ : i32 ;
  None -> â¥ : i32 ;
  None -> 0: i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> @shared_loan({0}, 0: i32) ;
  Some (px) -> âshared@0â ;
  Some (y) -> 0: i32 ;
  Some (var@4) -> â¥ : i32 ;
  Some (var@5) -> false ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : i32 ;
  Some (var@8) -> â¥ : i32 ;
  None -> â¥ : i32 ;
  None -> 0: i32 ;
}


- op:
move var@5

[[32mDebug[39m] 
**About to evaluate statement**: [
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> @shared_loan({0}, 0: i32) ;
  Some (px) -> âshared@0â ;
  Some (y) -> 0: i32 ;
  Some (var@4) -> â¥ : i32 ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : i32 ;
  Some (var@8) -> â¥ : i32 ;
  None -> â¥ : i32 ;
  None -> 0: i32 ;
}



[[32mDebug[39m] test_unit_function: test_is_cons
[[32mDebug[39m] 
**About to evaluate statement**: [
  set_discriminant(var@3, 1);
  var@2 := move alloc::boxed::Box<test1::List<i32>>::new(move var@3);
  (l as test1::List::Cons).0 := 0: i32;
  (l as test1::List::Cons).1 := move var@2;
  set_discriminant(l, 0);
  var@7 := &l;
  var@6 := copy var@7;
  var@5 := move is_cons<i32>(move var@6);
  var@4 := Â¬ move var@5;
  assert(Â¬move var@4);
  drop(l);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> â¥ : &'_ (test1::List<i32>) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  set_discriminant(var@3, 1)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> â¥ : &'_ (test1::List<i32>) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@2 := move alloc::boxed::Box<test1::List<i32>>::new(move var@3);
  (l as test1::List::Cons).0 := 0: i32;
  (l as test1::List::Cons).1 := move var@2;
  set_discriminant(l, 0);
  var@7 := &l;
  var@6 := copy var@7;
  var@5 := move is_cons<i32>(move var@6);
  var@4 := Â¬ move var@5;
  assert(Â¬move var@4);
  drop(l);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> test1::List::Nil ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> â¥ : &'_ (test1::List<i32>) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@2 := move alloc::boxed::Box<test1::List<i32>>::new(move var@3)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> test1::List::Nil ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> â¥ : &'_ (test1::List<i32>) ;
}



[[32mDebug[39m] eval_non_local_function_call:
- fid:CfimAst.BoxNew
- type_params: [test1::List<i32>]
- args: [move var@3]
- dest: var@2
[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> test1::List::Nil ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> â¥ : &'_ (test1::List<i32>) ;
}


- op:
move var@3

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> â¥ : &'_ (test1::List<i32>) ;
}

# Frame 1:
{
  Some (@return) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@1) -> test1::List::Nil ;
}


- op:
move var@1

[[32mDebug[39m] ctx_pop_frame:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> â¥ : &'_ (test1::List<i32>) ;
}

# Frame 1:
{
  Some (@return) -> @Box(test1::List::Nil) ;
  Some (var@1) -> â¥ : test1::List<i32> ;
}

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> â¥ : &'_ (test1::List<i32>) ;
}

# Frame 1:
{
  Some (@return) -> @Box(test1::List::Nil) ;
  Some (var@1) -> â¥ : test1::List<i32> ;
}


- op:
move @return

[[32mDebug[39m] 
**About to evaluate statement**: [
  (l as test1::List::Cons).0 := 0: i32;
  (l as test1::List::Cons).1 := move var@2;
  set_discriminant(l, 0);
  var@7 := &l;
  var@6 := copy var@7;
  var@5 := move is_cons<i32>(move var@6);
  var@4 := Â¬ move var@5;
  assert(Â¬move var@4);
  drop(l);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> @Box(test1::List::Nil) ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> â¥ : &'_ (test1::List<i32>) ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  (l as test1::List::Cons).0 := 0: i32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> @Box(test1::List::Nil) ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> â¥ : &'_ (test1::List<i32>) ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> @Box(test1::List::Nil) ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> â¥ : &'_ (test1::List<i32>) ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}


- op:
0: i32

[[32mDebug[39m] expand_bottom_value_from_projection:
pe: (Expressions.Field ((Expressions.ProjAdt (1, (Some 0))), 0))
ty: (Types.Adt ((Types.AdtId 1), [], [(Types.Integer Types.I32)]))
[[32mDebug[39m] 
**About to evaluate statement**: [
  (l as test1::List::Cons).1 := move var@2;
  set_discriminant(l, 0);
  var@7 := &l;
  var@6 := copy var@7;
  var@5 := move is_cons<i32>(move var@6);
  var@4 := Â¬ move var@5;
  assert(Â¬move var@4);
  drop(l);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> test1::List::Cons { 0 = 0: i32; 1 = â¥ : std::boxed::Box<test1::List<i32>>; } ;
  Some (var@2) -> @Box(test1::List::Nil) ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> â¥ : &'_ (test1::List<i32>) ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  (l as test1::List::Cons).1 := move var@2
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> test1::List::Cons { 0 = 0: i32; 1 = â¥ : std::boxed::Box<test1::List<i32>>; } ;
  Some (var@2) -> @Box(test1::List::Nil) ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> â¥ : &'_ (test1::List<i32>) ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> test1::List::Cons { 0 = 0: i32; 1 = â¥ : std::boxed::Box<test1::List<i32>>; } ;
  Some (var@2) -> @Box(test1::List::Nil) ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> â¥ : &'_ (test1::List<i32>) ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}


- op:
move var@2

[[32mDebug[39m] 
**About to evaluate statement**: [
  set_discriminant(l, 0);
  var@7 := &l;
  var@6 := copy var@7;
  var@5 := move is_cons<i32>(move var@6);
  var@4 := Â¬ move var@5;
  assert(Â¬move var@4);
  drop(l);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> test1::List::Cons { 0 = 0: i32; 1 = @Box(test1::List::Nil); } ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> â¥ : &'_ (test1::List<i32>) ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  set_discriminant(l, 0)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> test1::List::Cons { 0 = 0: i32; 1 = @Box(test1::List::Nil); } ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> â¥ : &'_ (test1::List<i32>) ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := &l;
  var@6 := copy var@7;
  var@5 := move is_cons<i32>(move var@6);
  var@4 := Â¬ move var@5;
  assert(Â¬move var@4);
  drop(l);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> test1::List::Cons { 0 = 0: i32; 1 = @Box(test1::List::Nil); } ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> â¥ : &'_ (test1::List<i32>) ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := &l
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> test1::List::Cons { 0 = 0: i32; 1 = @Box(test1::List::Nil); } ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> â¥ : &'_ (test1::List<i32>) ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@6 := copy var@7;
  var@5 := move is_cons<i32>(move var@6);
  var@4 := Â¬ move var@5;
  assert(Â¬move var@4);
  drop(l);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> @shared_loan({0}, test1::List::Cons { 0 = 0: i32; 1 = @Box(test1::List::Nil); }) ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> âshared@0â ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@6 := copy var@7
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> @shared_loan({0}, test1::List::Cons { 0 = 0: i32; 1 = @Box(test1::List::Nil); }) ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> âshared@0â ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> @shared_loan({0}, test1::List::Cons { 0 = 0: i32; 1 = @Box(test1::List::Nil); }) ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> âshared@0â ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}


- op:
copy var@7

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := move is_cons<i32>(move var@6);
  var@4 := Â¬ move var@5;
  assert(Â¬move var@4);
  drop(l);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> @shared_loan({0, 1}, test1::List::Cons { 0 = 0: i32; 1 = @Box(test1::List::Nil); }) ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> âshared@1â ;
  Some (var@7) -> âshared@0â ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := move is_cons<i32>(move var@6)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> @shared_loan({0, 1}, test1::List::Cons { 0 = 0: i32; 1 = @Box(test1::List::Nil); }) ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> âshared@1â ;
  Some (var@7) -> âshared@0â ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> @shared_loan({0, 1}, test1::List::Cons { 0 = 0: i32; 1 = @Box(test1::List::Nil); }) ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> âshared@1â ;
  Some (var@7) -> âshared@0â ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}


- op:
move var@6

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@2 := discriminant(*(l));
  switch (move var@2) {
    0: isize => {
      var@0 := true
    }
    1: isize => {
      var@0 := false
    }
    _ => {
      panic
    }
  };
  return
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> @shared_loan({0, 1}, test1::List::Cons { 0 = 0: i32; 1 = @Box(test1::List::Nil); }) ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> âshared@0â ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : bool ;
  Some (l) -> âshared@1â ;
  Some (var@2) -> â¥ : isize ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@2 := discriminant(*(l))
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> @shared_loan({0, 1}, test1::List::Cons { 0 = 0: i32; 1 = @Box(test1::List::Nil); }) ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> âshared@0â ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : bool ;
  Some (l) -> âshared@1â ;
  Some (var@2) -> â¥ : isize ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  switch (move var@2) {
    0: isize => {
      var@0 := true
    }
    1: isize => {
      var@0 := false
    }
    _ => {
      panic
    }
  };
  return
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> @shared_loan({0, 1}, test1::List::Cons { 0 = 0: i32; 1 = @Box(test1::List::Nil); }) ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> âshared@0â ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : bool ;
  Some (l) -> âshared@1â ;
  Some (var@2) -> 0: isize ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  switch (move var@2) {
    0: isize => {
      var@0 := true
    }
    1: isize => {
      var@0 := false
    }
    _ => {
      panic
    }
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> @shared_loan({0, 1}, test1::List::Cons { 0 = 0: i32; 1 = @Box(test1::List::Nil); }) ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> âshared@0â ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : bool ;
  Some (l) -> âshared@1â ;
  Some (var@2) -> 0: isize ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> @shared_loan({0, 1}, test1::List::Cons { 0 = 0: i32; 1 = @Box(test1::List::Nil); }) ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> âshared@0â ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : bool ;
  Some (l) -> âshared@1â ;
  Some (var@2) -> 0: isize ;
}


- op:
move var@2

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@0 := true
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> @shared_loan({0, 1}, test1::List::Cons { 0 = 0: i32; 1 = @Box(test1::List::Nil); }) ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> âshared@0â ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : bool ;
  Some (l) -> âshared@1â ;
  Some (var@2) -> â¥ : isize ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> @shared_loan({0, 1}, test1::List::Cons { 0 = 0: i32; 1 = @Box(test1::List::Nil); }) ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> âshared@0â ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : bool ;
  Some (l) -> âshared@1â ;
  Some (var@2) -> â¥ : isize ;
}


- op:
true

[[32mDebug[39m] 
**About to evaluate statement**: [
  return
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> @shared_loan({0, 1}, test1::List::Cons { 0 = 0: i32; 1 = @Box(test1::List::Nil); }) ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> âshared@0â ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}

# Frame 1:
{
  Some (var@0) -> true ;
  Some (l) -> âshared@1â ;
  Some (var@2) -> â¥ : isize ;
}



[[32mDebug[39m] ctx_pop_frame:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> @shared_loan({0, 1}, test1::List::Cons { 0 = 0: i32; 1 = @Box(test1::List::Nil); }) ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> âshared@0â ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}

# Frame 1:
{
  Some (var@0) -> true ;
  Some (l) -> âshared@1â ;
  Some (var@2) -> â¥ : isize ;
}

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> @shared_loan({0, 1}, test1::List::Cons { 0 = 0: i32; 1 = @Box(test1::List::Nil); }) ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> âshared@0â ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}

# Frame 1:
{
  Some (var@0) -> true ;
  Some (l) -> âshared@1â ;
  Some (var@2) -> â¥ : isize ;
}


- op:
move var@0

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := Â¬ move var@5;
  assert(Â¬move var@4);
  drop(l);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> @shared_loan({0, 1}, test1::List::Cons { 0 = 0: i32; 1 = @Box(test1::List::Nil); }) ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> true ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> âshared@0â ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
  None -> â¥ : bool ;
  None -> âshared@1â ;
  None -> â¥ : isize ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := Â¬ move var@5
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> @shared_loan({0, 1}, test1::List::Cons { 0 = 0: i32; 1 = @Box(test1::List::Nil); }) ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> true ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> âshared@0â ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
  None -> â¥ : bool ;
  None -> âshared@1â ;
  None -> â¥ : isize ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> @shared_loan({0, 1}, test1::List::Cons { 0 = 0: i32; 1 = @Box(test1::List::Nil); }) ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> true ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> âshared@0â ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
  None -> â¥ : bool ;
  None -> âshared@1â ;
  None -> â¥ : isize ;
}


- op:
move var@5

[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@4);
  drop(l);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> @shared_loan({0, 1}, test1::List::Cons { 0 = 0: i32; 1 = @Box(test1::List::Nil); }) ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> false ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> âshared@0â ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
  None -> â¥ : bool ;
  None -> âshared@1â ;
  None -> â¥ : isize ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@4)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> @shared_loan({0, 1}, test1::List::Cons { 0 = 0: i32; 1 = @Box(test1::List::Nil); }) ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> false ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> âshared@0â ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
  None -> â¥ : bool ;
  None -> âshared@1â ;
  None -> â¥ : isize ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> @shared_loan({0, 1}, test1::List::Cons { 0 = 0: i32; 1 = @Box(test1::List::Nil); }) ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> false ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> âshared@0â ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
  None -> â¥ : bool ;
  None -> âshared@1â ;
  None -> â¥ : isize ;
}


- op:
move var@4

[[32mDebug[39m] 
**About to evaluate statement**: [
  drop(l);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> @shared_loan({0, 1}, test1::List::Cons { 0 = 0: i32; 1 = @Box(test1::List::Nil); }) ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> âshared@0â ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
  None -> â¥ : bool ;
  None -> âshared@1â ;
  None -> â¥ : isize ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  drop(l)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> @shared_loan({0, 1}, test1::List::Cons { 0 = 0: i32; 1 = @Box(test1::List::Nil); }) ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> âshared@0â ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
  None -> â¥ : bool ;
  None -> âshared@1â ;
  None -> â¥ : isize ;
}



[[32mDebug[39m] drop_value: place: l
[[32mDebug[39m] end borrow: 0:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> âshared@0â ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
  None -> â¥ : bool ;
  None -> âshared@1â ;
  None -> â¥ : isize ;
  None -> @shared_loan({0, 1}, test1::List::Cons { 0 = 0: i32; 1 = @Box(test1::List::Nil); }) ;
}

[[32mDebug[39m] give_back:
- bid: 0
- content: âshared@0â
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> â¥ : &'_ (test1::List<i32>) ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
  None -> â¥ : bool ;
  None -> âshared@1â ;
  None -> â¥ : isize ;
  None -> @shared_loan({0, 1}, test1::List::Cons { 0 = 0: i32; 1 = @Box(test1::List::Nil); }) ;
}


[[32mDebug[39m] end borrow: 1:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> â¥ : &'_ (test1::List<i32>) ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
  None -> â¥ : bool ;
  None -> âshared@1â ;
  None -> â¥ : isize ;
  None -> @shared_loan({1}, test1::List::Cons { 0 = 0: i32; 1 = @Box(test1::List::Nil); }) ;
}

[[32mDebug[39m] give_back:
- bid: 1
- content: âshared@1â
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> â¥ : &'_ (test1::List<i32>) ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
  None -> â¥ : bool ;
  None -> â¥ : &'_ (test1::List<i32>) ;
  None -> â¥ : isize ;
  None -> @shared_loan({1}, test1::List::Cons { 0 = 0: i32; 1 = @Box(test1::List::Nil); }) ;
}


[[32mDebug[39m] 
**About to evaluate statement**: [
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> â¥ : &'_ (test1::List<i32>) ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
  None -> â¥ : bool ;
  None -> â¥ : &'_ (test1::List<i32>) ;
  None -> â¥ : isize ;
}



[[32mDebug[39m] test_unit_function: test_split_list
[[32mDebug[39m] 
**About to evaluate statement**: [
  set_discriminant(var@3, 1);
  var@2 := move alloc::boxed::Box<test1::List<i32>>::new(move var@3);
  (l as test1::List::Cons).0 := 0: i32;
  (l as test1::List::Cons).1 := move var@2;
  set_discriminant(l, 0);
  var@7 := move l;
  var@6 := move split_list<i32>(move var@7);
  hd := copy (var@6).0;
  tl := move (var@6).1;
  var@10 := copy hd;
  var@9 := move var@10 == 0: i32;
  var@8 := Â¬ move var@9;
  assert(Â¬move var@8);
  drop(tl);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  set_discriminant(var@3, 1)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@2 := move alloc::boxed::Box<test1::List<i32>>::new(move var@3);
  (l as test1::List::Cons).0 := 0: i32;
  (l as test1::List::Cons).1 := move var@2;
  set_discriminant(l, 0);
  var@7 := move l;
  var@6 := move split_list<i32>(move var@7);
  hd := copy (var@6).0;
  tl := move (var@6).1;
  var@10 := copy hd;
  var@9 := move var@10 == 0: i32;
  var@8 := Â¬ move var@9;
  assert(Â¬move var@8);
  drop(tl);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> test1::List::Nil ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@2 := move alloc::boxed::Box<test1::List<i32>>::new(move var@3)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> test1::List::Nil ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_non_local_function_call:
- fid:CfimAst.BoxNew
- type_params: [test1::List<i32>]
- args: [move var@3]
- dest: var@2
[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> test1::List::Nil ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
}


- op:
move var@3

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
}

# Frame 1:
{
  Some (@return) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@1) -> test1::List::Nil ;
}


- op:
move var@1

[[32mDebug[39m] ctx_pop_frame:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
}

# Frame 1:
{
  Some (@return) -> @Box(test1::List::Nil) ;
  Some (var@1) -> â¥ : test1::List<i32> ;
}

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
}

# Frame 1:
{
  Some (@return) -> @Box(test1::List::Nil) ;
  Some (var@1) -> â¥ : test1::List<i32> ;
}


- op:
move @return

[[32mDebug[39m] 
**About to evaluate statement**: [
  (l as test1::List::Cons).0 := 0: i32;
  (l as test1::List::Cons).1 := move var@2;
  set_discriminant(l, 0);
  var@7 := move l;
  var@6 := move split_list<i32>(move var@7);
  hd := copy (var@6).0;
  tl := move (var@6).1;
  var@10 := copy hd;
  var@9 := move var@10 == 0: i32;
  var@8 := Â¬ move var@9;
  assert(Â¬move var@8);
  drop(tl);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> @Box(test1::List::Nil) ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  (l as test1::List::Cons).0 := 0: i32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> @Box(test1::List::Nil) ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> @Box(test1::List::Nil) ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}


- op:
0: i32

[[32mDebug[39m] expand_bottom_value_from_projection:
pe: (Expressions.Field ((Expressions.ProjAdt (1, (Some 0))), 0))
ty: (Types.Adt ((Types.AdtId 1), [], [(Types.Integer Types.I32)]))
[[32mDebug[39m] 
**About to evaluate statement**: [
  (l as test1::List::Cons).1 := move var@2;
  set_discriminant(l, 0);
  var@7 := move l;
  var@6 := move split_list<i32>(move var@7);
  hd := copy (var@6).0;
  tl := move (var@6).1;
  var@10 := copy hd;
  var@9 := move var@10 == 0: i32;
  var@8 := Â¬ move var@9;
  assert(Â¬move var@8);
  drop(tl);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> test1::List::Cons { 0 = 0: i32; 1 = â¥ : std::boxed::Box<test1::List<i32>>; } ;
  Some (var@2) -> @Box(test1::List::Nil) ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  (l as test1::List::Cons).1 := move var@2
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> test1::List::Cons { 0 = 0: i32; 1 = â¥ : std::boxed::Box<test1::List<i32>>; } ;
  Some (var@2) -> @Box(test1::List::Nil) ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> test1::List::Cons { 0 = 0: i32; 1 = â¥ : std::boxed::Box<test1::List<i32>>; } ;
  Some (var@2) -> @Box(test1::List::Nil) ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}


- op:
move var@2

[[32mDebug[39m] 
**About to evaluate statement**: [
  set_discriminant(l, 0);
  var@7 := move l;
  var@6 := move split_list<i32>(move var@7);
  hd := copy (var@6).0;
  tl := move (var@6).1;
  var@10 := copy hd;
  var@9 := move var@10 == 0: i32;
  var@8 := Â¬ move var@9;
  assert(Â¬move var@8);
  drop(tl);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> test1::List::Cons { 0 = 0: i32; 1 = @Box(test1::List::Nil); } ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  set_discriminant(l, 0)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> test1::List::Cons { 0 = 0: i32; 1 = @Box(test1::List::Nil); } ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := move l;
  var@6 := move split_list<i32>(move var@7);
  hd := copy (var@6).0;
  tl := move (var@6).1;
  var@10 := copy hd;
  var@9 := move var@10 == 0: i32;
  var@8 := Â¬ move var@9;
  assert(Â¬move var@8);
  drop(tl);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> test1::List::Cons { 0 = 0: i32; 1 = @Box(test1::List::Nil); } ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := move l
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> test1::List::Cons { 0 = 0: i32; 1 = @Box(test1::List::Nil); } ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> test1::List::Cons { 0 = 0: i32; 1 = @Box(test1::List::Nil); } ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}


- op:
move l

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@6 := move split_list<i32>(move var@7);
  hd := copy (var@6).0;
  tl := move (var@6).1;
  var@10 := copy hd;
  var@9 := move var@10 == 0: i32;
  var@8 := Â¬ move var@9;
  assert(Â¬move var@8);
  drop(tl);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> test1::List::Cons { 0 = 0: i32; 1 = @Box(test1::List::Nil); } ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@6 := move split_list<i32>(move var@7)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> test1::List::Cons { 0 = 0: i32; 1 = @Box(test1::List::Nil); } ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> test1::List::Cons { 0 = 0: i32; 1 = @Box(test1::List::Nil); } ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}


- op:
move var@7

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := false;
  var@7 := false;
  var@7 := true;
  var@8 := true;
  var@2 := discriminant(l);
  switch (move var@2) {
    0: isize => {
      var@8 := false;
      hd := move (l as test1::List::Cons).0;
      var@7 := false;
      tl := move (l as test1::List::Cons).1;
      var@5 := move hd;
      var@6 := move deref_box(tl);
      (var@0).0 := move var@5;
      (var@0).1 := move var@6;
      var@9 := move alloc::alloc::box_free<test1::List<i32>>(move tl);
      return
    }
    _ => {
      panic
    }
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : (i32, test1::List<i32>) ;
  Some (l) -> test1::List::Cons { 0 = 0: i32; 1 = @Box(test1::List::Nil); } ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@5) -> â¥ : i32 ;
  Some (var@6) -> â¥ : test1::List<i32> ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := false
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : (i32, test1::List<i32>) ;
  Some (l) -> test1::List::Cons { 0 = 0: i32; 1 = @Box(test1::List::Nil); } ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@5) -> â¥ : i32 ;
  Some (var@6) -> â¥ : test1::List<i32> ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : (i32, test1::List<i32>) ;
  Some (l) -> test1::List::Cons { 0 = 0: i32; 1 = @Box(test1::List::Nil); } ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@5) -> â¥ : i32 ;
  Some (var@6) -> â¥ : test1::List<i32> ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}


- op:
false

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := false;
  var@7 := true;
  var@8 := true;
  var@2 := discriminant(l);
  switch (move var@2) {
    0: isize => {
      var@8 := false;
      hd := move (l as test1::List::Cons).0;
      var@7 := false;
      tl := move (l as test1::List::Cons).1;
      var@5 := move hd;
      var@6 := move deref_box(tl);
      (var@0).0 := move var@5;
      (var@0).1 := move var@6;
      var@9 := move alloc::alloc::box_free<test1::List<i32>>(move tl);
      return
    }
    _ => {
      panic
    }
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : (i32, test1::List<i32>) ;
  Some (l) -> test1::List::Cons { 0 = 0: i32; 1 = @Box(test1::List::Nil); } ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@5) -> â¥ : i32 ;
  Some (var@6) -> â¥ : test1::List<i32> ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> false ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := false
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : (i32, test1::List<i32>) ;
  Some (l) -> test1::List::Cons { 0 = 0: i32; 1 = @Box(test1::List::Nil); } ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@5) -> â¥ : i32 ;
  Some (var@6) -> â¥ : test1::List<i32> ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> false ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : (i32, test1::List<i32>) ;
  Some (l) -> test1::List::Cons { 0 = 0: i32; 1 = @Box(test1::List::Nil); } ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@5) -> â¥ : i32 ;
  Some (var@6) -> â¥ : test1::List<i32> ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> false ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}


- op:
false

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := true;
  var@8 := true;
  var@2 := discriminant(l);
  switch (move var@2) {
    0: isize => {
      var@8 := false;
      hd := move (l as test1::List::Cons).0;
      var@7 := false;
      tl := move (l as test1::List::Cons).1;
      var@5 := move hd;
      var@6 := move deref_box(tl);
      (var@0).0 := move var@5;
      (var@0).1 := move var@6;
      var@9 := move alloc::alloc::box_free<test1::List<i32>>(move tl);
      return
    }
    _ => {
      panic
    }
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : (i32, test1::List<i32>) ;
  Some (l) -> test1::List::Cons { 0 = 0: i32; 1 = @Box(test1::List::Nil); } ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@5) -> â¥ : i32 ;
  Some (var@6) -> â¥ : test1::List<i32> ;
  Some (var@7) -> false ;
  Some (var@8) -> false ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := true
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : (i32, test1::List<i32>) ;
  Some (l) -> test1::List::Cons { 0 = 0: i32; 1 = @Box(test1::List::Nil); } ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@5) -> â¥ : i32 ;
  Some (var@6) -> â¥ : test1::List<i32> ;
  Some (var@7) -> false ;
  Some (var@8) -> false ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : (i32, test1::List<i32>) ;
  Some (l) -> test1::List::Cons { 0 = 0: i32; 1 = @Box(test1::List::Nil); } ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@5) -> â¥ : i32 ;
  Some (var@6) -> â¥ : test1::List<i32> ;
  Some (var@7) -> false ;
  Some (var@8) -> false ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}


- op:
true

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := true;
  var@2 := discriminant(l);
  switch (move var@2) {
    0: isize => {
      var@8 := false;
      hd := move (l as test1::List::Cons).0;
      var@7 := false;
      tl := move (l as test1::List::Cons).1;
      var@5 := move hd;
      var@6 := move deref_box(tl);
      (var@0).0 := move var@5;
      (var@0).1 := move var@6;
      var@9 := move alloc::alloc::box_free<test1::List<i32>>(move tl);
      return
    }
    _ => {
      panic
    }
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : (i32, test1::List<i32>) ;
  Some (l) -> test1::List::Cons { 0 = 0: i32; 1 = @Box(test1::List::Nil); } ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@5) -> â¥ : i32 ;
  Some (var@6) -> â¥ : test1::List<i32> ;
  Some (var@7) -> true ;
  Some (var@8) -> false ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := true
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : (i32, test1::List<i32>) ;
  Some (l) -> test1::List::Cons { 0 = 0: i32; 1 = @Box(test1::List::Nil); } ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@5) -> â¥ : i32 ;
  Some (var@6) -> â¥ : test1::List<i32> ;
  Some (var@7) -> true ;
  Some (var@8) -> false ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : (i32, test1::List<i32>) ;
  Some (l) -> test1::List::Cons { 0 = 0: i32; 1 = @Box(test1::List::Nil); } ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@5) -> â¥ : i32 ;
  Some (var@6) -> â¥ : test1::List<i32> ;
  Some (var@7) -> true ;
  Some (var@8) -> false ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}


- op:
true

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@2 := discriminant(l);
  switch (move var@2) {
    0: isize => {
      var@8 := false;
      hd := move (l as test1::List::Cons).0;
      var@7 := false;
      tl := move (l as test1::List::Cons).1;
      var@5 := move hd;
      var@6 := move deref_box(tl);
      (var@0).0 := move var@5;
      (var@0).1 := move var@6;
      var@9 := move alloc::alloc::box_free<test1::List<i32>>(move tl);
      return
    }
    _ => {
      panic
    }
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : (i32, test1::List<i32>) ;
  Some (l) -> test1::List::Cons { 0 = 0: i32; 1 = @Box(test1::List::Nil); } ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@5) -> â¥ : i32 ;
  Some (var@6) -> â¥ : test1::List<i32> ;
  Some (var@7) -> true ;
  Some (var@8) -> true ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@2 := discriminant(l)
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : (i32, test1::List<i32>) ;
  Some (l) -> test1::List::Cons { 0 = 0: i32; 1 = @Box(test1::List::Nil); } ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@5) -> â¥ : i32 ;
  Some (var@6) -> â¥ : test1::List<i32> ;
  Some (var@7) -> true ;
  Some (var@8) -> true ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  switch (move var@2) {
    0: isize => {
      var@8 := false;
      hd := move (l as test1::List::Cons).0;
      var@7 := false;
      tl := move (l as test1::List::Cons).1;
      var@5 := move hd;
      var@6 := move deref_box(tl);
      (var@0).0 := move var@5;
      (var@0).1 := move var@6;
      var@9 := move alloc::alloc::box_free<test1::List<i32>>(move tl);
      return
    }
    _ => {
      panic
    }
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : (i32, test1::List<i32>) ;
  Some (l) -> test1::List::Cons { 0 = 0: i32; 1 = @Box(test1::List::Nil); } ;
  Some (var@2) -> 0: isize ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@5) -> â¥ : i32 ;
  Some (var@6) -> â¥ : test1::List<i32> ;
  Some (var@7) -> true ;
  Some (var@8) -> true ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : (i32, test1::List<i32>) ;
  Some (l) -> test1::List::Cons { 0 = 0: i32; 1 = @Box(test1::List::Nil); } ;
  Some (var@2) -> 0: isize ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@5) -> â¥ : i32 ;
  Some (var@6) -> â¥ : test1::List<i32> ;
  Some (var@7) -> true ;
  Some (var@8) -> true ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}


- op:
move var@2

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := false;
  hd := move (l as test1::List::Cons).0;
  var@7 := false;
  tl := move (l as test1::List::Cons).1;
  var@5 := move hd;
  var@6 := move deref_box(tl);
  (var@0).0 := move var@5;
  (var@0).1 := move var@6;
  var@9 := move alloc::alloc::box_free<test1::List<i32>>(move tl);
  return
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : (i32, test1::List<i32>) ;
  Some (l) -> test1::List::Cons { 0 = 0: i32; 1 = @Box(test1::List::Nil); } ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@5) -> â¥ : i32 ;
  Some (var@6) -> â¥ : test1::List<i32> ;
  Some (var@7) -> true ;
  Some (var@8) -> true ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := false
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : (i32, test1::List<i32>) ;
  Some (l) -> test1::List::Cons { 0 = 0: i32; 1 = @Box(test1::List::Nil); } ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@5) -> â¥ : i32 ;
  Some (var@6) -> â¥ : test1::List<i32> ;
  Some (var@7) -> true ;
  Some (var@8) -> true ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : (i32, test1::List<i32>) ;
  Some (l) -> test1::List::Cons { 0 = 0: i32; 1 = @Box(test1::List::Nil); } ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@5) -> â¥ : i32 ;
  Some (var@6) -> â¥ : test1::List<i32> ;
  Some (var@7) -> true ;
  Some (var@8) -> true ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}


- op:
false

[[32mDebug[39m] 
**About to evaluate statement**: [
  hd := move (l as test1::List::Cons).0;
  var@7 := false;
  tl := move (l as test1::List::Cons).1;
  var@5 := move hd;
  var@6 := move deref_box(tl);
  (var@0).0 := move var@5;
  (var@0).1 := move var@6;
  var@9 := move alloc::alloc::box_free<test1::List<i32>>(move tl);
  return
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : (i32, test1::List<i32>) ;
  Some (l) -> test1::List::Cons { 0 = 0: i32; 1 = @Box(test1::List::Nil); } ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@5) -> â¥ : i32 ;
  Some (var@6) -> â¥ : test1::List<i32> ;
  Some (var@7) -> true ;
  Some (var@8) -> false ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  hd := move (l as test1::List::Cons).0
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : (i32, test1::List<i32>) ;
  Some (l) -> test1::List::Cons { 0 = 0: i32; 1 = @Box(test1::List::Nil); } ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@5) -> â¥ : i32 ;
  Some (var@6) -> â¥ : test1::List<i32> ;
  Some (var@7) -> true ;
  Some (var@8) -> false ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : (i32, test1::List<i32>) ;
  Some (l) -> test1::List::Cons { 0 = 0: i32; 1 = @Box(test1::List::Nil); } ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@5) -> â¥ : i32 ;
  Some (var@6) -> â¥ : test1::List<i32> ;
  Some (var@7) -> true ;
  Some (var@8) -> false ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}


- op:
move (l as test1::List::Cons).0

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := false;
  tl := move (l as test1::List::Cons).1;
  var@5 := move hd;
  var@6 := move deref_box(tl);
  (var@0).0 := move var@5;
  (var@0).1 := move var@6;
  var@9 := move alloc::alloc::box_free<test1::List<i32>>(move tl);
  return
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : (i32, test1::List<i32>) ;
  Some (l) -> test1::List::Cons { 0 = â¥ : i32; 1 = @Box(test1::List::Nil); } ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> 0: i32 ;
  Some (tl) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@5) -> â¥ : i32 ;
  Some (var@6) -> â¥ : test1::List<i32> ;
  Some (var@7) -> true ;
  Some (var@8) -> false ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := false
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : (i32, test1::List<i32>) ;
  Some (l) -> test1::List::Cons { 0 = â¥ : i32; 1 = @Box(test1::List::Nil); } ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> 0: i32 ;
  Some (tl) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@5) -> â¥ : i32 ;
  Some (var@6) -> â¥ : test1::List<i32> ;
  Some (var@7) -> true ;
  Some (var@8) -> false ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : (i32, test1::List<i32>) ;
  Some (l) -> test1::List::Cons { 0 = â¥ : i32; 1 = @Box(test1::List::Nil); } ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> 0: i32 ;
  Some (tl) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@5) -> â¥ : i32 ;
  Some (var@6) -> â¥ : test1::List<i32> ;
  Some (var@7) -> true ;
  Some (var@8) -> false ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}


- op:
false

[[32mDebug[39m] 
**About to evaluate statement**: [
  tl := move (l as test1::List::Cons).1;
  var@5 := move hd;
  var@6 := move deref_box(tl);
  (var@0).0 := move var@5;
  (var@0).1 := move var@6;
  var@9 := move alloc::alloc::box_free<test1::List<i32>>(move tl);
  return
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : (i32, test1::List<i32>) ;
  Some (l) -> test1::List::Cons { 0 = â¥ : i32; 1 = @Box(test1::List::Nil); } ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> 0: i32 ;
  Some (tl) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@5) -> â¥ : i32 ;
  Some (var@6) -> â¥ : test1::List<i32> ;
  Some (var@7) -> false ;
  Some (var@8) -> false ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  tl := move (l as test1::List::Cons).1
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : (i32, test1::List<i32>) ;
  Some (l) -> test1::List::Cons { 0 = â¥ : i32; 1 = @Box(test1::List::Nil); } ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> 0: i32 ;
  Some (tl) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@5) -> â¥ : i32 ;
  Some (var@6) -> â¥ : test1::List<i32> ;
  Some (var@7) -> false ;
  Some (var@8) -> false ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : (i32, test1::List<i32>) ;
  Some (l) -> test1::List::Cons { 0 = â¥ : i32; 1 = @Box(test1::List::Nil); } ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> 0: i32 ;
  Some (tl) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@5) -> â¥ : i32 ;
  Some (var@6) -> â¥ : test1::List<i32> ;
  Some (var@7) -> false ;
  Some (var@8) -> false ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}


- op:
move (l as test1::List::Cons).1

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := move hd;
  var@6 := move deref_box(tl);
  (var@0).0 := move var@5;
  (var@0).1 := move var@6;
  var@9 := move alloc::alloc::box_free<test1::List<i32>>(move tl);
  return
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : (i32, test1::List<i32>) ;
  Some (l) -> test1::List::Cons { 0 = â¥ : i32; 1 = â¥ : std::boxed::Box<test1::List<i32>>; } ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> 0: i32 ;
  Some (tl) -> @Box(test1::List::Nil) ;
  Some (var@5) -> â¥ : i32 ;
  Some (var@6) -> â¥ : test1::List<i32> ;
  Some (var@7) -> false ;
  Some (var@8) -> false ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := move hd
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : (i32, test1::List<i32>) ;
  Some (l) -> test1::List::Cons { 0 = â¥ : i32; 1 = â¥ : std::boxed::Box<test1::List<i32>>; } ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> 0: i32 ;
  Some (tl) -> @Box(test1::List::Nil) ;
  Some (var@5) -> â¥ : i32 ;
  Some (var@6) -> â¥ : test1::List<i32> ;
  Some (var@7) -> false ;
  Some (var@8) -> false ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : (i32, test1::List<i32>) ;
  Some (l) -> test1::List::Cons { 0 = â¥ : i32; 1 = â¥ : std::boxed::Box<test1::List<i32>>; } ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> 0: i32 ;
  Some (tl) -> @Box(test1::List::Nil) ;
  Some (var@5) -> â¥ : i32 ;
  Some (var@6) -> â¥ : test1::List<i32> ;
  Some (var@7) -> false ;
  Some (var@8) -> false ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}


- op:
move hd

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@6 := move deref_box(tl);
  (var@0).0 := move var@5;
  (var@0).1 := move var@6;
  var@9 := move alloc::alloc::box_free<test1::List<i32>>(move tl);
  return
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : (i32, test1::List<i32>) ;
  Some (l) -> test1::List::Cons { 0 = â¥ : i32; 1 = â¥ : std::boxed::Box<test1::List<i32>>; } ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> @Box(test1::List::Nil) ;
  Some (var@5) -> 0: i32 ;
  Some (var@6) -> â¥ : test1::List<i32> ;
  Some (var@7) -> false ;
  Some (var@8) -> false ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@6 := move deref_box(tl)
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : (i32, test1::List<i32>) ;
  Some (l) -> test1::List::Cons { 0 = â¥ : i32; 1 = â¥ : std::boxed::Box<test1::List<i32>>; } ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> @Box(test1::List::Nil) ;
  Some (var@5) -> 0: i32 ;
  Some (var@6) -> â¥ : test1::List<i32> ;
  Some (var@7) -> false ;
  Some (var@8) -> false ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : (i32, test1::List<i32>) ;
  Some (l) -> test1::List::Cons { 0 = â¥ : i32; 1 = â¥ : std::boxed::Box<test1::List<i32>>; } ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> @Box(test1::List::Nil) ;
  Some (var@5) -> 0: i32 ;
  Some (var@6) -> â¥ : test1::List<i32> ;
  Some (var@7) -> false ;
  Some (var@8) -> false ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}


- op:
move deref_box(tl)

[[32mDebug[39m] 
**About to evaluate statement**: [
  (var@0).0 := move var@5;
  (var@0).1 := move var@6;
  var@9 := move alloc::alloc::box_free<test1::List<i32>>(move tl);
  return
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : (i32, test1::List<i32>) ;
  Some (l) -> test1::List::Cons { 0 = â¥ : i32; 1 = â¥ : std::boxed::Box<test1::List<i32>>; } ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> @Box(â¥ : test1::List<i32>) ;
  Some (var@5) -> 0: i32 ;
  Some (var@6) -> test1::List::Nil ;
  Some (var@7) -> false ;
  Some (var@8) -> false ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  (var@0).0 := move var@5
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : (i32, test1::List<i32>) ;
  Some (l) -> test1::List::Cons { 0 = â¥ : i32; 1 = â¥ : std::boxed::Box<test1::List<i32>>; } ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> @Box(â¥ : test1::List<i32>) ;
  Some (var@5) -> 0: i32 ;
  Some (var@6) -> test1::List::Nil ;
  Some (var@7) -> false ;
  Some (var@8) -> false ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : (i32, test1::List<i32>) ;
  Some (l) -> test1::List::Cons { 0 = â¥ : i32; 1 = â¥ : std::boxed::Box<test1::List<i32>>; } ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> @Box(â¥ : test1::List<i32>) ;
  Some (var@5) -> 0: i32 ;
  Some (var@6) -> test1::List::Nil ;
  Some (var@7) -> false ;
  Some (var@8) -> false ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}


- op:
move var@5

[[32mDebug[39m] expand_bottom_value_from_projection:
pe: (Expressions.Field ((Expressions.ProjTuple 2), 0))
ty: (Types.Adt (Types.Tuple, [],
   [(Types.Integer Types.I32);
     (Types.Adt ((Types.AdtId 1), [], [(Types.Integer Types.I32)]))]
   ))
[[32mDebug[39m] 
**About to evaluate statement**: [
  (var@0).1 := move var@6;
  var@9 := move alloc::alloc::box_free<test1::List<i32>>(move tl);
  return
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}

# Frame 1:
{
  Some (var@0) -> (0: i32, â¥ : test1::List<i32>) ;
  Some (l) -> test1::List::Cons { 0 = â¥ : i32; 1 = â¥ : std::boxed::Box<test1::List<i32>>; } ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> @Box(â¥ : test1::List<i32>) ;
  Some (var@5) -> â¥ : i32 ;
  Some (var@6) -> test1::List::Nil ;
  Some (var@7) -> false ;
  Some (var@8) -> false ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  (var@0).1 := move var@6
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}

# Frame 1:
{
  Some (var@0) -> (0: i32, â¥ : test1::List<i32>) ;
  Some (l) -> test1::List::Cons { 0 = â¥ : i32; 1 = â¥ : std::boxed::Box<test1::List<i32>>; } ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> @Box(â¥ : test1::List<i32>) ;
  Some (var@5) -> â¥ : i32 ;
  Some (var@6) -> test1::List::Nil ;
  Some (var@7) -> false ;
  Some (var@8) -> false ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}

# Frame 1:
{
  Some (var@0) -> (0: i32, â¥ : test1::List<i32>) ;
  Some (l) -> test1::List::Cons { 0 = â¥ : i32; 1 = â¥ : std::boxed::Box<test1::List<i32>>; } ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> @Box(â¥ : test1::List<i32>) ;
  Some (var@5) -> â¥ : i32 ;
  Some (var@6) -> test1::List::Nil ;
  Some (var@7) -> false ;
  Some (var@8) -> false ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}


- op:
move var@6

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@9 := move alloc::alloc::box_free<test1::List<i32>>(move tl);
  return
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}

# Frame 1:
{
  Some (var@0) -> (0: i32, test1::List::Nil) ;
  Some (l) -> test1::List::Cons { 0 = â¥ : i32; 1 = â¥ : std::boxed::Box<test1::List<i32>>; } ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> @Box(â¥ : test1::List<i32>) ;
  Some (var@5) -> â¥ : i32 ;
  Some (var@6) -> â¥ : test1::List<i32> ;
  Some (var@7) -> false ;
  Some (var@8) -> false ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@9 := move alloc::alloc::box_free<test1::List<i32>>(move tl)
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}

# Frame 1:
{
  Some (var@0) -> (0: i32, test1::List::Nil) ;
  Some (l) -> test1::List::Cons { 0 = â¥ : i32; 1 = â¥ : std::boxed::Box<test1::List<i32>>; } ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> @Box(â¥ : test1::List<i32>) ;
  Some (var@5) -> â¥ : i32 ;
  Some (var@6) -> â¥ : test1::List<i32> ;
  Some (var@7) -> false ;
  Some (var@8) -> false ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}



[[32mDebug[39m] eval_non_local_function_call:
- fid:CfimAst.BoxFree
- type_params: [test1::List<i32>]
- args: [move tl]
- dest: var@9
[[32mDebug[39m] drop_value: place: tl
[[32mDebug[39m] 
**About to evaluate statement**: [
  return
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}

# Frame 1:
{
  Some (var@0) -> (0: i32, test1::List::Nil) ;
  Some (l) -> test1::List::Cons { 0 = â¥ : i32; 1 = â¥ : std::boxed::Box<test1::List<i32>>; } ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@5) -> â¥ : i32 ;
  Some (var@6) -> â¥ : test1::List<i32> ;
  Some (var@7) -> false ;
  Some (var@8) -> false ;
  Some (var@9) -> () ;
  Some (var@10) -> â¥ : isize ;
}



[[32mDebug[39m] ctx_pop_frame:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}

# Frame 1:
{
  Some (var@0) -> (0: i32, test1::List::Nil) ;
  Some (l) -> test1::List::Cons { 0 = â¥ : i32; 1 = â¥ : std::boxed::Box<test1::List<i32>>; } ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@5) -> â¥ : i32 ;
  Some (var@6) -> â¥ : test1::List<i32> ;
  Some (var@7) -> false ;
  Some (var@8) -> false ;
  Some (var@9) -> () ;
  Some (var@10) -> â¥ : isize ;
}

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
}

# Frame 1:
{
  Some (var@0) -> (0: i32, test1::List::Nil) ;
  Some (l) -> test1::List::Cons { 0 = â¥ : i32; 1 = â¥ : std::boxed::Box<test1::List<i32>>; } ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@5) -> â¥ : i32 ;
  Some (var@6) -> â¥ : test1::List<i32> ;
  Some (var@7) -> false ;
  Some (var@8) -> false ;
  Some (var@9) -> () ;
  Some (var@10) -> â¥ : isize ;
}


- op:
move var@0

[[32mDebug[39m] 
**About to evaluate statement**: [
  hd := copy (var@6).0;
  tl := move (var@6).1;
  var@10 := copy hd;
  var@9 := move var@10 == 0: i32;
  var@8 := Â¬ move var@9;
  assert(Â¬move var@8);
  drop(tl);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> (0: i32, test1::List::Nil) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
  None -> â¥ : (i32, test1::List<i32>) ;
  None -> test1::List::Cons { 0 = â¥ : i32; 1 = â¥ : std::boxed::Box<test1::List<i32>>; } ;
  None -> â¥ : isize ;
  None -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : i32 ;
  None -> â¥ : test1::List<i32> ;
  None -> false ;
  None -> false ;
  None -> () ;
  None -> â¥ : isize ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  hd := copy (var@6).0
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> (0: i32, test1::List::Nil) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
  None -> â¥ : (i32, test1::List<i32>) ;
  None -> test1::List::Cons { 0 = â¥ : i32; 1 = â¥ : std::boxed::Box<test1::List<i32>>; } ;
  None -> â¥ : isize ;
  None -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : i32 ;
  None -> â¥ : test1::List<i32> ;
  None -> false ;
  None -> false ;
  None -> () ;
  None -> â¥ : isize ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> (0: i32, test1::List::Nil) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
  None -> â¥ : (i32, test1::List<i32>) ;
  None -> test1::List::Cons { 0 = â¥ : i32; 1 = â¥ : std::boxed::Box<test1::List<i32>>; } ;
  None -> â¥ : isize ;
  None -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : i32 ;
  None -> â¥ : test1::List<i32> ;
  None -> false ;
  None -> false ;
  None -> () ;
  None -> â¥ : isize ;
}


- op:
copy (var@6).0

[[32mDebug[39m] 
**About to evaluate statement**: [
  tl := move (var@6).1;
  var@10 := copy hd;
  var@9 := move var@10 == 0: i32;
  var@8 := Â¬ move var@9;
  assert(Â¬move var@8);
  drop(tl);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> 0: i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> (0: i32, test1::List::Nil) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
  None -> â¥ : (i32, test1::List<i32>) ;
  None -> test1::List::Cons { 0 = â¥ : i32; 1 = â¥ : std::boxed::Box<test1::List<i32>>; } ;
  None -> â¥ : isize ;
  None -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : i32 ;
  None -> â¥ : test1::List<i32> ;
  None -> false ;
  None -> false ;
  None -> () ;
  None -> â¥ : isize ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  tl := move (var@6).1
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> 0: i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> (0: i32, test1::List::Nil) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
  None -> â¥ : (i32, test1::List<i32>) ;
  None -> test1::List::Cons { 0 = â¥ : i32; 1 = â¥ : std::boxed::Box<test1::List<i32>>; } ;
  None -> â¥ : isize ;
  None -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : i32 ;
  None -> â¥ : test1::List<i32> ;
  None -> false ;
  None -> false ;
  None -> () ;
  None -> â¥ : isize ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> 0: i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> (0: i32, test1::List::Nil) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
  None -> â¥ : (i32, test1::List<i32>) ;
  None -> test1::List::Cons { 0 = â¥ : i32; 1 = â¥ : std::boxed::Box<test1::List<i32>>; } ;
  None -> â¥ : isize ;
  None -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : i32 ;
  None -> â¥ : test1::List<i32> ;
  None -> false ;
  None -> false ;
  None -> () ;
  None -> â¥ : isize ;
}


- op:
move (var@6).1

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@10 := copy hd;
  var@9 := move var@10 == 0: i32;
  var@8 := Â¬ move var@9;
  assert(Â¬move var@8);
  drop(tl);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> 0: i32 ;
  Some (tl) -> test1::List::Nil ;
  Some (var@6) -> (0: i32, â¥ : test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
  None -> â¥ : (i32, test1::List<i32>) ;
  None -> test1::List::Cons { 0 = â¥ : i32; 1 = â¥ : std::boxed::Box<test1::List<i32>>; } ;
  None -> â¥ : isize ;
  None -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : i32 ;
  None -> â¥ : test1::List<i32> ;
  None -> false ;
  None -> false ;
  None -> () ;
  None -> â¥ : isize ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@10 := copy hd
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> 0: i32 ;
  Some (tl) -> test1::List::Nil ;
  Some (var@6) -> (0: i32, â¥ : test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
  None -> â¥ : (i32, test1::List<i32>) ;
  None -> test1::List::Cons { 0 = â¥ : i32; 1 = â¥ : std::boxed::Box<test1::List<i32>>; } ;
  None -> â¥ : isize ;
  None -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : i32 ;
  None -> â¥ : test1::List<i32> ;
  None -> false ;
  None -> false ;
  None -> () ;
  None -> â¥ : isize ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> 0: i32 ;
  Some (tl) -> test1::List::Nil ;
  Some (var@6) -> (0: i32, â¥ : test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
  None -> â¥ : (i32, test1::List<i32>) ;
  None -> test1::List::Cons { 0 = â¥ : i32; 1 = â¥ : std::boxed::Box<test1::List<i32>>; } ;
  None -> â¥ : isize ;
  None -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : i32 ;
  None -> â¥ : test1::List<i32> ;
  None -> false ;
  None -> false ;
  None -> () ;
  None -> â¥ : isize ;
}


- op:
copy hd

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@9 := move var@10 == 0: i32;
  var@8 := Â¬ move var@9;
  assert(Â¬move var@8);
  drop(tl);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> 0: i32 ;
  Some (tl) -> test1::List::Nil ;
  Some (var@6) -> (0: i32, â¥ : test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> 0: i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
  None -> â¥ : (i32, test1::List<i32>) ;
  None -> test1::List::Cons { 0 = â¥ : i32; 1 = â¥ : std::boxed::Box<test1::List<i32>>; } ;
  None -> â¥ : isize ;
  None -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : i32 ;
  None -> â¥ : test1::List<i32> ;
  None -> false ;
  None -> false ;
  None -> () ;
  None -> â¥ : isize ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@9 := move var@10 == 0: i32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> 0: i32 ;
  Some (tl) -> test1::List::Nil ;
  Some (var@6) -> (0: i32, â¥ : test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> 0: i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
  None -> â¥ : (i32, test1::List<i32>) ;
  None -> test1::List::Cons { 0 = â¥ : i32; 1 = â¥ : std::boxed::Box<test1::List<i32>>; } ;
  None -> â¥ : isize ;
  None -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : i32 ;
  None -> â¥ : test1::List<i32> ;
  None -> false ;
  None -> false ;
  None -> () ;
  None -> â¥ : isize ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> 0: i32 ;
  Some (tl) -> test1::List::Nil ;
  Some (var@6) -> (0: i32, â¥ : test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> 0: i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
  None -> â¥ : (i32, test1::List<i32>) ;
  None -> test1::List::Cons { 0 = â¥ : i32; 1 = â¥ : std::boxed::Box<test1::List<i32>>; } ;
  None -> â¥ : isize ;
  None -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : i32 ;
  None -> â¥ : test1::List<i32> ;
  None -> false ;
  None -> false ;
  None -> () ;
  None -> â¥ : isize ;
}


- op:
move var@10

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> 0: i32 ;
  Some (tl) -> test1::List::Nil ;
  Some (var@6) -> (0: i32, â¥ : test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
  None -> â¥ : (i32, test1::List<i32>) ;
  None -> test1::List::Cons { 0 = â¥ : i32; 1 = â¥ : std::boxed::Box<test1::List<i32>>; } ;
  None -> â¥ : isize ;
  None -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : i32 ;
  None -> â¥ : test1::List<i32> ;
  None -> false ;
  None -> false ;
  None -> () ;
  None -> â¥ : isize ;
}


- op:
0: i32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := Â¬ move var@9;
  assert(Â¬move var@8);
  drop(tl);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> 0: i32 ;
  Some (tl) -> test1::List::Nil ;
  Some (var@6) -> (0: i32, â¥ : test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> true ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
  None -> â¥ : (i32, test1::List<i32>) ;
  None -> test1::List::Cons { 0 = â¥ : i32; 1 = â¥ : std::boxed::Box<test1::List<i32>>; } ;
  None -> â¥ : isize ;
  None -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : i32 ;
  None -> â¥ : test1::List<i32> ;
  None -> false ;
  None -> false ;
  None -> () ;
  None -> â¥ : isize ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := Â¬ move var@9
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> 0: i32 ;
  Some (tl) -> test1::List::Nil ;
  Some (var@6) -> (0: i32, â¥ : test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> true ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
  None -> â¥ : (i32, test1::List<i32>) ;
  None -> test1::List::Cons { 0 = â¥ : i32; 1 = â¥ : std::boxed::Box<test1::List<i32>>; } ;
  None -> â¥ : isize ;
  None -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : i32 ;
  None -> â¥ : test1::List<i32> ;
  None -> false ;
  None -> false ;
  None -> () ;
  None -> â¥ : isize ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> 0: i32 ;
  Some (tl) -> test1::List::Nil ;
  Some (var@6) -> (0: i32, â¥ : test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> true ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
  None -> â¥ : (i32, test1::List<i32>) ;
  None -> test1::List::Cons { 0 = â¥ : i32; 1 = â¥ : std::boxed::Box<test1::List<i32>>; } ;
  None -> â¥ : isize ;
  None -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : i32 ;
  None -> â¥ : test1::List<i32> ;
  None -> false ;
  None -> false ;
  None -> () ;
  None -> â¥ : isize ;
}


- op:
move var@9

[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@8);
  drop(tl);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> 0: i32 ;
  Some (tl) -> test1::List::Nil ;
  Some (var@6) -> (0: i32, â¥ : test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> false ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
  None -> â¥ : (i32, test1::List<i32>) ;
  None -> test1::List::Cons { 0 = â¥ : i32; 1 = â¥ : std::boxed::Box<test1::List<i32>>; } ;
  None -> â¥ : isize ;
  None -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : i32 ;
  None -> â¥ : test1::List<i32> ;
  None -> false ;
  None -> false ;
  None -> () ;
  None -> â¥ : isize ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@8)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> 0: i32 ;
  Some (tl) -> test1::List::Nil ;
  Some (var@6) -> (0: i32, â¥ : test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> false ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
  None -> â¥ : (i32, test1::List<i32>) ;
  None -> test1::List::Cons { 0 = â¥ : i32; 1 = â¥ : std::boxed::Box<test1::List<i32>>; } ;
  None -> â¥ : isize ;
  None -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : i32 ;
  None -> â¥ : test1::List<i32> ;
  None -> false ;
  None -> false ;
  None -> () ;
  None -> â¥ : isize ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> 0: i32 ;
  Some (tl) -> test1::List::Nil ;
  Some (var@6) -> (0: i32, â¥ : test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> false ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
  None -> â¥ : (i32, test1::List<i32>) ;
  None -> test1::List::Cons { 0 = â¥ : i32; 1 = â¥ : std::boxed::Box<test1::List<i32>>; } ;
  None -> â¥ : isize ;
  None -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : i32 ;
  None -> â¥ : test1::List<i32> ;
  None -> false ;
  None -> false ;
  None -> () ;
  None -> â¥ : isize ;
}


- op:
move var@8

[[32mDebug[39m] 
**About to evaluate statement**: [
  drop(tl);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> 0: i32 ;
  Some (tl) -> test1::List::Nil ;
  Some (var@6) -> (0: i32, â¥ : test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
  None -> â¥ : (i32, test1::List<i32>) ;
  None -> test1::List::Cons { 0 = â¥ : i32; 1 = â¥ : std::boxed::Box<test1::List<i32>>; } ;
  None -> â¥ : isize ;
  None -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : i32 ;
  None -> â¥ : test1::List<i32> ;
  None -> false ;
  None -> false ;
  None -> () ;
  None -> â¥ : isize ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  drop(tl)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> 0: i32 ;
  Some (tl) -> test1::List::Nil ;
  Some (var@6) -> (0: i32, â¥ : test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
  None -> â¥ : (i32, test1::List<i32>) ;
  None -> test1::List::Cons { 0 = â¥ : i32; 1 = â¥ : std::boxed::Box<test1::List<i32>>; } ;
  None -> â¥ : isize ;
  None -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : i32 ;
  None -> â¥ : test1::List<i32> ;
  None -> false ;
  None -> false ;
  None -> () ;
  None -> â¥ : isize ;
}



[[32mDebug[39m] drop_value: place: tl
[[32mDebug[39m] 
**About to evaluate statement**: [
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> 0: i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> (0: i32, â¥ : test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : test1::List<i32> ;
  None -> â¥ : (i32, test1::List<i32>) ;
  None -> test1::List::Cons { 0 = â¥ : i32; 1 = â¥ : std::boxed::Box<test1::List<i32>>; } ;
  None -> â¥ : isize ;
  None -> â¥ : i32 ;
  None -> â¥ : std::boxed::Box<test1::List<i32>> ;
  None -> â¥ : i32 ;
  None -> â¥ : test1::List<i32> ;
  None -> false ;
  None -> false ;
  None -> () ;
  None -> â¥ : isize ;
}



[[32mDebug[39m] test_unit_function: get_elem_test
[[32mDebug[39m] 
**About to evaluate statement**: [
  x := 0: i32;
  y := 0: i32;
  var@5 := &mut x;
  var@4 := &two-phase *(var@5);
  var@7 := &mut y;
  var@6 := &two-phase *(var@7);
  z := move get_elem<i32>(true, move var@4, move var@6);
  var@8 := copy *(z);
  *(z) := copy var@8 + 1: i32;
  var@12 := copy *(z);
  var@11 := move var@12 == 1: i32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  var@15 := copy x;
  var@14 := move var@15 == 1: i32;
  var@13 := Â¬ move var@14;
  assert(Â¬move var@13);
  var@18 := copy y;
  var@17 := move var@18 == 0: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : i32 ;
  Some (y) -> â¥ : i32 ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  x := 0: i32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : i32 ;
  Some (y) -> â¥ : i32 ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : i32 ;
  Some (y) -> â¥ : i32 ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}


- op:
0: i32

[[32mDebug[39m] 
**About to evaluate statement**: [
  y := 0: i32;
  var@5 := &mut x;
  var@4 := &two-phase *(var@5);
  var@7 := &mut y;
  var@6 := &two-phase *(var@7);
  z := move get_elem<i32>(true, move var@4, move var@6);
  var@8 := copy *(z);
  *(z) := copy var@8 + 1: i32;
  var@12 := copy *(z);
  var@11 := move var@12 == 1: i32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  var@15 := copy x;
  var@14 := move var@15 == 1: i32;
  var@13 := Â¬ move var@14;
  assert(Â¬move var@13);
  var@18 := copy y;
  var@17 := move var@18 == 0: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> â¥ : i32 ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  y := 0: i32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> â¥ : i32 ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> â¥ : i32 ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}


- op:
0: i32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := &mut x;
  var@4 := &two-phase *(var@5);
  var@7 := &mut y;
  var@6 := &two-phase *(var@7);
  z := move get_elem<i32>(true, move var@4, move var@6);
  var@8 := copy *(z);
  *(z) := copy var@8 + 1: i32;
  var@12 := copy *(z);
  var@11 := move var@12 == 1: i32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  var@15 := copy x;
  var@14 := move var@15 == 1: i32;
  var@13 := Â¬ move var@14;
  assert(Â¬move var@13);
  var@18 := copy y;
  var@17 := move var@18 == 0: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> 0: i32 ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := &mut x
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> 0: i32 ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := &two-phase *(var@5);
  var@7 := &mut y;
  var@6 := &two-phase *(var@7);
  z := move get_elem<i32>(true, move var@4, move var@6);
  var@8 := copy *(z);
  *(z) := copy var@8 + 1: i32;
  var@12 := copy *(z);
  var@11 := move var@12 == 1: i32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  var@15 := copy x;
  var@14 := move var@15 == 1: i32;
  var@13 := Â¬ move var@14;
  assert(Â¬move var@13);
  var@18 := copy y;
  var@17 := move var@18 == 0: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> 0: i32 ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (0: i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := &two-phase *(var@5)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> 0: i32 ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (0: i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := &mut y;
  var@6 := &two-phase *(var@7);
  z := move get_elem<i32>(true, move var@4, move var@6);
  var@8 := copy *(z);
  *(z) := copy var@8 + 1: i32;
  var@12 := copy *(z);
  var@11 := move var@12 == 1: i32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  var@15 := copy x;
  var@14 := move var@15 == 1: i32;
  var@13 := Â¬ move var@14;
  assert(Â¬move var@13);
  var@18 := copy y;
  var@17 := move var@18 == 0: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> 0: i32 ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> âinactivated_mut@1â ;
  Some (var@5) -> &mut@0 (@shared_loan({1}, 0: i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := &mut y
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> 0: i32 ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> âinactivated_mut@1â ;
  Some (var@5) -> &mut@0 (@shared_loan({1}, 0: i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@6 := &two-phase *(var@7);
  z := move get_elem<i32>(true, move var@4, move var@6);
  var@8 := copy *(z);
  *(z) := copy var@8 + 1: i32;
  var@12 := copy *(z);
  var@11 := move var@12 == 1: i32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  var@15 := copy x;
  var@14 := move var@15 == 1: i32;
  var@13 := Â¬ move var@14;
  assert(Â¬move var@13);
  var@18 := copy y;
  var@17 := move var@18 == 0: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> âinactivated_mut@1â ;
  Some (var@5) -> &mut@0 (@shared_loan({1}, 0: i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (0: i32) ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@6 := &two-phase *(var@7)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> âinactivated_mut@1â ;
  Some (var@5) -> &mut@0 (@shared_loan({1}, 0: i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (0: i32) ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  z := move get_elem<i32>(true, move var@4, move var@6);
  var@8 := copy *(z);
  *(z) := copy var@8 + 1: i32;
  var@12 := copy *(z);
  var@11 := move var@12 == 1: i32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  var@15 := copy x;
  var@14 := move var@15 == 1: i32;
  var@13 := Â¬ move var@14;
  assert(Â¬move var@13);
  var@18 := copy y;
  var@17 := move var@18 == 0: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> âinactivated_mut@1â ;
  Some (var@5) -> &mut@0 (@shared_loan({1}, 0: i32)) ;
  Some (var@6) -> âinactivated_mut@3â ;
  Some (var@7) -> &mut@2 (@shared_loan({3}, 0: i32)) ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  z := move get_elem<i32>(true, move var@4, move var@6)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> âinactivated_mut@1â ;
  Some (var@5) -> &mut@0 (@shared_loan({1}, 0: i32)) ;
  Some (var@6) -> âinactivated_mut@3â ;
  Some (var@7) -> &mut@2 (@shared_loan({3}, 0: i32)) ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] activate_inactivated_mut_borrow: resulting value:
0: i32
[[32mDebug[39m] activate_inactivated_mut_borrow: resulting value:
0: i32
[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> &mut@1 (0: i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> &mut@3 (0: i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}


- op:
true

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> &mut@1 (0: i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> &mut@3 (0: i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}


- op:
move var@4

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> &mut@3 (0: i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}


- op:
move var@6

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := copy b;
  if (move var@4) {
    var@0 := &mut *(x)
  }
  else {
    var@0 := move y
  };
  return
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : &'_ mut (i32) ;
  Some (b) -> true ;
  Some (x) -> &mut@1 (0: i32) ;
  Some (y) -> &mut@3 (0: i32) ;
  Some (var@4) -> â¥ : bool ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := copy b
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : &'_ mut (i32) ;
  Some (b) -> true ;
  Some (x) -> &mut@1 (0: i32) ;
  Some (y) -> &mut@3 (0: i32) ;
  Some (var@4) -> â¥ : bool ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : &'_ mut (i32) ;
  Some (b) -> true ;
  Some (x) -> &mut@1 (0: i32) ;
  Some (y) -> &mut@3 (0: i32) ;
  Some (var@4) -> â¥ : bool ;
}


- op:
copy b

[[32mDebug[39m] 
**About to evaluate statement**: [
  if (move var@4) {
    var@0 := &mut *(x)
  }
  else {
    var@0 := move y
  };
  return
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : &'_ mut (i32) ;
  Some (b) -> true ;
  Some (x) -> &mut@1 (0: i32) ;
  Some (y) -> &mut@3 (0: i32) ;
  Some (var@4) -> true ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  if (move var@4) {
    var@0 := &mut *(x)
  }
  else {
    var@0 := move y
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : &'_ mut (i32) ;
  Some (b) -> true ;
  Some (x) -> &mut@1 (0: i32) ;
  Some (y) -> &mut@3 (0: i32) ;
  Some (var@4) -> true ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : &'_ mut (i32) ;
  Some (b) -> true ;
  Some (x) -> &mut@1 (0: i32) ;
  Some (y) -> &mut@3 (0: i32) ;
  Some (var@4) -> true ;
}


- op:
move var@4

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@0 := &mut *(x)
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : &'_ mut (i32) ;
  Some (b) -> true ;
  Some (x) -> &mut@1 (0: i32) ;
  Some (y) -> &mut@3 (0: i32) ;
  Some (var@4) -> â¥ : bool ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  return
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}

# Frame 1:
{
  Some (var@0) -> &mut@4 (0: i32) ;
  Some (b) -> true ;
  Some (x) -> &mut@1 (âmut@4â) ;
  Some (y) -> &mut@3 (0: i32) ;
  Some (var@4) -> â¥ : bool ;
}



[[32mDebug[39m] ctx_pop_frame:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}

# Frame 1:
{
  Some (var@0) -> &mut@4 (0: i32) ;
  Some (b) -> true ;
  Some (x) -> &mut@1 (âmut@4â) ;
  Some (y) -> &mut@3 (0: i32) ;
  Some (var@4) -> â¥ : bool ;
}

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}

# Frame 1:
{
  Some (var@0) -> &mut@4 (0: i32) ;
  Some (b) -> true ;
  Some (x) -> &mut@1 (âmut@4â) ;
  Some (y) -> &mut@3 (0: i32) ;
  Some (var@4) -> â¥ : bool ;
}


- op:
move var@0

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := copy *(z);
  *(z) := copy var@8 + 1: i32;
  var@12 := copy *(z);
  var@11 := move var@12 == 1: i32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  var@15 := copy x;
  var@14 := move var@15 == 1: i32;
  var@13 := Â¬ move var@14;
  assert(Â¬move var@13);
  var@18 := copy y;
  var@17 := move var@18 == 0: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> &mut@4 (0: i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> true ;
  None -> &mut@1 (âmut@4â) ;
  None -> &mut@3 (0: i32) ;
  None -> â¥ : bool ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := copy *(z)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> &mut@4 (0: i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> true ;
  None -> &mut@1 (âmut@4â) ;
  None -> &mut@3 (0: i32) ;
  None -> â¥ : bool ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> &mut@4 (0: i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> true ;
  None -> &mut@1 (âmut@4â) ;
  None -> &mut@3 (0: i32) ;
  None -> â¥ : bool ;
}


- op:
copy *(z)

[[32mDebug[39m] 
**About to evaluate statement**: [
  *(z) := copy var@8 + 1: i32;
  var@12 := copy *(z);
  var@11 := move var@12 == 1: i32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  var@15 := copy x;
  var@14 := move var@15 == 1: i32;
  var@13 := Â¬ move var@14;
  assert(Â¬move var@13);
  var@18 := copy y;
  var@17 := move var@18 == 0: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> &mut@4 (0: i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> 0: i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> true ;
  None -> &mut@1 (âmut@4â) ;
  None -> &mut@3 (0: i32) ;
  None -> â¥ : bool ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  *(z) := copy var@8 + 1: i32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> &mut@4 (0: i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> 0: i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> true ;
  None -> &mut@1 (âmut@4â) ;
  None -> &mut@3 (0: i32) ;
  None -> â¥ : bool ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> &mut@4 (0: i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> 0: i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> true ;
  None -> &mut@1 (âmut@4â) ;
  None -> &mut@3 (0: i32) ;
  None -> â¥ : bool ;
}


- op:
copy var@8

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> &mut@4 (0: i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> 0: i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> true ;
  None -> &mut@1 (âmut@4â) ;
  None -> &mut@3 (0: i32) ;
  None -> â¥ : bool ;
}


- op:
1: i32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@12 := copy *(z);
  var@11 := move var@12 == 1: i32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  var@15 := copy x;
  var@14 := move var@15 == 1: i32;
  var@13 := Â¬ move var@14;
  assert(Â¬move var@13);
  var@18 := copy y;
  var@17 := move var@18 == 0: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> &mut@4 (1: i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> 0: i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> true ;
  None -> &mut@1 (âmut@4â) ;
  None -> &mut@3 (0: i32) ;
  None -> â¥ : bool ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@12 := copy *(z)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> &mut@4 (1: i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> 0: i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> true ;
  None -> &mut@1 (âmut@4â) ;
  None -> &mut@3 (0: i32) ;
  None -> â¥ : bool ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> &mut@4 (1: i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> 0: i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> true ;
  None -> &mut@1 (âmut@4â) ;
  None -> &mut@3 (0: i32) ;
  None -> â¥ : bool ;
}


- op:
copy *(z)

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@11 := move var@12 == 1: i32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  var@15 := copy x;
  var@14 := move var@15 == 1: i32;
  var@13 := Â¬ move var@14;
  assert(Â¬move var@13);
  var@18 := copy y;
  var@17 := move var@18 == 0: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> &mut@4 (1: i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> 0: i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> 1: i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> true ;
  None -> &mut@1 (âmut@4â) ;
  None -> &mut@3 (0: i32) ;
  None -> â¥ : bool ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@11 := move var@12 == 1: i32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> &mut@4 (1: i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> 0: i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> 1: i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> true ;
  None -> &mut@1 (âmut@4â) ;
  None -> &mut@3 (0: i32) ;
  None -> â¥ : bool ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> &mut@4 (1: i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> 0: i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> 1: i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> true ;
  None -> &mut@1 (âmut@4â) ;
  None -> &mut@3 (0: i32) ;
  None -> â¥ : bool ;
}


- op:
move var@12

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> &mut@4 (1: i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> 0: i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> true ;
  None -> &mut@1 (âmut@4â) ;
  None -> &mut@3 (0: i32) ;
  None -> â¥ : bool ;
}


- op:
1: i32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  var@15 := copy x;
  var@14 := move var@15 == 1: i32;
  var@13 := Â¬ move var@14;
  assert(Â¬move var@13);
  var@18 := copy y;
  var@17 := move var@18 == 0: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> &mut@4 (1: i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> 0: i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> true ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> true ;
  None -> &mut@1 (âmut@4â) ;
  None -> &mut@3 (0: i32) ;
  None -> â¥ : bool ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@10 := Â¬ move var@11
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> &mut@4 (1: i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> 0: i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> true ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> true ;
  None -> &mut@1 (âmut@4â) ;
  None -> &mut@3 (0: i32) ;
  None -> â¥ : bool ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> &mut@4 (1: i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> 0: i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> true ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> true ;
  None -> &mut@1 (âmut@4â) ;
  None -> &mut@3 (0: i32) ;
  None -> â¥ : bool ;
}


- op:
move var@11

[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@10);
  var@15 := copy x;
  var@14 := move var@15 == 1: i32;
  var@13 := Â¬ move var@14;
  assert(Â¬move var@13);
  var@18 := copy y;
  var@17 := move var@18 == 0: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> &mut@4 (1: i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> 0: i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> false ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> true ;
  None -> &mut@1 (âmut@4â) ;
  None -> &mut@3 (0: i32) ;
  None -> â¥ : bool ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@10)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> &mut@4 (1: i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> 0: i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> false ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> true ;
  None -> &mut@1 (âmut@4â) ;
  None -> &mut@3 (0: i32) ;
  None -> â¥ : bool ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> &mut@4 (1: i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> 0: i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> false ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> true ;
  None -> &mut@1 (âmut@4â) ;
  None -> &mut@3 (0: i32) ;
  None -> â¥ : bool ;
}


- op:
move var@10

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@15 := copy x;
  var@14 := move var@15 == 1: i32;
  var@13 := Â¬ move var@14;
  assert(Â¬move var@13);
  var@18 := copy y;
  var@17 := move var@18 == 0: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> &mut@4 (1: i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> 0: i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> true ;
  None -> &mut@1 (âmut@4â) ;
  None -> &mut@3 (0: i32) ;
  None -> â¥ : bool ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@15 := copy x
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> &mut@4 (1: i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> 0: i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> true ;
  None -> &mut@1 (âmut@4â) ;
  None -> &mut@3 (0: i32) ;
  None -> â¥ : bool ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> &mut@4 (1: i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> 0: i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> true ;
  None -> &mut@1 (âmut@4â) ;
  None -> &mut@3 (0: i32) ;
  None -> â¥ : bool ;
}


- op:
copy x

[[32mDebug[39m] end borrow: 0:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> &mut@4 (1: i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> 0: i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> true ;
  None -> &mut@1 (âmut@4â) ;
  None -> &mut@3 (0: i32) ;
  None -> â¥ : bool ;
}

[[32mDebug[39m] end borrow: 0: found outer borrows/abs:(InterpreterBorrowsCore.InnerLoans (InterpreterBorrowsCore.Borrow 1))
[[32mDebug[39m] end borrow: 1:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> &mut@4 (1: i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> 0: i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> true ;
  None -> &mut@1 (âmut@4â) ;
  None -> &mut@3 (0: i32) ;
  None -> â¥ : bool ;
}

[[32mDebug[39m] end borrow: 1: found outer borrows/abs:(InterpreterBorrowsCore.InnerLoans (InterpreterBorrowsCore.Borrow 4))
[[32mDebug[39m] end borrow: 4:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> &mut@4 (1: i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> 0: i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> true ;
  None -> &mut@1 (âmut@4â) ;
  None -> &mut@3 (0: i32) ;
  None -> â¥ : bool ;
}

[[32mDebug[39m] give_back:
- bid: 4
- content: &mut@4 (1: i32)
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> 0: i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> true ;
  None -> &mut@1 (âmut@4â) ;
  None -> &mut@3 (0: i32) ;
  None -> â¥ : bool ;
}


[[32mDebug[39m] give_back_value:
- bid: 4
- value: 1: i32
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> 0: i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> true ;
  None -> &mut@1 (âmut@4â) ;
  None -> &mut@3 (0: i32) ;
  None -> â¥ : bool ;
}


[[32mDebug[39m] end borrow: 1:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> 0: i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> true ;
  None -> &mut@1 (1: i32) ;
  None -> &mut@3 (0: i32) ;
  None -> â¥ : bool ;
}

[[32mDebug[39m] give_back:
- bid: 1
- content: &mut@1 (1: i32)
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> 0: i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> true ;
  None -> â¥ : &'_ mut (i32) ;
  None -> &mut@3 (0: i32) ;
  None -> â¥ : bool ;
}


[[32mDebug[39m] give_back_value:
- bid: 1
- value: 1: i32
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> 0: i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> true ;
  None -> â¥ : &'_ mut (i32) ;
  None -> &mut@3 (0: i32) ;
  None -> â¥ : bool ;
}


[[32mDebug[39m] end borrow: 0:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (1: i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> 0: i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> true ;
  None -> â¥ : &'_ mut (i32) ;
  None -> &mut@3 (0: i32) ;
  None -> â¥ : bool ;
}

[[32mDebug[39m] give_back:
- bid: 0
- content: &mut@0 (1: i32)
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> 0: i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> true ;
  None -> â¥ : &'_ mut (i32) ;
  None -> &mut@3 (0: i32) ;
  None -> â¥ : bool ;
}


[[32mDebug[39m] give_back_value:
- bid: 0
- value: 1: i32
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> 0: i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> true ;
  None -> â¥ : &'_ mut (i32) ;
  None -> &mut@3 (0: i32) ;
  None -> â¥ : bool ;
}


[[32mDebug[39m] 
**About to evaluate statement**: [
  var@14 := move var@15 == 1: i32;
  var@13 := Â¬ move var@14;
  assert(Â¬move var@13);
  var@18 := copy y;
  var@17 := move var@18 == 0: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (y) -> âmut@2â ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> 0: i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> 1: i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> true ;
  None -> â¥ : &'_ mut (i32) ;
  None -> &mut@3 (0: i32) ;
  None -> â¥ : bool ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@14 := move var@15 == 1: i32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (y) -> âmut@2â ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> 0: i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> 1: i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> true ;
  None -> â¥ : &'_ mut (i32) ;
  None -> &mut@3 (0: i32) ;
  None -> â¥ : bool ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (y) -> âmut@2â ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> 0: i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> 1: i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> true ;
  None -> â¥ : &'_ mut (i32) ;
  None -> &mut@3 (0: i32) ;
  None -> â¥ : bool ;
}


- op:
move var@15

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (y) -> âmut@2â ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> 0: i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> true ;
  None -> â¥ : &'_ mut (i32) ;
  None -> &mut@3 (0: i32) ;
  None -> â¥ : bool ;
}


- op:
1: i32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@13 := Â¬ move var@14;
  assert(Â¬move var@13);
  var@18 := copy y;
  var@17 := move var@18 == 0: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (y) -> âmut@2â ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> 0: i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> true ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> true ;
  None -> â¥ : &'_ mut (i32) ;
  None -> &mut@3 (0: i32) ;
  None -> â¥ : bool ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@13 := Â¬ move var@14
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (y) -> âmut@2â ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> 0: i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> true ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> true ;
  None -> â¥ : &'_ mut (i32) ;
  None -> &mut@3 (0: i32) ;
  None -> â¥ : bool ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (y) -> âmut@2â ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> 0: i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> true ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> true ;
  None -> â¥ : &'_ mut (i32) ;
  None -> &mut@3 (0: i32) ;
  None -> â¥ : bool ;
}


- op:
move var@14

[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@13);
  var@18 := copy y;
  var@17 := move var@18 == 0: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (y) -> âmut@2â ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> 0: i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> false ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> true ;
  None -> â¥ : &'_ mut (i32) ;
  None -> &mut@3 (0: i32) ;
  None -> â¥ : bool ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@13)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (y) -> âmut@2â ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> 0: i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> false ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> true ;
  None -> â¥ : &'_ mut (i32) ;
  None -> &mut@3 (0: i32) ;
  None -> â¥ : bool ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (y) -> âmut@2â ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> 0: i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> false ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> true ;
  None -> â¥ : &'_ mut (i32) ;
  None -> &mut@3 (0: i32) ;
  None -> â¥ : bool ;
}


- op:
move var@13

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@18 := copy y;
  var@17 := move var@18 == 0: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (y) -> âmut@2â ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> 0: i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> true ;
  None -> â¥ : &'_ mut (i32) ;
  None -> &mut@3 (0: i32) ;
  None -> â¥ : bool ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@18 := copy y
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (y) -> âmut@2â ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> 0: i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> true ;
  None -> â¥ : &'_ mut (i32) ;
  None -> &mut@3 (0: i32) ;
  None -> â¥ : bool ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (y) -> âmut@2â ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> 0: i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> true ;
  None -> â¥ : &'_ mut (i32) ;
  None -> &mut@3 (0: i32) ;
  None -> â¥ : bool ;
}


- op:
copy y

[[32mDebug[39m] end borrow: 2:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (y) -> âmut@2â ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> 0: i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> true ;
  None -> â¥ : &'_ mut (i32) ;
  None -> &mut@3 (0: i32) ;
  None -> â¥ : bool ;
}

[[32mDebug[39m] end borrow: 2: found outer borrows/abs:(InterpreterBorrowsCore.InnerLoans (InterpreterBorrowsCore.Borrow 3))
[[32mDebug[39m] end borrow: 3:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (y) -> âmut@2â ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> 0: i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> true ;
  None -> â¥ : &'_ mut (i32) ;
  None -> &mut@3 (0: i32) ;
  None -> â¥ : bool ;
}

[[32mDebug[39m] give_back:
- bid: 3
- content: &mut@3 (0: i32)
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (y) -> âmut@2â ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> 0: i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> true ;
  None -> â¥ : &'_ mut (i32) ;
  None -> â¥ : &'_ mut (i32) ;
  None -> â¥ : bool ;
}


[[32mDebug[39m] give_back_value:
- bid: 3
- value: 0: i32
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (y) -> âmut@2â ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> 0: i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> true ;
  None -> â¥ : &'_ mut (i32) ;
  None -> â¥ : &'_ mut (i32) ;
  None -> â¥ : bool ;
}


[[32mDebug[39m] end borrow: 2:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (y) -> âmut@2â ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (0: i32) ;
  Some (var@8) -> 0: i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> true ;
  None -> â¥ : &'_ mut (i32) ;
  None -> â¥ : &'_ mut (i32) ;
  None -> â¥ : bool ;
}

[[32mDebug[39m] give_back:
- bid: 2
- content: &mut@2 (0: i32)
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (y) -> âmut@2â ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> 0: i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> true ;
  None -> â¥ : &'_ mut (i32) ;
  None -> â¥ : &'_ mut (i32) ;
  None -> â¥ : bool ;
}


[[32mDebug[39m] give_back_value:
- bid: 2
- value: 0: i32
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (y) -> âmut@2â ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> 0: i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> true ;
  None -> â¥ : &'_ mut (i32) ;
  None -> â¥ : &'_ mut (i32) ;
  None -> â¥ : bool ;
}


[[32mDebug[39m] 
**About to evaluate statement**: [
  var@17 := move var@18 == 0: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (y) -> 0: i32 ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> 0: i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> 0: i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> true ;
  None -> â¥ : &'_ mut (i32) ;
  None -> â¥ : &'_ mut (i32) ;
  None -> â¥ : bool ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@17 := move var@18 == 0: i32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (y) -> 0: i32 ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> 0: i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> 0: i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> true ;
  None -> â¥ : &'_ mut (i32) ;
  None -> â¥ : &'_ mut (i32) ;
  None -> â¥ : bool ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (y) -> 0: i32 ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> 0: i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> 0: i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> true ;
  None -> â¥ : &'_ mut (i32) ;
  None -> â¥ : &'_ mut (i32) ;
  None -> â¥ : bool ;
}


- op:
move var@18

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (y) -> 0: i32 ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> 0: i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> true ;
  None -> â¥ : &'_ mut (i32) ;
  None -> â¥ : &'_ mut (i32) ;
  None -> â¥ : bool ;
}


- op:
0: i32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (y) -> 0: i32 ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> 0: i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> true ;
  Some (var@18) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> true ;
  None -> â¥ : &'_ mut (i32) ;
  None -> â¥ : &'_ mut (i32) ;
  None -> â¥ : bool ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@16 := Â¬ move var@17
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (y) -> 0: i32 ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> 0: i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> true ;
  Some (var@18) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> true ;
  None -> â¥ : &'_ mut (i32) ;
  None -> â¥ : &'_ mut (i32) ;
  None -> â¥ : bool ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (y) -> 0: i32 ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> 0: i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> true ;
  Some (var@18) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> true ;
  None -> â¥ : &'_ mut (i32) ;
  None -> â¥ : &'_ mut (i32) ;
  None -> â¥ : bool ;
}


- op:
move var@17

[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (y) -> 0: i32 ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> 0: i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> false ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> true ;
  None -> â¥ : &'_ mut (i32) ;
  None -> â¥ : &'_ mut (i32) ;
  None -> â¥ : bool ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@16)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (y) -> 0: i32 ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> 0: i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> false ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> true ;
  None -> â¥ : &'_ mut (i32) ;
  None -> â¥ : &'_ mut (i32) ;
  None -> â¥ : bool ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (y) -> 0: i32 ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> 0: i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> false ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> true ;
  None -> â¥ : &'_ mut (i32) ;
  None -> â¥ : &'_ mut (i32) ;
  None -> â¥ : bool ;
}


- op:
move var@16

[[32mDebug[39m] 
**About to evaluate statement**: [
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (y) -> 0: i32 ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> 0: i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (i32) ;
  None -> true ;
  None -> â¥ : &'_ mut (i32) ;
  None -> â¥ : &'_ mut (i32) ;
  None -> â¥ : bool ;
}



[[32mDebug[39m] test_unit_function: id_mut_pair_test1
[[32mDebug[39m] 
**About to evaluate statement**: [
  x := 0: u32;
  px := &mut x;
  var@4 := move px;
  (p).0 := move var@4;
  (p).1 := 1: u32;
  pp0 := &mut p;
  var@7 := &two-phase *(pp0);
  pp1 := move id_mut_pair<u32>(move var@7);
  y := 2: u32;
  var@10 := &mut y;
  var@9 := &mut *(var@10);
  *((pp1).0) := move var@9;
  *((pp1).1) := 3: u32;
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> â¥ : (&'_ mut (u32), u32) ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (pp1) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> â¥ : u32 ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> â¥ : &'_ mut (u32) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  x := 0: u32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> â¥ : (&'_ mut (u32), u32) ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (pp1) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> â¥ : u32 ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> â¥ : &'_ mut (u32) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> â¥ : (&'_ mut (u32), u32) ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (pp1) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> â¥ : u32 ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> â¥ : &'_ mut (u32) ;
}


- op:
0: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  px := &mut x;
  var@4 := move px;
  (p).0 := move var@4;
  (p).1 := 1: u32;
  pp0 := &mut p;
  var@7 := &two-phase *(pp0);
  pp1 := move id_mut_pair<u32>(move var@7);
  y := 2: u32;
  var@10 := &mut y;
  var@9 := &mut *(var@10);
  *((pp1).0) := move var@9;
  *((pp1).1) := 3: u32;
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: u32 ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> â¥ : (&'_ mut (u32), u32) ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (pp1) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> â¥ : u32 ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> â¥ : &'_ mut (u32) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  px := &mut x
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: u32 ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> â¥ : (&'_ mut (u32), u32) ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (pp1) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> â¥ : u32 ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> â¥ : &'_ mut (u32) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := move px;
  (p).0 := move var@4;
  (p).1 := 1: u32;
  pp0 := &mut p;
  var@7 := &two-phase *(pp0);
  pp1 := move id_mut_pair<u32>(move var@7);
  y := 2: u32;
  var@10 := &mut y;
  var@9 := &mut *(var@10);
  *((pp1).0) := move var@9;
  *((pp1).1) := 3: u32;
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@0 (0: u32) ;
  Some (p) -> â¥ : (&'_ mut (u32), u32) ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (pp1) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> â¥ : u32 ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> â¥ : &'_ mut (u32) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := move px
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@0 (0: u32) ;
  Some (p) -> â¥ : (&'_ mut (u32), u32) ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (pp1) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> â¥ : u32 ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> â¥ : &'_ mut (u32) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@0 (0: u32) ;
  Some (p) -> â¥ : (&'_ mut (u32), u32) ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (pp1) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> â¥ : u32 ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> â¥ : &'_ mut (u32) ;
}


- op:
move px

[[32mDebug[39m] 
**About to evaluate statement**: [
  (p).0 := move var@4;
  (p).1 := 1: u32;
  pp0 := &mut p;
  var@7 := &two-phase *(pp0);
  pp1 := move id_mut_pair<u32>(move var@7);
  y := 2: u32;
  var@10 := &mut y;
  var@9 := &mut *(var@10);
  *((pp1).0) := move var@9;
  *((pp1).1) := 3: u32;
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> â¥ : (&'_ mut (u32), u32) ;
  Some (var@4) -> &mut@0 (0: u32) ;
  Some (pp0) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (pp1) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> â¥ : u32 ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> â¥ : &'_ mut (u32) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  (p).0 := move var@4
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> â¥ : (&'_ mut (u32), u32) ;
  Some (var@4) -> &mut@0 (0: u32) ;
  Some (pp0) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (pp1) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> â¥ : u32 ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> â¥ : &'_ mut (u32) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> â¥ : (&'_ mut (u32), u32) ;
  Some (var@4) -> &mut@0 (0: u32) ;
  Some (pp0) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (pp1) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> â¥ : u32 ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> â¥ : &'_ mut (u32) ;
}


- op:
move var@4

[[32mDebug[39m] expand_bottom_value_from_projection:
pe: (Expressions.Field ((Expressions.ProjTuple 2), 0))
ty: (Types.Adt (Types.Tuple, [],
   [(Types.Ref (Types.Erased, (Types.Integer Types.U32), Types.Mut));
     (Types.Integer Types.U32)]
   ))
[[32mDebug[39m] 
**About to evaluate statement**: [
  (p).1 := 1: u32;
  pp0 := &mut p;
  var@7 := &two-phase *(pp0);
  pp1 := move id_mut_pair<u32>(move var@7);
  y := 2: u32;
  var@10 := &mut y;
  var@9 := &mut *(var@10);
  *((pp1).0) := move var@9;
  *((pp1).1) := 3: u32;
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> (&mut@0 (0: u32), â¥ : u32) ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (pp1) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> â¥ : u32 ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> â¥ : &'_ mut (u32) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  (p).1 := 1: u32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> (&mut@0 (0: u32), â¥ : u32) ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (pp1) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> â¥ : u32 ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> â¥ : &'_ mut (u32) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> (&mut@0 (0: u32), â¥ : u32) ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (pp1) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> â¥ : u32 ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> â¥ : &'_ mut (u32) ;
}


- op:
1: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  pp0 := &mut p;
  var@7 := &two-phase *(pp0);
  pp1 := move id_mut_pair<u32>(move var@7);
  y := 2: u32;
  var@10 := &mut y;
  var@9 := &mut *(var@10);
  *((pp1).0) := move var@9;
  *((pp1).1) := 3: u32;
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> (&mut@0 (0: u32), 1: u32) ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (pp1) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> â¥ : u32 ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> â¥ : &'_ mut (u32) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  pp0 := &mut p
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> (&mut@0 (0: u32), 1: u32) ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (pp1) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> â¥ : u32 ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> â¥ : &'_ mut (u32) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := &two-phase *(pp0);
  pp1 := move id_mut_pair<u32>(move var@7);
  y := 2: u32;
  var@10 := &mut y;
  var@9 := &mut *(var@10);
  *((pp1).0) := move var@9;
  *((pp1).1) := 3: u32;
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> âmut@1â ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> &mut@1 ((&mut@0 (0: u32), 1: u32)) ;
  Some (pp1) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> â¥ : u32 ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> â¥ : &'_ mut (u32) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := &two-phase *(pp0)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> âmut@1â ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> &mut@1 ((&mut@0 (0: u32), 1: u32)) ;
  Some (pp1) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> â¥ : u32 ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> â¥ : &'_ mut (u32) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  pp1 := move id_mut_pair<u32>(move var@7);
  y := 2: u32;
  var@10 := &mut y;
  var@9 := &mut *(var@10);
  *((pp1).0) := move var@9;
  *((pp1).1) := 3: u32;
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> âmut@1â ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> &mut@1 (@shared_loan({2}, (&mut@0 (0: u32), 1: u32))) ;
  Some (pp1) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (var@7) -> âinactivated_mut@2â ;
  Some (y) -> â¥ : u32 ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> â¥ : &'_ mut (u32) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  pp1 := move id_mut_pair<u32>(move var@7)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> âmut@1â ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> &mut@1 (@shared_loan({2}, (&mut@0 (0: u32), 1: u32))) ;
  Some (pp1) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (var@7) -> âinactivated_mut@2â ;
  Some (y) -> â¥ : u32 ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> â¥ : &'_ mut (u32) ;
}



[[32mDebug[39m] activate_inactivated_mut_borrow: resulting value:
(&mut@0 (0: u32), 1: u32)
[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> âmut@1â ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> &mut@1 (âmut@2â) ;
  Some (pp1) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (var@7) -> &mut@2 ((&mut@0 (0: u32), 1: u32)) ;
  Some (y) -> â¥ : u32 ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> â¥ : &'_ mut (u32) ;
}


- op:
move var@7

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@2 := &mut *(x);
  var@0 := &mut *(var@2);
  return
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> âmut@1â ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> &mut@1 (âmut@2â) ;
  Some (pp1) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> â¥ : u32 ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> â¥ : &'_ mut (u32) ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (x) -> &mut@2 ((&mut@0 (0: u32), 1: u32)) ;
  Some (var@2) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@2 := &mut *(x)
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> âmut@1â ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> &mut@1 (âmut@2â) ;
  Some (pp1) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> â¥ : u32 ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> â¥ : &'_ mut (u32) ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (x) -> &mut@2 ((&mut@0 (0: u32), 1: u32)) ;
  Some (var@2) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@0 := &mut *(var@2);
  return
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> âmut@1â ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> &mut@1 (âmut@2â) ;
  Some (pp1) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> â¥ : u32 ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> â¥ : &'_ mut (u32) ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (x) -> &mut@2 (âmut@3â) ;
  Some (var@2) -> &mut@3 ((&mut@0 (0: u32), 1: u32)) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@0 := &mut *(var@2)
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> âmut@1â ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> &mut@1 (âmut@2â) ;
  Some (pp1) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> â¥ : u32 ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> â¥ : &'_ mut (u32) ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (x) -> &mut@2 (âmut@3â) ;
  Some (var@2) -> &mut@3 ((&mut@0 (0: u32), 1: u32)) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  return
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> âmut@1â ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> &mut@1 (âmut@2â) ;
  Some (pp1) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> â¥ : u32 ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> â¥ : &'_ mut (u32) ;
}

# Frame 1:
{
  Some (var@0) -> &mut@4 ((&mut@0 (0: u32), 1: u32)) ;
  Some (x) -> &mut@2 (âmut@3â) ;
  Some (var@2) -> &mut@3 (âmut@4â) ;
}



[[32mDebug[39m] ctx_pop_frame:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> âmut@1â ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> &mut@1 (âmut@2â) ;
  Some (pp1) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> â¥ : u32 ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> â¥ : &'_ mut (u32) ;
}

# Frame 1:
{
  Some (var@0) -> &mut@4 ((&mut@0 (0: u32), 1: u32)) ;
  Some (x) -> &mut@2 (âmut@3â) ;
  Some (var@2) -> &mut@3 (âmut@4â) ;
}

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> âmut@1â ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> &mut@1 (âmut@2â) ;
  Some (pp1) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> â¥ : u32 ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> â¥ : &'_ mut (u32) ;
}

# Frame 1:
{
  Some (var@0) -> &mut@4 ((&mut@0 (0: u32), 1: u32)) ;
  Some (x) -> &mut@2 (âmut@3â) ;
  Some (var@2) -> &mut@3 (âmut@4â) ;
}


- op:
move var@0

[[32mDebug[39m] 
**About to evaluate statement**: [
  y := 2: u32;
  var@10 := &mut y;
  var@9 := &mut *(var@10);
  *((pp1).0) := move var@9;
  *((pp1).1) := 3: u32;
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> âmut@1â ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> &mut@1 (âmut@2â) ;
  Some (pp1) -> &mut@4 ((&mut@0 (0: u32), 1: u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> â¥ : u32 ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> â¥ : &'_ mut (u32) ;
  None -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  y := 2: u32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> âmut@1â ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> &mut@1 (âmut@2â) ;
  Some (pp1) -> &mut@4 ((&mut@0 (0: u32), 1: u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> â¥ : u32 ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> â¥ : &'_ mut (u32) ;
  None -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> âmut@1â ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> &mut@1 (âmut@2â) ;
  Some (pp1) -> &mut@4 ((&mut@0 (0: u32), 1: u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> â¥ : u32 ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> â¥ : &'_ mut (u32) ;
  None -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
}


- op:
2: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@10 := &mut y;
  var@9 := &mut *(var@10);
  *((pp1).0) := move var@9;
  *((pp1).1) := 3: u32;
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> âmut@1â ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> &mut@1 (âmut@2â) ;
  Some (pp1) -> &mut@4 ((&mut@0 (0: u32), 1: u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> 2: u32 ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> â¥ : &'_ mut (u32) ;
  None -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@10 := &mut y
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> âmut@1â ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> &mut@1 (âmut@2â) ;
  Some (pp1) -> &mut@4 ((&mut@0 (0: u32), 1: u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> 2: u32 ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> â¥ : &'_ mut (u32) ;
  None -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@9 := &mut *(var@10);
  *((pp1).0) := move var@9;
  *((pp1).1) := 3: u32;
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> âmut@1â ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> &mut@1 (âmut@2â) ;
  Some (pp1) -> &mut@4 ((&mut@0 (0: u32), 1: u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> âmut@5â ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> &mut@5 (2: u32) ;
  None -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@9 := &mut *(var@10)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> âmut@1â ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> &mut@1 (âmut@2â) ;
  Some (pp1) -> &mut@4 ((&mut@0 (0: u32), 1: u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> âmut@5â ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> &mut@5 (2: u32) ;
  None -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  *((pp1).0) := move var@9;
  *((pp1).1) := 3: u32;
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> âmut@1â ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> &mut@1 (âmut@2â) ;
  Some (pp1) -> &mut@4 ((&mut@0 (0: u32), 1: u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> âmut@5â ;
  Some (var@9) -> &mut@6 (2: u32) ;
  Some (var@10) -> &mut@5 (âmut@6â) ;
  None -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  *((pp1).0) := move var@9
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> âmut@1â ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> &mut@1 (âmut@2â) ;
  Some (pp1) -> &mut@4 ((&mut@0 (0: u32), 1: u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> âmut@5â ;
  Some (var@9) -> &mut@6 (2: u32) ;
  Some (var@10) -> &mut@5 (âmut@6â) ;
  None -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> âmut@1â ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> &mut@1 (âmut@2â) ;
  Some (pp1) -> &mut@4 ((&mut@0 (0: u32), 1: u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> âmut@5â ;
  Some (var@9) -> &mut@6 (2: u32) ;
  Some (var@10) -> &mut@5 (âmut@6â) ;
  None -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
}


- op:
move var@9

[[32mDebug[39m] end borrow: 0:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> âmut@1â ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> &mut@1 (âmut@2â) ;
  Some (pp1) -> &mut@4 ((â¥ : &'_ mut (u32), 1: u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> âmut@5â ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> &mut@5 (âmut@6â) ;
  None -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
  None -> &mut@6 (2: u32) ;
  None -> &mut@0 (0: u32) ;
}

[[32mDebug[39m] give_back:
- bid: 0
- content: &mut@0 (0: u32)
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> âmut@1â ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> &mut@1 (âmut@2â) ;
  Some (pp1) -> &mut@4 ((â¥ : &'_ mut (u32), 1: u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> âmut@5â ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> &mut@5 (âmut@6â) ;
  None -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
  None -> &mut@6 (2: u32) ;
  None -> â¥ : &'_ mut (u32) ;
}


[[32mDebug[39m] give_back_value:
- bid: 0
- value: 0: u32
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> âmut@1â ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> &mut@1 (âmut@2â) ;
  Some (pp1) -> &mut@4 ((â¥ : &'_ mut (u32), 1: u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> âmut@5â ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> &mut@5 (âmut@6â) ;
  None -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
  None -> &mut@6 (2: u32) ;
  None -> â¥ : &'_ mut (u32) ;
}


[[32mDebug[39m] 
**About to evaluate statement**: [
  *((pp1).1) := 3: u32;
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: u32 ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> âmut@1â ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> &mut@1 (âmut@2â) ;
  Some (pp1) -> &mut@4 ((&mut@6 (2: u32), 1: u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> âmut@5â ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> &mut@5 (âmut@6â) ;
  None -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  *((pp1).1) := 3: u32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: u32 ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> âmut@1â ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> &mut@1 (âmut@2â) ;
  Some (pp1) -> &mut@4 ((&mut@6 (2: u32), 1: u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> âmut@5â ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> &mut@5 (âmut@6â) ;
  None -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: u32 ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> âmut@1â ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> &mut@1 (âmut@2â) ;
  Some (pp1) -> &mut@4 ((&mut@6 (2: u32), 1: u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> âmut@5â ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> &mut@5 (âmut@6â) ;
  None -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
}


- op:
3: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: u32 ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> âmut@1â ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> &mut@1 (âmut@2â) ;
  Some (pp1) -> &mut@4 ((&mut@6 (2: u32), 3: u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> âmut@5â ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> &mut@5 (âmut@6â) ;
  None -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
}



[[32mDebug[39m] test_unit_function: test_char
[[32mDebug[39m] 
**About to evaluate statement**: [
  var@0 := a;
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : char ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@0 := a
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : char ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : char ;
}


- op:
a

[[32mDebug[39m] 
**About to evaluate statement**: [
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> a ;
}



[[32mDebug[39m] test_unit_function: test_loops
[[32mDebug[39m] 
**About to evaluate statement**: [
  x := move test_loop1(2: u32);
  var@4 := copy x;
  var@3 := move var@4 == 2: u32;
  var@2 := Â¬ move var@3;
  assert(Â¬move var@2);
  x := move test_loop2(2: u32);
  var@8 := copy x;
  var@7 := move var@8 == 1: u32;
  var@6 := Â¬ move var@7;
  assert(Â¬move var@6);
  x := move test_loop3(2: u32);
  var@12 := copy x;
  var@11 := move var@12 == 3: u32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  x := move test_loop4(20: u32);
  var@16 := copy x;
  var@15 := move var@16 == 1: u32;
  var@14 := Â¬ move var@15;
  assert(Â¬move var@14);
  x := move test_loop5(2: u32);
  var@20 := copy x;
  var@19 := move var@20 == 2: u32;
  var@18 := Â¬ move var@19;
  assert(Â¬move var@18);
  x := move test_loop6(2: u32);
  var@24 := copy x;
  var@23 := move var@24 == 2: u32;
  var@22 := Â¬ move var@23;
  assert(Â¬move var@22);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  x := move test_loop1(2: u32)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}


- op:
2: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  i := 0: u32;
  s := 0: u32;
  loop {
    var@4 := copy i;
    var@5 := copy max;
    var@3 := move var@4 < move var@5;
    if (move var@3) {
      var@6 := copy i;
      s := copy s + copy var@6;
      i := copy i + 1: u32;
      continue 0
    }
    else {
      break 0
    }
  };
  s := copy s * 2: u32;
  return
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (s) -> â¥ : u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> â¥ : u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : (u32, bool) ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  i := 0: u32
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (s) -> â¥ : u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> â¥ : u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : (u32, bool) ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (s) -> â¥ : u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> â¥ : u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : (u32, bool) ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}


- op:
0: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  s := 0: u32;
  loop {
    var@4 := copy i;
    var@5 := copy max;
    var@3 := move var@4 < move var@5;
    if (move var@3) {
      var@6 := copy i;
      s := copy s + copy var@6;
      i := copy i + 1: u32;
      continue 0
    }
    else {
      break 0
    }
  };
  s := copy s * 2: u32;
  return
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (s) -> â¥ : u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : (u32, bool) ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  s := 0: u32
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (s) -> â¥ : u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : (u32, bool) ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (s) -> â¥ : u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : (u32, bool) ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}


- op:
0: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  loop {
    var@4 := copy i;
    var@5 := copy max;
    var@3 := move var@4 < move var@5;
    if (move var@3) {
      var@6 := copy i;
      s := copy s + copy var@6;
      i := copy i + 1: u32;
      continue 0
    }
    else {
      break 0
    }
  };
  s := copy s * 2: u32;
  return
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : (u32, bool) ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  loop {
    var@4 := copy i;
    var@5 := copy max;
    var@3 := move var@4 < move var@5;
    if (move var@3) {
      var@6 := copy i;
      s := copy s + copy var@6;
      i := copy i + 1: u32;
      continue 0
    }
    else {
      break 0
    }
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : (u32, bool) ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := copy i;
  var@5 := copy max;
  var@3 := move var@4 < move var@5;
  if (move var@3) {
    var@6 := copy i;
    s := copy s + copy var@6;
    i := copy i + 1: u32;
    continue 0
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : (u32, bool) ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := copy i
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : (u32, bool) ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : (u32, bool) ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}


- op:
copy i

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := copy max;
  var@3 := move var@4 < move var@5;
  if (move var@3) {
    var@6 := copy i;
    s := copy s + copy var@6;
    i := copy i + 1: u32;
    continue 0
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> 0: u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : (u32, bool) ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := copy max
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> 0: u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : (u32, bool) ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> 0: u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : (u32, bool) ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}


- op:
copy max

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@3 := move var@4 < move var@5;
  if (move var@3) {
    var@6 := copy i;
    s := copy s + copy var@6;
    i := copy i + 1: u32;
    continue 0
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> 0: u32 ;
  Some (var@5) -> 2: u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : (u32, bool) ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@3 := move var@4 < move var@5
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> 0: u32 ;
  Some (var@5) -> 2: u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : (u32, bool) ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> 0: u32 ;
  Some (var@5) -> 2: u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : (u32, bool) ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}


- op:
move var@4

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> 2: u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : (u32, bool) ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}


- op:
move var@5

[[32mDebug[39m] 
**About to evaluate statement**: [
  if (move var@3) {
    var@6 := copy i;
    s := copy s + copy var@6;
    i := copy i + 1: u32;
    continue 0
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> true ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : (u32, bool) ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> true ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : (u32, bool) ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}


- op:
move var@3

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@6 := copy i;
  s := copy s + copy var@6;
  i := copy i + 1: u32;
  continue 0
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : (u32, bool) ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@6 := copy i
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : (u32, bool) ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : (u32, bool) ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}


- op:
copy i

[[32mDebug[39m] 
**About to evaluate statement**: [
  s := copy s + copy var@6;
  i := copy i + 1: u32;
  continue 0
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> 0: u32 ;
  Some (var@7) -> â¥ : (u32, bool) ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  s := copy s + copy var@6
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> 0: u32 ;
  Some (var@7) -> â¥ : (u32, bool) ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> 0: u32 ;
  Some (var@7) -> â¥ : (u32, bool) ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}


- op:
copy s

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> 0: u32 ;
  Some (var@7) -> â¥ : (u32, bool) ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}


- op:
copy var@6

[[32mDebug[39m] 
**About to evaluate statement**: [
  i := copy i + 1: u32;
  continue 0
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> 0: u32 ;
  Some (var@7) -> â¥ : (u32, bool) ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  i := copy i + 1: u32
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> 0: u32 ;
  Some (var@7) -> â¥ : (u32, bool) ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> 0: u32 ;
  Some (var@7) -> â¥ : (u32, bool) ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}


- op:
copy i

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> 0: u32 ;
  Some (var@7) -> â¥ : (u32, bool) ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}


- op:
1: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  continue 0
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> 0: u32 ;
  Some (var@7) -> â¥ : (u32, bool) ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := copy i;
  var@5 := copy max;
  var@3 := move var@4 < move var@5;
  if (move var@3) {
    var@6 := copy i;
    s := copy s + copy var@6;
    i := copy i + 1: u32;
    continue 0
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> 0: u32 ;
  Some (var@7) -> â¥ : (u32, bool) ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := copy i
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> 0: u32 ;
  Some (var@7) -> â¥ : (u32, bool) ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> 0: u32 ;
  Some (var@7) -> â¥ : (u32, bool) ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}


- op:
copy i

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := copy max;
  var@3 := move var@4 < move var@5;
  if (move var@3) {
    var@6 := copy i;
    s := copy s + copy var@6;
    i := copy i + 1: u32;
    continue 0
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> 1: u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> 0: u32 ;
  Some (var@7) -> â¥ : (u32, bool) ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := copy max
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> 1: u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> 0: u32 ;
  Some (var@7) -> â¥ : (u32, bool) ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> 1: u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> 0: u32 ;
  Some (var@7) -> â¥ : (u32, bool) ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}


- op:
copy max

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@3 := move var@4 < move var@5;
  if (move var@3) {
    var@6 := copy i;
    s := copy s + copy var@6;
    i := copy i + 1: u32;
    continue 0
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> 1: u32 ;
  Some (var@5) -> 2: u32 ;
  Some (var@6) -> 0: u32 ;
  Some (var@7) -> â¥ : (u32, bool) ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@3 := move var@4 < move var@5
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> 1: u32 ;
  Some (var@5) -> 2: u32 ;
  Some (var@6) -> 0: u32 ;
  Some (var@7) -> â¥ : (u32, bool) ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> 1: u32 ;
  Some (var@5) -> 2: u32 ;
  Some (var@6) -> 0: u32 ;
  Some (var@7) -> â¥ : (u32, bool) ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}


- op:
move var@4

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> 2: u32 ;
  Some (var@6) -> 0: u32 ;
  Some (var@7) -> â¥ : (u32, bool) ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}


- op:
move var@5

[[32mDebug[39m] 
**About to evaluate statement**: [
  if (move var@3) {
    var@6 := copy i;
    s := copy s + copy var@6;
    i := copy i + 1: u32;
    continue 0
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> true ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> 0: u32 ;
  Some (var@7) -> â¥ : (u32, bool) ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> true ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> 0: u32 ;
  Some (var@7) -> â¥ : (u32, bool) ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}


- op:
move var@3

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@6 := copy i;
  s := copy s + copy var@6;
  i := copy i + 1: u32;
  continue 0
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> 0: u32 ;
  Some (var@7) -> â¥ : (u32, bool) ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@6 := copy i
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> 0: u32 ;
  Some (var@7) -> â¥ : (u32, bool) ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> 0: u32 ;
  Some (var@7) -> â¥ : (u32, bool) ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}


- op:
copy i

[[32mDebug[39m] 
**About to evaluate statement**: [
  s := copy s + copy var@6;
  i := copy i + 1: u32;
  continue 0
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> 1: u32 ;
  Some (var@7) -> â¥ : (u32, bool) ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  s := copy s + copy var@6
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> 1: u32 ;
  Some (var@7) -> â¥ : (u32, bool) ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> 1: u32 ;
  Some (var@7) -> â¥ : (u32, bool) ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}


- op:
copy s

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> 1: u32 ;
  Some (var@7) -> â¥ : (u32, bool) ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}


- op:
copy var@6

[[32mDebug[39m] 
**About to evaluate statement**: [
  i := copy i + 1: u32;
  continue 0
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> 1: u32 ;
  Some (var@7) -> â¥ : (u32, bool) ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  i := copy i + 1: u32
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> 1: u32 ;
  Some (var@7) -> â¥ : (u32, bool) ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> 1: u32 ;
  Some (var@7) -> â¥ : (u32, bool) ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}


- op:
copy i

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> 1: u32 ;
  Some (var@7) -> â¥ : (u32, bool) ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}


- op:
1: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  continue 0
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> 1: u32 ;
  Some (var@7) -> â¥ : (u32, bool) ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := copy i;
  var@5 := copy max;
  var@3 := move var@4 < move var@5;
  if (move var@3) {
    var@6 := copy i;
    s := copy s + copy var@6;
    i := copy i + 1: u32;
    continue 0
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> 1: u32 ;
  Some (var@7) -> â¥ : (u32, bool) ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := copy i
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> 1: u32 ;
  Some (var@7) -> â¥ : (u32, bool) ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> 1: u32 ;
  Some (var@7) -> â¥ : (u32, bool) ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}


- op:
copy i

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := copy max;
  var@3 := move var@4 < move var@5;
  if (move var@3) {
    var@6 := copy i;
    s := copy s + copy var@6;
    i := copy i + 1: u32;
    continue 0
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> 2: u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> 1: u32 ;
  Some (var@7) -> â¥ : (u32, bool) ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := copy max
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> 2: u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> 1: u32 ;
  Some (var@7) -> â¥ : (u32, bool) ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> 2: u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> 1: u32 ;
  Some (var@7) -> â¥ : (u32, bool) ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}


- op:
copy max

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@3 := move var@4 < move var@5;
  if (move var@3) {
    var@6 := copy i;
    s := copy s + copy var@6;
    i := copy i + 1: u32;
    continue 0
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> 2: u32 ;
  Some (var@5) -> 2: u32 ;
  Some (var@6) -> 1: u32 ;
  Some (var@7) -> â¥ : (u32, bool) ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@3 := move var@4 < move var@5
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> 2: u32 ;
  Some (var@5) -> 2: u32 ;
  Some (var@6) -> 1: u32 ;
  Some (var@7) -> â¥ : (u32, bool) ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> 2: u32 ;
  Some (var@5) -> 2: u32 ;
  Some (var@6) -> 1: u32 ;
  Some (var@7) -> â¥ : (u32, bool) ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}


- op:
move var@4

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> 2: u32 ;
  Some (var@6) -> 1: u32 ;
  Some (var@7) -> â¥ : (u32, bool) ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}


- op:
move var@5

[[32mDebug[39m] 
**About to evaluate statement**: [
  if (move var@3) {
    var@6 := copy i;
    s := copy s + copy var@6;
    i := copy i + 1: u32;
    continue 0
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (var@3) -> false ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> 1: u32 ;
  Some (var@7) -> â¥ : (u32, bool) ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (var@3) -> false ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> 1: u32 ;
  Some (var@7) -> â¥ : (u32, bool) ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}


- op:
move var@3

[[32mDebug[39m] 
**About to evaluate statement**: [
  break 0
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> 1: u32 ;
  Some (var@7) -> â¥ : (u32, bool) ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  s := copy s * 2: u32;
  return
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> 1: u32 ;
  Some (var@7) -> â¥ : (u32, bool) ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  s := copy s * 2: u32
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> 1: u32 ;
  Some (var@7) -> â¥ : (u32, bool) ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> 1: u32 ;
  Some (var@7) -> â¥ : (u32, bool) ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}


- op:
copy s

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> 1: u32 ;
  Some (var@7) -> â¥ : (u32, bool) ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}


- op:
2: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  return
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (s) -> 2: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> 1: u32 ;
  Some (var@7) -> â¥ : (u32, bool) ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] ctx_pop_frame:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (s) -> 2: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> 1: u32 ;
  Some (var@7) -> â¥ : (u32, bool) ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}

# Frame 1:
{
  Some (s) -> 2: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> 1: u32 ;
  Some (var@7) -> â¥ : (u32, bool) ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}


- op:
move s

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := copy x;
  var@3 := move var@4 == 2: u32;
  var@2 := Â¬ move var@3;
  assert(Â¬move var@2);
  x := move test_loop2(2: u32);
  var@8 := copy x;
  var@7 := move var@8 == 1: u32;
  var@6 := Â¬ move var@7;
  assert(Â¬move var@6);
  x := move test_loop3(2: u32);
  var@12 := copy x;
  var@11 := move var@12 == 3: u32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  x := move test_loop4(20: u32);
  var@16 := copy x;
  var@15 := move var@16 == 1: u32;
  var@14 := Â¬ move var@15;
  assert(Â¬move var@14);
  x := move test_loop5(2: u32);
  var@20 := copy x;
  var@19 := move var@20 == 2: u32;
  var@18 := Â¬ move var@19;
  assert(Â¬move var@18);
  x := move test_loop6(2: u32);
  var@24 := copy x;
  var@23 := move var@24 == 2: u32;
  var@22 := Â¬ move var@23;
  assert(Â¬move var@22);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := copy x
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}


- op:
copy x

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@3 := move var@4 == 2: u32;
  var@2 := Â¬ move var@3;
  assert(Â¬move var@2);
  x := move test_loop2(2: u32);
  var@8 := copy x;
  var@7 := move var@8 == 1: u32;
  var@6 := Â¬ move var@7;
  assert(Â¬move var@6);
  x := move test_loop3(2: u32);
  var@12 := copy x;
  var@11 := move var@12 == 3: u32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  x := move test_loop4(20: u32);
  var@16 := copy x;
  var@15 := move var@16 == 1: u32;
  var@14 := Â¬ move var@15;
  assert(Â¬move var@14);
  x := move test_loop5(2: u32);
  var@20 := copy x;
  var@19 := move var@20 == 2: u32;
  var@18 := Â¬ move var@19;
  assert(Â¬move var@18);
  x := move test_loop6(2: u32);
  var@24 := copy x;
  var@23 := move var@24 == 2: u32;
  var@22 := Â¬ move var@23;
  assert(Â¬move var@22);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> 2: u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@3 := move var@4 == 2: u32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> 2: u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> 2: u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}


- op:
move var@4

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}


- op:
2: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@2 := Â¬ move var@3;
  assert(Â¬move var@2);
  x := move test_loop2(2: u32);
  var@8 := copy x;
  var@7 := move var@8 == 1: u32;
  var@6 := Â¬ move var@7;
  assert(Â¬move var@6);
  x := move test_loop3(2: u32);
  var@12 := copy x;
  var@11 := move var@12 == 3: u32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  x := move test_loop4(20: u32);
  var@16 := copy x;
  var@15 := move var@16 == 1: u32;
  var@14 := Â¬ move var@15;
  assert(Â¬move var@14);
  x := move test_loop5(2: u32);
  var@20 := copy x;
  var@19 := move var@20 == 2: u32;
  var@18 := Â¬ move var@19;
  assert(Â¬move var@18);
  x := move test_loop6(2: u32);
  var@24 := copy x;
  var@23 := move var@24 == 2: u32;
  var@22 := Â¬ move var@23;
  assert(Â¬move var@22);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> true ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@2 := Â¬ move var@3
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> true ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> true ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}


- op:
move var@3

[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@2);
  x := move test_loop2(2: u32);
  var@8 := copy x;
  var@7 := move var@8 == 1: u32;
  var@6 := Â¬ move var@7;
  assert(Â¬move var@6);
  x := move test_loop3(2: u32);
  var@12 := copy x;
  var@11 := move var@12 == 3: u32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  x := move test_loop4(20: u32);
  var@16 := copy x;
  var@15 := move var@16 == 1: u32;
  var@14 := Â¬ move var@15;
  assert(Â¬move var@14);
  x := move test_loop5(2: u32);
  var@20 := copy x;
  var@19 := move var@20 == 2: u32;
  var@18 := Â¬ move var@19;
  assert(Â¬move var@18);
  x := move test_loop6(2: u32);
  var@24 := copy x;
  var@23 := move var@24 == 2: u32;
  var@22 := Â¬ move var@23;
  assert(Â¬move var@22);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> false ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@2)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> false ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> false ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}


- op:
move var@2

[[32mDebug[39m] 
**About to evaluate statement**: [
  x := move test_loop2(2: u32);
  var@8 := copy x;
  var@7 := move var@8 == 1: u32;
  var@6 := Â¬ move var@7;
  assert(Â¬move var@6);
  x := move test_loop3(2: u32);
  var@12 := copy x;
  var@11 := move var@12 == 3: u32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  x := move test_loop4(20: u32);
  var@16 := copy x;
  var@15 := move var@16 == 1: u32;
  var@14 := Â¬ move var@15;
  assert(Â¬move var@14);
  x := move test_loop5(2: u32);
  var@20 := copy x;
  var@19 := move var@20 == 2: u32;
  var@18 := Â¬ move var@19;
  assert(Â¬move var@18);
  x := move test_loop6(2: u32);
  var@24 := copy x;
  var@23 := move var@24 == 2: u32;
  var@22 := Â¬ move var@23;
  assert(Â¬move var@22);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  x := move test_loop2(2: u32)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}


- op:
2: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  i := 0: u32;
  s := 0: u32;
  loop {
    var@4 := copy i;
    var@5 := copy max;
    var@3 := move var@4 < move var@5;
    if (move var@3) {
      var@6 := copy i;
      switch (move var@6) {
        17: u32 => {
          break 0
        }
        _ => {
          var@7 := copy i;
          s := copy s + copy var@7;
          i := copy i + 1: u32;
          continue 0
        }
      }
    }
    else {
      break 0
    }
  };
  return
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> â¥ : u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> â¥ : u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  i := 0: u32
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> â¥ : u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> â¥ : u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> â¥ : u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> â¥ : u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}


- op:
0: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  s := 0: u32;
  loop {
    var@4 := copy i;
    var@5 := copy max;
    var@3 := move var@4 < move var@5;
    if (move var@3) {
      var@6 := copy i;
      switch (move var@6) {
        17: u32 => {
          break 0
        }
        _ => {
          var@7 := copy i;
          s := copy s + copy var@7;
          i := copy i + 1: u32;
          continue 0
        }
      }
    }
    else {
      break 0
    }
  };
  return
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> â¥ : u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  s := 0: u32
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> â¥ : u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> â¥ : u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}


- op:
0: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  loop {
    var@4 := copy i;
    var@5 := copy max;
    var@3 := move var@4 < move var@5;
    if (move var@3) {
      var@6 := copy i;
      switch (move var@6) {
        17: u32 => {
          break 0
        }
        _ => {
          var@7 := copy i;
          s := copy s + copy var@7;
          i := copy i + 1: u32;
          continue 0
        }
      }
    }
    else {
      break 0
    }
  };
  return
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  loop {
    var@4 := copy i;
    var@5 := copy max;
    var@3 := move var@4 < move var@5;
    if (move var@3) {
      var@6 := copy i;
      switch (move var@6) {
        17: u32 => {
          break 0
        }
        _ => {
          var@7 := copy i;
          s := copy s + copy var@7;
          i := copy i + 1: u32;
          continue 0
        }
      }
    }
    else {
      break 0
    }
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := copy i;
  var@5 := copy max;
  var@3 := move var@4 < move var@5;
  if (move var@3) {
    var@6 := copy i;
    switch (move var@6) {
      17: u32 => {
        break 0
      }
      _ => {
        var@7 := copy i;
        s := copy s + copy var@7;
        i := copy i + 1: u32;
        continue 0
      }
    }
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := copy i
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}


- op:
copy i

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := copy max;
  var@3 := move var@4 < move var@5;
  if (move var@3) {
    var@6 := copy i;
    switch (move var@6) {
      17: u32 => {
        break 0
      }
      _ => {
        var@7 := copy i;
        s := copy s + copy var@7;
        i := copy i + 1: u32;
        continue 0
      }
    }
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> 0: u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := copy max
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> 0: u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> 0: u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}


- op:
copy max

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@3 := move var@4 < move var@5;
  if (move var@3) {
    var@6 := copy i;
    switch (move var@6) {
      17: u32 => {
        break 0
      }
      _ => {
        var@7 := copy i;
        s := copy s + copy var@7;
        i := copy i + 1: u32;
        continue 0
      }
    }
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> 0: u32 ;
  Some (var@5) -> 2: u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@3 := move var@4 < move var@5
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> 0: u32 ;
  Some (var@5) -> 2: u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> 0: u32 ;
  Some (var@5) -> 2: u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}


- op:
move var@4

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> 2: u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}


- op:
move var@5

[[32mDebug[39m] 
**About to evaluate statement**: [
  if (move var@3) {
    var@6 := copy i;
    switch (move var@6) {
      17: u32 => {
        break 0
      }
      _ => {
        var@7 := copy i;
        s := copy s + copy var@7;
        i := copy i + 1: u32;
        continue 0
      }
    }
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> true ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> true ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}


- op:
move var@3

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@6 := copy i;
  switch (move var@6) {
    17: u32 => {
      break 0
    }
    _ => {
      var@7 := copy i;
      s := copy s + copy var@7;
      i := copy i + 1: u32;
      continue 0
    }
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@6 := copy i
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}


- op:
copy i

[[32mDebug[39m] 
**About to evaluate statement**: [
  switch (move var@6) {
    17: u32 => {
      break 0
    }
    _ => {
      var@7 := copy i;
      s := copy s + copy var@7;
      i := copy i + 1: u32;
      continue 0
    }
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> 0: u32 ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> 0: u32 ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}


- op:
move var@6

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := copy i;
  s := copy s + copy var@7;
  i := copy i + 1: u32;
  continue 0
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := copy i
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}


- op:
copy i

[[32mDebug[39m] 
**About to evaluate statement**: [
  s := copy s + copy var@7;
  i := copy i + 1: u32;
  continue 0
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> 0: u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  s := copy s + copy var@7
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> 0: u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> 0: u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}


- op:
copy s

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> 0: u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}


- op:
copy var@7

[[32mDebug[39m] 
**About to evaluate statement**: [
  i := copy i + 1: u32;
  continue 0
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> 0: u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  i := copy i + 1: u32
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> 0: u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> 0: u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}


- op:
copy i

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> 0: u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}


- op:
1: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  continue 0
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> 0: u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := copy i;
  var@5 := copy max;
  var@3 := move var@4 < move var@5;
  if (move var@3) {
    var@6 := copy i;
    switch (move var@6) {
      17: u32 => {
        break 0
      }
      _ => {
        var@7 := copy i;
        s := copy s + copy var@7;
        i := copy i + 1: u32;
        continue 0
      }
    }
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> 0: u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := copy i
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> 0: u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> 0: u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}


- op:
copy i

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := copy max;
  var@3 := move var@4 < move var@5;
  if (move var@3) {
    var@6 := copy i;
    switch (move var@6) {
      17: u32 => {
        break 0
      }
      _ => {
        var@7 := copy i;
        s := copy s + copy var@7;
        i := copy i + 1: u32;
        continue 0
      }
    }
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> 1: u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> 0: u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := copy max
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> 1: u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> 0: u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> 1: u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> 0: u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}


- op:
copy max

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@3 := move var@4 < move var@5;
  if (move var@3) {
    var@6 := copy i;
    switch (move var@6) {
      17: u32 => {
        break 0
      }
      _ => {
        var@7 := copy i;
        s := copy s + copy var@7;
        i := copy i + 1: u32;
        continue 0
      }
    }
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> 1: u32 ;
  Some (var@5) -> 2: u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> 0: u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@3 := move var@4 < move var@5
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> 1: u32 ;
  Some (var@5) -> 2: u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> 0: u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> 1: u32 ;
  Some (var@5) -> 2: u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> 0: u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}


- op:
move var@4

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> 2: u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> 0: u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}


- op:
move var@5

[[32mDebug[39m] 
**About to evaluate statement**: [
  if (move var@3) {
    var@6 := copy i;
    switch (move var@6) {
      17: u32 => {
        break 0
      }
      _ => {
        var@7 := copy i;
        s := copy s + copy var@7;
        i := copy i + 1: u32;
        continue 0
      }
    }
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> true ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> 0: u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> true ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> 0: u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}


- op:
move var@3

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@6 := copy i;
  switch (move var@6) {
    17: u32 => {
      break 0
    }
    _ => {
      var@7 := copy i;
      s := copy s + copy var@7;
      i := copy i + 1: u32;
      continue 0
    }
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> 0: u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@6 := copy i
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> 0: u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> 0: u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}


- op:
copy i

[[32mDebug[39m] 
**About to evaluate statement**: [
  switch (move var@6) {
    17: u32 => {
      break 0
    }
    _ => {
      var@7 := copy i;
      s := copy s + copy var@7;
      i := copy i + 1: u32;
      continue 0
    }
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> 1: u32 ;
  Some (var@7) -> 0: u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> 1: u32 ;
  Some (var@7) -> 0: u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}


- op:
move var@6

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := copy i;
  s := copy s + copy var@7;
  i := copy i + 1: u32;
  continue 0
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> 0: u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := copy i
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> 0: u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> 0: u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}


- op:
copy i

[[32mDebug[39m] 
**About to evaluate statement**: [
  s := copy s + copy var@7;
  i := copy i + 1: u32;
  continue 0
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> 1: u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  s := copy s + copy var@7
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> 1: u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> 1: u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}


- op:
copy s

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> 1: u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}


- op:
copy var@7

[[32mDebug[39m] 
**About to evaluate statement**: [
  i := copy i + 1: u32;
  continue 0
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> 1: u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  i := copy i + 1: u32
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> 1: u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> 1: u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}


- op:
copy i

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> 1: u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}


- op:
1: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  continue 0
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> 1: u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := copy i;
  var@5 := copy max;
  var@3 := move var@4 < move var@5;
  if (move var@3) {
    var@6 := copy i;
    switch (move var@6) {
      17: u32 => {
        break 0
      }
      _ => {
        var@7 := copy i;
        s := copy s + copy var@7;
        i := copy i + 1: u32;
        continue 0
      }
    }
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> 1: u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := copy i
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> 1: u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> 1: u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}


- op:
copy i

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := copy max;
  var@3 := move var@4 < move var@5;
  if (move var@3) {
    var@6 := copy i;
    switch (move var@6) {
      17: u32 => {
        break 0
      }
      _ => {
        var@7 := copy i;
        s := copy s + copy var@7;
        i := copy i + 1: u32;
        continue 0
      }
    }
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> 2: u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> 1: u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := copy max
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> 2: u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> 1: u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> 2: u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> 1: u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}


- op:
copy max

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@3 := move var@4 < move var@5;
  if (move var@3) {
    var@6 := copy i;
    switch (move var@6) {
      17: u32 => {
        break 0
      }
      _ => {
        var@7 := copy i;
        s := copy s + copy var@7;
        i := copy i + 1: u32;
        continue 0
      }
    }
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> 2: u32 ;
  Some (var@5) -> 2: u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> 1: u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@3 := move var@4 < move var@5
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> 2: u32 ;
  Some (var@5) -> 2: u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> 1: u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> 2: u32 ;
  Some (var@5) -> 2: u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> 1: u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}


- op:
move var@4

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> 2: u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> 1: u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}


- op:
move var@5

[[32mDebug[39m] 
**About to evaluate statement**: [
  if (move var@3) {
    var@6 := copy i;
    switch (move var@6) {
      17: u32 => {
        break 0
      }
      _ => {
        var@7 := copy i;
        s := copy s + copy var@7;
        i := copy i + 1: u32;
        continue 0
      }
    }
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (var@3) -> false ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> 1: u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (var@3) -> false ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> 1: u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}


- op:
move var@3

[[32mDebug[39m] 
**About to evaluate statement**: [
  break 0
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> 1: u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  return
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> 1: u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] ctx_pop_frame:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> 1: u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> 1: u32 ;
  Some (var@8) -> â¥ : (u32, bool) ;
  Some (var@9) -> â¥ : (u32, bool) ;
}


- op:
move s

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := copy x;
  var@7 := move var@8 == 1: u32;
  var@6 := Â¬ move var@7;
  assert(Â¬move var@6);
  x := move test_loop3(2: u32);
  var@12 := copy x;
  var@11 := move var@12 == 3: u32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  x := move test_loop4(20: u32);
  var@16 := copy x;
  var@15 := move var@16 == 1: u32;
  var@14 := Â¬ move var@15;
  assert(Â¬move var@14);
  x := move test_loop5(2: u32);
  var@20 := copy x;
  var@19 := move var@20 == 2: u32;
  var@18 := Â¬ move var@19;
  assert(Â¬move var@18);
  x := move test_loop6(2: u32);
  var@24 := copy x;
  var@23 := move var@24 == 2: u32;
  var@22 := Â¬ move var@23;
  assert(Â¬move var@22);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := copy x
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}


- op:
copy x

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := move var@8 == 1: u32;
  var@6 := Â¬ move var@7;
  assert(Â¬move var@6);
  x := move test_loop3(2: u32);
  var@12 := copy x;
  var@11 := move var@12 == 3: u32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  x := move test_loop4(20: u32);
  var@16 := copy x;
  var@15 := move var@16 == 1: u32;
  var@14 := Â¬ move var@15;
  assert(Â¬move var@14);
  x := move test_loop5(2: u32);
  var@20 := copy x;
  var@19 := move var@20 == 2: u32;
  var@18 := Â¬ move var@19;
  assert(Â¬move var@18);
  x := move test_loop6(2: u32);
  var@24 := copy x;
  var@23 := move var@24 == 2: u32;
  var@22 := Â¬ move var@23;
  assert(Â¬move var@22);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> 1: u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := move var@8 == 1: u32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> 1: u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> 1: u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}


- op:
move var@8

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}


- op:
1: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@6 := Â¬ move var@7;
  assert(Â¬move var@6);
  x := move test_loop3(2: u32);
  var@12 := copy x;
  var@11 := move var@12 == 3: u32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  x := move test_loop4(20: u32);
  var@16 := copy x;
  var@15 := move var@16 == 1: u32;
  var@14 := Â¬ move var@15;
  assert(Â¬move var@14);
  x := move test_loop5(2: u32);
  var@20 := copy x;
  var@19 := move var@20 == 2: u32;
  var@18 := Â¬ move var@19;
  assert(Â¬move var@18);
  x := move test_loop6(2: u32);
  var@24 := copy x;
  var@23 := move var@24 == 2: u32;
  var@22 := Â¬ move var@23;
  assert(Â¬move var@22);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> true ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@6 := Â¬ move var@7
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> true ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> true ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}


- op:
move var@7

[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@6);
  x := move test_loop3(2: u32);
  var@12 := copy x;
  var@11 := move var@12 == 3: u32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  x := move test_loop4(20: u32);
  var@16 := copy x;
  var@15 := move var@16 == 1: u32;
  var@14 := Â¬ move var@15;
  assert(Â¬move var@14);
  x := move test_loop5(2: u32);
  var@20 := copy x;
  var@19 := move var@20 == 2: u32;
  var@18 := Â¬ move var@19;
  assert(Â¬move var@18);
  x := move test_loop6(2: u32);
  var@24 := copy x;
  var@23 := move var@24 == 2: u32;
  var@22 := Â¬ move var@23;
  assert(Â¬move var@22);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> false ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@6)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> false ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> false ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}


- op:
move var@6

[[32mDebug[39m] 
**About to evaluate statement**: [
  x := move test_loop3(2: u32);
  var@12 := copy x;
  var@11 := move var@12 == 3: u32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  x := move test_loop4(20: u32);
  var@16 := copy x;
  var@15 := move var@16 == 1: u32;
  var@14 := Â¬ move var@15;
  assert(Â¬move var@14);
  x := move test_loop5(2: u32);
  var@20 := copy x;
  var@19 := move var@20 == 2: u32;
  var@18 := Â¬ move var@19;
  assert(Â¬move var@18);
  x := move test_loop6(2: u32);
  var@24 := copy x;
  var@23 := move var@24 == 2: u32;
  var@22 := Â¬ move var@23;
  assert(Â¬move var@22);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  x := move test_loop3(2: u32)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}


- op:
2: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  i := 0: u32;
  j := 0: u32;
  s := 0: u32;
  loop {
    var@5 := copy i;
    var@6 := copy max;
    var@4 := move var@5 < move var@6;
    if (move var@4) {
      loop {
        var@8 := copy j;
        var@9 := copy max;
        var@7 := move var@8 < move var@9;
        if (move var@7) {
          var@11 := copy i;
          var@12 := copy j;
          var@10 := copy var@11 + copy var@12;
          switch (move var@10) {
            17: u32 => {
              continue 0
            }
            _ => {
              nop
            }
          };
          var@14 := copy i;
          s := copy s + copy var@14;
          j := copy j + 1: u32;
          continue 1
        }
        else {
          break 0
        }
      };
      j := 0: u32;
      var@17 := copy i;
      s := copy s + copy var@17;
      i := copy i + 1: u32;
      continue 0
    }
    else {
      break 0
    }
  };
  return
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> â¥ : u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> â¥ : u32 ;
  Some (j) -> â¥ : u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  i := 0: u32
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> â¥ : u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> â¥ : u32 ;
  Some (j) -> â¥ : u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> â¥ : u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> â¥ : u32 ;
  Some (j) -> â¥ : u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
0: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  j := 0: u32;
  s := 0: u32;
  loop {
    var@5 := copy i;
    var@6 := copy max;
    var@4 := move var@5 < move var@6;
    if (move var@4) {
      loop {
        var@8 := copy j;
        var@9 := copy max;
        var@7 := move var@8 < move var@9;
        if (move var@7) {
          var@11 := copy i;
          var@12 := copy j;
          var@10 := copy var@11 + copy var@12;
          switch (move var@10) {
            17: u32 => {
              continue 0
            }
            _ => {
              nop
            }
          };
          var@14 := copy i;
          s := copy s + copy var@14;
          j := copy j + 1: u32;
          continue 1
        }
        else {
          break 0
        }
      };
      j := 0: u32;
      var@17 := copy i;
      s := copy s + copy var@17;
      i := copy i + 1: u32;
      continue 0
    }
    else {
      break 0
    }
  };
  return
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> â¥ : u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> â¥ : u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  j := 0: u32
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> â¥ : u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> â¥ : u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> â¥ : u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> â¥ : u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
0: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  s := 0: u32;
  loop {
    var@5 := copy i;
    var@6 := copy max;
    var@4 := move var@5 < move var@6;
    if (move var@4) {
      loop {
        var@8 := copy j;
        var@9 := copy max;
        var@7 := move var@8 < move var@9;
        if (move var@7) {
          var@11 := copy i;
          var@12 := copy j;
          var@10 := copy var@11 + copy var@12;
          switch (move var@10) {
            17: u32 => {
              continue 0
            }
            _ => {
              nop
            }
          };
          var@14 := copy i;
          s := copy s + copy var@14;
          j := copy j + 1: u32;
          continue 1
        }
        else {
          break 0
        }
      };
      j := 0: u32;
      var@17 := copy i;
      s := copy s + copy var@17;
      i := copy i + 1: u32;
      continue 0
    }
    else {
      break 0
    }
  };
  return
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> â¥ : u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  s := 0: u32
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> â¥ : u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> â¥ : u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
0: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  loop {
    var@5 := copy i;
    var@6 := copy max;
    var@4 := move var@5 < move var@6;
    if (move var@4) {
      loop {
        var@8 := copy j;
        var@9 := copy max;
        var@7 := move var@8 < move var@9;
        if (move var@7) {
          var@11 := copy i;
          var@12 := copy j;
          var@10 := copy var@11 + copy var@12;
          switch (move var@10) {
            17: u32 => {
              continue 0
            }
            _ => {
              nop
            }
          };
          var@14 := copy i;
          s := copy s + copy var@14;
          j := copy j + 1: u32;
          continue 1
        }
        else {
          break 0
        }
      };
      j := 0: u32;
      var@17 := copy i;
      s := copy s + copy var@17;
      i := copy i + 1: u32;
      continue 0
    }
    else {
      break 0
    }
  };
  return
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  loop {
    var@5 := copy i;
    var@6 := copy max;
    var@4 := move var@5 < move var@6;
    if (move var@4) {
      loop {
        var@8 := copy j;
        var@9 := copy max;
        var@7 := move var@8 < move var@9;
        if (move var@7) {
          var@11 := copy i;
          var@12 := copy j;
          var@10 := copy var@11 + copy var@12;
          switch (move var@10) {
            17: u32 => {
              continue 0
            }
            _ => {
              nop
            }
          };
          var@14 := copy i;
          s := copy s + copy var@14;
          j := copy j + 1: u32;
          continue 1
        }
        else {
          break 0
        }
      };
      j := 0: u32;
      var@17 := copy i;
      s := copy s + copy var@17;
      i := copy i + 1: u32;
      continue 0
    }
    else {
      break 0
    }
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := copy i;
  var@6 := copy max;
  var@4 := move var@5 < move var@6;
  if (move var@4) {
    loop {
      var@8 := copy j;
      var@9 := copy max;
      var@7 := move var@8 < move var@9;
      if (move var@7) {
        var@11 := copy i;
        var@12 := copy j;
        var@10 := copy var@11 + copy var@12;
        switch (move var@10) {
          17: u32 => {
            continue 0
          }
          _ => {
            nop
          }
        };
        var@14 := copy i;
        s := copy s + copy var@14;
        j := copy j + 1: u32;
        continue 1
      }
      else {
        break 0
      }
    };
    j := 0: u32;
    var@17 := copy i;
    s := copy s + copy var@17;
    i := copy i + 1: u32;
    continue 0
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := copy i
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy i

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@6 := copy max;
  var@4 := move var@5 < move var@6;
  if (move var@4) {
    loop {
      var@8 := copy j;
      var@9 := copy max;
      var@7 := move var@8 < move var@9;
      if (move var@7) {
        var@11 := copy i;
        var@12 := copy j;
        var@10 := copy var@11 + copy var@12;
        switch (move var@10) {
          17: u32 => {
            continue 0
          }
          _ => {
            nop
          }
        };
        var@14 := copy i;
        s := copy s + copy var@14;
        j := copy j + 1: u32;
        continue 1
      }
      else {
        break 0
      }
    };
    j := 0: u32;
    var@17 := copy i;
    s := copy s + copy var@17;
    i := copy i + 1: u32;
    continue 0
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> 0: u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@6 := copy max
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> 0: u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> 0: u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy max

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := move var@5 < move var@6;
  if (move var@4) {
    loop {
      var@8 := copy j;
      var@9 := copy max;
      var@7 := move var@8 < move var@9;
      if (move var@7) {
        var@11 := copy i;
        var@12 := copy j;
        var@10 := copy var@11 + copy var@12;
        switch (move var@10) {
          17: u32 => {
            continue 0
          }
          _ => {
            nop
          }
        };
        var@14 := copy i;
        s := copy s + copy var@14;
        j := copy j + 1: u32;
        continue 1
      }
      else {
        break 0
      }
    };
    j := 0: u32;
    var@17 := copy i;
    s := copy s + copy var@17;
    i := copy i + 1: u32;
    continue 0
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> 0: u32 ;
  Some (var@6) -> 2: u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := move var@5 < move var@6
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> 0: u32 ;
  Some (var@6) -> 2: u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> 0: u32 ;
  Some (var@6) -> 2: u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
move var@5

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> 2: u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
move var@6

[[32mDebug[39m] 
**About to evaluate statement**: [
  if (move var@4) {
    loop {
      var@8 := copy j;
      var@9 := copy max;
      var@7 := move var@8 < move var@9;
      if (move var@7) {
        var@11 := copy i;
        var@12 := copy j;
        var@10 := copy var@11 + copy var@12;
        switch (move var@10) {
          17: u32 => {
            continue 0
          }
          _ => {
            nop
          }
        };
        var@14 := copy i;
        s := copy s + copy var@14;
        j := copy j + 1: u32;
        continue 1
      }
      else {
        break 0
      }
    };
    j := 0: u32;
    var@17 := copy i;
    s := copy s + copy var@17;
    i := copy i + 1: u32;
    continue 0
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> true ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> true ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
move var@4

[[32mDebug[39m] 
**About to evaluate statement**: [
  loop {
    var@8 := copy j;
    var@9 := copy max;
    var@7 := move var@8 < move var@9;
    if (move var@7) {
      var@11 := copy i;
      var@12 := copy j;
      var@10 := copy var@11 + copy var@12;
      switch (move var@10) {
        17: u32 => {
          continue 0
        }
        _ => {
          nop
        }
      };
      var@14 := copy i;
      s := copy s + copy var@14;
      j := copy j + 1: u32;
      continue 1
    }
    else {
      break 0
    }
  };
  j := 0: u32;
  var@17 := copy i;
  s := copy s + copy var@17;
  i := copy i + 1: u32;
  continue 0
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  loop {
    var@8 := copy j;
    var@9 := copy max;
    var@7 := move var@8 < move var@9;
    if (move var@7) {
      var@11 := copy i;
      var@12 := copy j;
      var@10 := copy var@11 + copy var@12;
      switch (move var@10) {
        17: u32 => {
          continue 0
        }
        _ => {
          nop
        }
      };
      var@14 := copy i;
      s := copy s + copy var@14;
      j := copy j + 1: u32;
      continue 1
    }
    else {
      break 0
    }
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := copy j;
  var@9 := copy max;
  var@7 := move var@8 < move var@9;
  if (move var@7) {
    var@11 := copy i;
    var@12 := copy j;
    var@10 := copy var@11 + copy var@12;
    switch (move var@10) {
      17: u32 => {
        continue 0
      }
      _ => {
        nop
      }
    };
    var@14 := copy i;
    s := copy s + copy var@14;
    j := copy j + 1: u32;
    continue 1
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := copy j
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy j

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@9 := copy max;
  var@7 := move var@8 < move var@9;
  if (move var@7) {
    var@11 := copy i;
    var@12 := copy j;
    var@10 := copy var@11 + copy var@12;
    switch (move var@10) {
      17: u32 => {
        continue 0
      }
      _ => {
        nop
      }
    };
    var@14 := copy i;
    s := copy s + copy var@14;
    j := copy j + 1: u32;
    continue 1
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> 0: u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@9 := copy max
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> 0: u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> 0: u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy max

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := move var@8 < move var@9;
  if (move var@7) {
    var@11 := copy i;
    var@12 := copy j;
    var@10 := copy var@11 + copy var@12;
    switch (move var@10) {
      17: u32 => {
        continue 0
      }
      _ => {
        nop
      }
    };
    var@14 := copy i;
    s := copy s + copy var@14;
    j := copy j + 1: u32;
    continue 1
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> 0: u32 ;
  Some (var@9) -> 2: u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := move var@8 < move var@9
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> 0: u32 ;
  Some (var@9) -> 2: u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> 0: u32 ;
  Some (var@9) -> 2: u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
move var@8

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> 2: u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
move var@9

[[32mDebug[39m] 
**About to evaluate statement**: [
  if (move var@7) {
    var@11 := copy i;
    var@12 := copy j;
    var@10 := copy var@11 + copy var@12;
    switch (move var@10) {
      17: u32 => {
        continue 0
      }
      _ => {
        nop
      }
    };
    var@14 := copy i;
    s := copy s + copy var@14;
    j := copy j + 1: u32;
    continue 1
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> true ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> true ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
move var@7

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@11 := copy i;
  var@12 := copy j;
  var@10 := copy var@11 + copy var@12;
  switch (move var@10) {
    17: u32 => {
      continue 0
    }
    _ => {
      nop
    }
  };
  var@14 := copy i;
  s := copy s + copy var@14;
  j := copy j + 1: u32;
  continue 1
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@11 := copy i
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy i

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@12 := copy j;
  var@10 := copy var@11 + copy var@12;
  switch (move var@10) {
    17: u32 => {
      continue 0
    }
    _ => {
      nop
    }
  };
  var@14 := copy i;
  s := copy s + copy var@14;
  j := copy j + 1: u32;
  continue 1
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@12 := copy j
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy j

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@10 := copy var@11 + copy var@12;
  switch (move var@10) {
    17: u32 => {
      continue 0
    }
    _ => {
      nop
    }
  };
  var@14 := copy i;
  s := copy s + copy var@14;
  j := copy j + 1: u32;
  continue 1
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@10 := copy var@11 + copy var@12
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy var@11

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy var@12

[[32mDebug[39m] 
**About to evaluate statement**: [
  switch (move var@10) {
    17: u32 => {
      continue 0
    }
    _ => {
      nop
    }
  };
  var@14 := copy i;
  s := copy s + copy var@14;
  j := copy j + 1: u32;
  continue 1
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 0: u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  switch (move var@10) {
    17: u32 => {
      continue 0
    }
    _ => {
      nop
    }
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 0: u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 0: u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
move var@10

[[32mDebug[39m] 
**About to evaluate statement**: [
  nop
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@14 := copy i;
  s := copy s + copy var@14;
  j := copy j + 1: u32;
  continue 1
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@14 := copy i
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy i

[[32mDebug[39m] 
**About to evaluate statement**: [
  s := copy s + copy var@14;
  j := copy j + 1: u32;
  continue 1
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  s := copy s + copy var@14
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy s

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy var@14

[[32mDebug[39m] 
**About to evaluate statement**: [
  j := copy j + 1: u32;
  continue 1
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  j := copy j + 1: u32
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy j

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
1: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  continue 1
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := copy i;
  var@6 := copy max;
  var@4 := move var@5 < move var@6;
  if (move var@4) {
    loop {
      var@8 := copy j;
      var@9 := copy max;
      var@7 := move var@8 < move var@9;
      if (move var@7) {
        var@11 := copy i;
        var@12 := copy j;
        var@10 := copy var@11 + copy var@12;
        switch (move var@10) {
          17: u32 => {
            continue 0
          }
          _ => {
            nop
          }
        };
        var@14 := copy i;
        s := copy s + copy var@14;
        j := copy j + 1: u32;
        continue 1
      }
      else {
        break 0
      }
    };
    j := 0: u32;
    var@17 := copy i;
    s := copy s + copy var@17;
    i := copy i + 1: u32;
    continue 0
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := copy i
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy i

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@6 := copy max;
  var@4 := move var@5 < move var@6;
  if (move var@4) {
    loop {
      var@8 := copy j;
      var@9 := copy max;
      var@7 := move var@8 < move var@9;
      if (move var@7) {
        var@11 := copy i;
        var@12 := copy j;
        var@10 := copy var@11 + copy var@12;
        switch (move var@10) {
          17: u32 => {
            continue 0
          }
          _ => {
            nop
          }
        };
        var@14 := copy i;
        s := copy s + copy var@14;
        j := copy j + 1: u32;
        continue 1
      }
      else {
        break 0
      }
    };
    j := 0: u32;
    var@17 := copy i;
    s := copy s + copy var@17;
    i := copy i + 1: u32;
    continue 0
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> 0: u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@6 := copy max
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> 0: u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> 0: u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy max

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := move var@5 < move var@6;
  if (move var@4) {
    loop {
      var@8 := copy j;
      var@9 := copy max;
      var@7 := move var@8 < move var@9;
      if (move var@7) {
        var@11 := copy i;
        var@12 := copy j;
        var@10 := copy var@11 + copy var@12;
        switch (move var@10) {
          17: u32 => {
            continue 0
          }
          _ => {
            nop
          }
        };
        var@14 := copy i;
        s := copy s + copy var@14;
        j := copy j + 1: u32;
        continue 1
      }
      else {
        break 0
      }
    };
    j := 0: u32;
    var@17 := copy i;
    s := copy s + copy var@17;
    i := copy i + 1: u32;
    continue 0
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> 0: u32 ;
  Some (var@6) -> 2: u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := move var@5 < move var@6
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> 0: u32 ;
  Some (var@6) -> 2: u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> 0: u32 ;
  Some (var@6) -> 2: u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
move var@5

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> 2: u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
move var@6

[[32mDebug[39m] 
**About to evaluate statement**: [
  if (move var@4) {
    loop {
      var@8 := copy j;
      var@9 := copy max;
      var@7 := move var@8 < move var@9;
      if (move var@7) {
        var@11 := copy i;
        var@12 := copy j;
        var@10 := copy var@11 + copy var@12;
        switch (move var@10) {
          17: u32 => {
            continue 0
          }
          _ => {
            nop
          }
        };
        var@14 := copy i;
        s := copy s + copy var@14;
        j := copy j + 1: u32;
        continue 1
      }
      else {
        break 0
      }
    };
    j := 0: u32;
    var@17 := copy i;
    s := copy s + copy var@17;
    i := copy i + 1: u32;
    continue 0
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> true ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> true ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
move var@4

[[32mDebug[39m] 
**About to evaluate statement**: [
  loop {
    var@8 := copy j;
    var@9 := copy max;
    var@7 := move var@8 < move var@9;
    if (move var@7) {
      var@11 := copy i;
      var@12 := copy j;
      var@10 := copy var@11 + copy var@12;
      switch (move var@10) {
        17: u32 => {
          continue 0
        }
        _ => {
          nop
        }
      };
      var@14 := copy i;
      s := copy s + copy var@14;
      j := copy j + 1: u32;
      continue 1
    }
    else {
      break 0
    }
  };
  j := 0: u32;
  var@17 := copy i;
  s := copy s + copy var@17;
  i := copy i + 1: u32;
  continue 0
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  loop {
    var@8 := copy j;
    var@9 := copy max;
    var@7 := move var@8 < move var@9;
    if (move var@7) {
      var@11 := copy i;
      var@12 := copy j;
      var@10 := copy var@11 + copy var@12;
      switch (move var@10) {
        17: u32 => {
          continue 0
        }
        _ => {
          nop
        }
      };
      var@14 := copy i;
      s := copy s + copy var@14;
      j := copy j + 1: u32;
      continue 1
    }
    else {
      break 0
    }
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := copy j;
  var@9 := copy max;
  var@7 := move var@8 < move var@9;
  if (move var@7) {
    var@11 := copy i;
    var@12 := copy j;
    var@10 := copy var@11 + copy var@12;
    switch (move var@10) {
      17: u32 => {
        continue 0
      }
      _ => {
        nop
      }
    };
    var@14 := copy i;
    s := copy s + copy var@14;
    j := copy j + 1: u32;
    continue 1
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := copy j
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy j

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@9 := copy max;
  var@7 := move var@8 < move var@9;
  if (move var@7) {
    var@11 := copy i;
    var@12 := copy j;
    var@10 := copy var@11 + copy var@12;
    switch (move var@10) {
      17: u32 => {
        continue 0
      }
      _ => {
        nop
      }
    };
    var@14 := copy i;
    s := copy s + copy var@14;
    j := copy j + 1: u32;
    continue 1
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> 1: u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@9 := copy max
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> 1: u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> 1: u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy max

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := move var@8 < move var@9;
  if (move var@7) {
    var@11 := copy i;
    var@12 := copy j;
    var@10 := copy var@11 + copy var@12;
    switch (move var@10) {
      17: u32 => {
        continue 0
      }
      _ => {
        nop
      }
    };
    var@14 := copy i;
    s := copy s + copy var@14;
    j := copy j + 1: u32;
    continue 1
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> 1: u32 ;
  Some (var@9) -> 2: u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := move var@8 < move var@9
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> 1: u32 ;
  Some (var@9) -> 2: u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> 1: u32 ;
  Some (var@9) -> 2: u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
move var@8

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> 2: u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
move var@9

[[32mDebug[39m] 
**About to evaluate statement**: [
  if (move var@7) {
    var@11 := copy i;
    var@12 := copy j;
    var@10 := copy var@11 + copy var@12;
    switch (move var@10) {
      17: u32 => {
        continue 0
      }
      _ => {
        nop
      }
    };
    var@14 := copy i;
    s := copy s + copy var@14;
    j := copy j + 1: u32;
    continue 1
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> true ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> true ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
move var@7

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@11 := copy i;
  var@12 := copy j;
  var@10 := copy var@11 + copy var@12;
  switch (move var@10) {
    17: u32 => {
      continue 0
    }
    _ => {
      nop
    }
  };
  var@14 := copy i;
  s := copy s + copy var@14;
  j := copy j + 1: u32;
  continue 1
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@11 := copy i
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy i

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@12 := copy j;
  var@10 := copy var@11 + copy var@12;
  switch (move var@10) {
    17: u32 => {
      continue 0
    }
    _ => {
      nop
    }
  };
  var@14 := copy i;
  s := copy s + copy var@14;
  j := copy j + 1: u32;
  continue 1
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@12 := copy j
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy j

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@10 := copy var@11 + copy var@12;
  switch (move var@10) {
    17: u32 => {
      continue 0
    }
    _ => {
      nop
    }
  };
  var@14 := copy i;
  s := copy s + copy var@14;
  j := copy j + 1: u32;
  continue 1
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@10 := copy var@11 + copy var@12
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy var@11

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy var@12

[[32mDebug[39m] 
**About to evaluate statement**: [
  switch (move var@10) {
    17: u32 => {
      continue 0
    }
    _ => {
      nop
    }
  };
  var@14 := copy i;
  s := copy s + copy var@14;
  j := copy j + 1: u32;
  continue 1
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  switch (move var@10) {
    17: u32 => {
      continue 0
    }
    _ => {
      nop
    }
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
move var@10

[[32mDebug[39m] 
**About to evaluate statement**: [
  nop
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@14 := copy i;
  s := copy s + copy var@14;
  j := copy j + 1: u32;
  continue 1
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@14 := copy i
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy i

[[32mDebug[39m] 
**About to evaluate statement**: [
  s := copy s + copy var@14;
  j := copy j + 1: u32;
  continue 1
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  s := copy s + copy var@14
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy s

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy var@14

[[32mDebug[39m] 
**About to evaluate statement**: [
  j := copy j + 1: u32;
  continue 1
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  j := copy j + 1: u32
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy j

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
1: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  continue 1
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := copy i;
  var@6 := copy max;
  var@4 := move var@5 < move var@6;
  if (move var@4) {
    loop {
      var@8 := copy j;
      var@9 := copy max;
      var@7 := move var@8 < move var@9;
      if (move var@7) {
        var@11 := copy i;
        var@12 := copy j;
        var@10 := copy var@11 + copy var@12;
        switch (move var@10) {
          17: u32 => {
            continue 0
          }
          _ => {
            nop
          }
        };
        var@14 := copy i;
        s := copy s + copy var@14;
        j := copy j + 1: u32;
        continue 1
      }
      else {
        break 0
      }
    };
    j := 0: u32;
    var@17 := copy i;
    s := copy s + copy var@17;
    i := copy i + 1: u32;
    continue 0
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := copy i
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy i

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@6 := copy max;
  var@4 := move var@5 < move var@6;
  if (move var@4) {
    loop {
      var@8 := copy j;
      var@9 := copy max;
      var@7 := move var@8 < move var@9;
      if (move var@7) {
        var@11 := copy i;
        var@12 := copy j;
        var@10 := copy var@11 + copy var@12;
        switch (move var@10) {
          17: u32 => {
            continue 0
          }
          _ => {
            nop
          }
        };
        var@14 := copy i;
        s := copy s + copy var@14;
        j := copy j + 1: u32;
        continue 1
      }
      else {
        break 0
      }
    };
    j := 0: u32;
    var@17 := copy i;
    s := copy s + copy var@17;
    i := copy i + 1: u32;
    continue 0
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> 0: u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@6 := copy max
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> 0: u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> 0: u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy max

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := move var@5 < move var@6;
  if (move var@4) {
    loop {
      var@8 := copy j;
      var@9 := copy max;
      var@7 := move var@8 < move var@9;
      if (move var@7) {
        var@11 := copy i;
        var@12 := copy j;
        var@10 := copy var@11 + copy var@12;
        switch (move var@10) {
          17: u32 => {
            continue 0
          }
          _ => {
            nop
          }
        };
        var@14 := copy i;
        s := copy s + copy var@14;
        j := copy j + 1: u32;
        continue 1
      }
      else {
        break 0
      }
    };
    j := 0: u32;
    var@17 := copy i;
    s := copy s + copy var@17;
    i := copy i + 1: u32;
    continue 0
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> 0: u32 ;
  Some (var@6) -> 2: u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := move var@5 < move var@6
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> 0: u32 ;
  Some (var@6) -> 2: u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> 0: u32 ;
  Some (var@6) -> 2: u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
move var@5

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> 2: u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
move var@6

[[32mDebug[39m] 
**About to evaluate statement**: [
  if (move var@4) {
    loop {
      var@8 := copy j;
      var@9 := copy max;
      var@7 := move var@8 < move var@9;
      if (move var@7) {
        var@11 := copy i;
        var@12 := copy j;
        var@10 := copy var@11 + copy var@12;
        switch (move var@10) {
          17: u32 => {
            continue 0
          }
          _ => {
            nop
          }
        };
        var@14 := copy i;
        s := copy s + copy var@14;
        j := copy j + 1: u32;
        continue 1
      }
      else {
        break 0
      }
    };
    j := 0: u32;
    var@17 := copy i;
    s := copy s + copy var@17;
    i := copy i + 1: u32;
    continue 0
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> true ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> true ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
move var@4

[[32mDebug[39m] 
**About to evaluate statement**: [
  loop {
    var@8 := copy j;
    var@9 := copy max;
    var@7 := move var@8 < move var@9;
    if (move var@7) {
      var@11 := copy i;
      var@12 := copy j;
      var@10 := copy var@11 + copy var@12;
      switch (move var@10) {
        17: u32 => {
          continue 0
        }
        _ => {
          nop
        }
      };
      var@14 := copy i;
      s := copy s + copy var@14;
      j := copy j + 1: u32;
      continue 1
    }
    else {
      break 0
    }
  };
  j := 0: u32;
  var@17 := copy i;
  s := copy s + copy var@17;
  i := copy i + 1: u32;
  continue 0
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  loop {
    var@8 := copy j;
    var@9 := copy max;
    var@7 := move var@8 < move var@9;
    if (move var@7) {
      var@11 := copy i;
      var@12 := copy j;
      var@10 := copy var@11 + copy var@12;
      switch (move var@10) {
        17: u32 => {
          continue 0
        }
        _ => {
          nop
        }
      };
      var@14 := copy i;
      s := copy s + copy var@14;
      j := copy j + 1: u32;
      continue 1
    }
    else {
      break 0
    }
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := copy j;
  var@9 := copy max;
  var@7 := move var@8 < move var@9;
  if (move var@7) {
    var@11 := copy i;
    var@12 := copy j;
    var@10 := copy var@11 + copy var@12;
    switch (move var@10) {
      17: u32 => {
        continue 0
      }
      _ => {
        nop
      }
    };
    var@14 := copy i;
    s := copy s + copy var@14;
    j := copy j + 1: u32;
    continue 1
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := copy j
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy j

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@9 := copy max;
  var@7 := move var@8 < move var@9;
  if (move var@7) {
    var@11 := copy i;
    var@12 := copy j;
    var@10 := copy var@11 + copy var@12;
    switch (move var@10) {
      17: u32 => {
        continue 0
      }
      _ => {
        nop
      }
    };
    var@14 := copy i;
    s := copy s + copy var@14;
    j := copy j + 1: u32;
    continue 1
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> 2: u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@9 := copy max
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> 2: u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> 2: u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy max

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := move var@8 < move var@9;
  if (move var@7) {
    var@11 := copy i;
    var@12 := copy j;
    var@10 := copy var@11 + copy var@12;
    switch (move var@10) {
      17: u32 => {
        continue 0
      }
      _ => {
        nop
      }
    };
    var@14 := copy i;
    s := copy s + copy var@14;
    j := copy j + 1: u32;
    continue 1
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> 2: u32 ;
  Some (var@9) -> 2: u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := move var@8 < move var@9
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> 2: u32 ;
  Some (var@9) -> 2: u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> 2: u32 ;
  Some (var@9) -> 2: u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
move var@8

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> 2: u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
move var@9

[[32mDebug[39m] 
**About to evaluate statement**: [
  if (move var@7) {
    var@11 := copy i;
    var@12 := copy j;
    var@10 := copy var@11 + copy var@12;
    switch (move var@10) {
      17: u32 => {
        continue 0
      }
      _ => {
        nop
      }
    };
    var@14 := copy i;
    s := copy s + copy var@14;
    j := copy j + 1: u32;
    continue 1
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> false ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> false ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
move var@7

[[32mDebug[39m] 
**About to evaluate statement**: [
  break 0
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  j := 0: u32;
  var@17 := copy i;
  s := copy s + copy var@17;
  i := copy i + 1: u32;
  continue 0
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  j := 0: u32
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
0: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@17 := copy i;
  s := copy s + copy var@17;
  i := copy i + 1: u32;
  continue 0
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@17 := copy i
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy i

[[32mDebug[39m] 
**About to evaluate statement**: [
  s := copy s + copy var@17;
  i := copy i + 1: u32;
  continue 0
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  s := copy s + copy var@17
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy s

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy var@17

[[32mDebug[39m] 
**About to evaluate statement**: [
  i := copy i + 1: u32;
  continue 0
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  i := copy i + 1: u32
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy i

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
1: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  continue 0
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := copy i;
  var@6 := copy max;
  var@4 := move var@5 < move var@6;
  if (move var@4) {
    loop {
      var@8 := copy j;
      var@9 := copy max;
      var@7 := move var@8 < move var@9;
      if (move var@7) {
        var@11 := copy i;
        var@12 := copy j;
        var@10 := copy var@11 + copy var@12;
        switch (move var@10) {
          17: u32 => {
            continue 0
          }
          _ => {
            nop
          }
        };
        var@14 := copy i;
        s := copy s + copy var@14;
        j := copy j + 1: u32;
        continue 1
      }
      else {
        break 0
      }
    };
    j := 0: u32;
    var@17 := copy i;
    s := copy s + copy var@17;
    i := copy i + 1: u32;
    continue 0
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := copy i
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy i

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@6 := copy max;
  var@4 := move var@5 < move var@6;
  if (move var@4) {
    loop {
      var@8 := copy j;
      var@9 := copy max;
      var@7 := move var@8 < move var@9;
      if (move var@7) {
        var@11 := copy i;
        var@12 := copy j;
        var@10 := copy var@11 + copy var@12;
        switch (move var@10) {
          17: u32 => {
            continue 0
          }
          _ => {
            nop
          }
        };
        var@14 := copy i;
        s := copy s + copy var@14;
        j := copy j + 1: u32;
        continue 1
      }
      else {
        break 0
      }
    };
    j := 0: u32;
    var@17 := copy i;
    s := copy s + copy var@17;
    i := copy i + 1: u32;
    continue 0
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> 1: u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@6 := copy max
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> 1: u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> 1: u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy max

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := move var@5 < move var@6;
  if (move var@4) {
    loop {
      var@8 := copy j;
      var@9 := copy max;
      var@7 := move var@8 < move var@9;
      if (move var@7) {
        var@11 := copy i;
        var@12 := copy j;
        var@10 := copy var@11 + copy var@12;
        switch (move var@10) {
          17: u32 => {
            continue 0
          }
          _ => {
            nop
          }
        };
        var@14 := copy i;
        s := copy s + copy var@14;
        j := copy j + 1: u32;
        continue 1
      }
      else {
        break 0
      }
    };
    j := 0: u32;
    var@17 := copy i;
    s := copy s + copy var@17;
    i := copy i + 1: u32;
    continue 0
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> 1: u32 ;
  Some (var@6) -> 2: u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := move var@5 < move var@6
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> 1: u32 ;
  Some (var@6) -> 2: u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> 1: u32 ;
  Some (var@6) -> 2: u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
move var@5

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> 2: u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
move var@6

[[32mDebug[39m] 
**About to evaluate statement**: [
  if (move var@4) {
    loop {
      var@8 := copy j;
      var@9 := copy max;
      var@7 := move var@8 < move var@9;
      if (move var@7) {
        var@11 := copy i;
        var@12 := copy j;
        var@10 := copy var@11 + copy var@12;
        switch (move var@10) {
          17: u32 => {
            continue 0
          }
          _ => {
            nop
          }
        };
        var@14 := copy i;
        s := copy s + copy var@14;
        j := copy j + 1: u32;
        continue 1
      }
      else {
        break 0
      }
    };
    j := 0: u32;
    var@17 := copy i;
    s := copy s + copy var@17;
    i := copy i + 1: u32;
    continue 0
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> true ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> true ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
move var@4

[[32mDebug[39m] 
**About to evaluate statement**: [
  loop {
    var@8 := copy j;
    var@9 := copy max;
    var@7 := move var@8 < move var@9;
    if (move var@7) {
      var@11 := copy i;
      var@12 := copy j;
      var@10 := copy var@11 + copy var@12;
      switch (move var@10) {
        17: u32 => {
          continue 0
        }
        _ => {
          nop
        }
      };
      var@14 := copy i;
      s := copy s + copy var@14;
      j := copy j + 1: u32;
      continue 1
    }
    else {
      break 0
    }
  };
  j := 0: u32;
  var@17 := copy i;
  s := copy s + copy var@17;
  i := copy i + 1: u32;
  continue 0
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  loop {
    var@8 := copy j;
    var@9 := copy max;
    var@7 := move var@8 < move var@9;
    if (move var@7) {
      var@11 := copy i;
      var@12 := copy j;
      var@10 := copy var@11 + copy var@12;
      switch (move var@10) {
        17: u32 => {
          continue 0
        }
        _ => {
          nop
        }
      };
      var@14 := copy i;
      s := copy s + copy var@14;
      j := copy j + 1: u32;
      continue 1
    }
    else {
      break 0
    }
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := copy j;
  var@9 := copy max;
  var@7 := move var@8 < move var@9;
  if (move var@7) {
    var@11 := copy i;
    var@12 := copy j;
    var@10 := copy var@11 + copy var@12;
    switch (move var@10) {
      17: u32 => {
        continue 0
      }
      _ => {
        nop
      }
    };
    var@14 := copy i;
    s := copy s + copy var@14;
    j := copy j + 1: u32;
    continue 1
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := copy j
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy j

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@9 := copy max;
  var@7 := move var@8 < move var@9;
  if (move var@7) {
    var@11 := copy i;
    var@12 := copy j;
    var@10 := copy var@11 + copy var@12;
    switch (move var@10) {
      17: u32 => {
        continue 0
      }
      _ => {
        nop
      }
    };
    var@14 := copy i;
    s := copy s + copy var@14;
    j := copy j + 1: u32;
    continue 1
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> 0: u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@9 := copy max
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> 0: u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> 0: u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy max

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := move var@8 < move var@9;
  if (move var@7) {
    var@11 := copy i;
    var@12 := copy j;
    var@10 := copy var@11 + copy var@12;
    switch (move var@10) {
      17: u32 => {
        continue 0
      }
      _ => {
        nop
      }
    };
    var@14 := copy i;
    s := copy s + copy var@14;
    j := copy j + 1: u32;
    continue 1
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> 0: u32 ;
  Some (var@9) -> 2: u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := move var@8 < move var@9
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> 0: u32 ;
  Some (var@9) -> 2: u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> 0: u32 ;
  Some (var@9) -> 2: u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
move var@8

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> 2: u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
move var@9

[[32mDebug[39m] 
**About to evaluate statement**: [
  if (move var@7) {
    var@11 := copy i;
    var@12 := copy j;
    var@10 := copy var@11 + copy var@12;
    switch (move var@10) {
      17: u32 => {
        continue 0
      }
      _ => {
        nop
      }
    };
    var@14 := copy i;
    s := copy s + copy var@14;
    j := copy j + 1: u32;
    continue 1
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> true ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> true ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
move var@7

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@11 := copy i;
  var@12 := copy j;
  var@10 := copy var@11 + copy var@12;
  switch (move var@10) {
    17: u32 => {
      continue 0
    }
    _ => {
      nop
    }
  };
  var@14 := copy i;
  s := copy s + copy var@14;
  j := copy j + 1: u32;
  continue 1
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@11 := copy i
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 0: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy i

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@12 := copy j;
  var@10 := copy var@11 + copy var@12;
  switch (move var@10) {
    17: u32 => {
      continue 0
    }
    _ => {
      nop
    }
  };
  var@14 := copy i;
  s := copy s + copy var@14;
  j := copy j + 1: u32;
  continue 1
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@12 := copy j
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy j

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@10 := copy var@11 + copy var@12;
  switch (move var@10) {
    17: u32 => {
      continue 0
    }
    _ => {
      nop
    }
  };
  var@14 := copy i;
  s := copy s + copy var@14;
  j := copy j + 1: u32;
  continue 1
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@10 := copy var@11 + copy var@12
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy var@11

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy var@12

[[32mDebug[39m] 
**About to evaluate statement**: [
  switch (move var@10) {
    17: u32 => {
      continue 0
    }
    _ => {
      nop
    }
  };
  var@14 := copy i;
  s := copy s + copy var@14;
  j := copy j + 1: u32;
  continue 1
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  switch (move var@10) {
    17: u32 => {
      continue 0
    }
    _ => {
      nop
    }
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
move var@10

[[32mDebug[39m] 
**About to evaluate statement**: [
  nop
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@14 := copy i;
  s := copy s + copy var@14;
  j := copy j + 1: u32;
  continue 1
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@14 := copy i
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 0: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy i

[[32mDebug[39m] 
**About to evaluate statement**: [
  s := copy s + copy var@14;
  j := copy j + 1: u32;
  continue 1
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  s := copy s + copy var@14
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy s

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy var@14

[[32mDebug[39m] 
**About to evaluate statement**: [
  j := copy j + 1: u32;
  continue 1
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  j := copy j + 1: u32
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy j

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
1: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  continue 1
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := copy i;
  var@6 := copy max;
  var@4 := move var@5 < move var@6;
  if (move var@4) {
    loop {
      var@8 := copy j;
      var@9 := copy max;
      var@7 := move var@8 < move var@9;
      if (move var@7) {
        var@11 := copy i;
        var@12 := copy j;
        var@10 := copy var@11 + copy var@12;
        switch (move var@10) {
          17: u32 => {
            continue 0
          }
          _ => {
            nop
          }
        };
        var@14 := copy i;
        s := copy s + copy var@14;
        j := copy j + 1: u32;
        continue 1
      }
      else {
        break 0
      }
    };
    j := 0: u32;
    var@17 := copy i;
    s := copy s + copy var@17;
    i := copy i + 1: u32;
    continue 0
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := copy i
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy i

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@6 := copy max;
  var@4 := move var@5 < move var@6;
  if (move var@4) {
    loop {
      var@8 := copy j;
      var@9 := copy max;
      var@7 := move var@8 < move var@9;
      if (move var@7) {
        var@11 := copy i;
        var@12 := copy j;
        var@10 := copy var@11 + copy var@12;
        switch (move var@10) {
          17: u32 => {
            continue 0
          }
          _ => {
            nop
          }
        };
        var@14 := copy i;
        s := copy s + copy var@14;
        j := copy j + 1: u32;
        continue 1
      }
      else {
        break 0
      }
    };
    j := 0: u32;
    var@17 := copy i;
    s := copy s + copy var@17;
    i := copy i + 1: u32;
    continue 0
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> 1: u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@6 := copy max
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> 1: u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> 1: u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy max

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := move var@5 < move var@6;
  if (move var@4) {
    loop {
      var@8 := copy j;
      var@9 := copy max;
      var@7 := move var@8 < move var@9;
      if (move var@7) {
        var@11 := copy i;
        var@12 := copy j;
        var@10 := copy var@11 + copy var@12;
        switch (move var@10) {
          17: u32 => {
            continue 0
          }
          _ => {
            nop
          }
        };
        var@14 := copy i;
        s := copy s + copy var@14;
        j := copy j + 1: u32;
        continue 1
      }
      else {
        break 0
      }
    };
    j := 0: u32;
    var@17 := copy i;
    s := copy s + copy var@17;
    i := copy i + 1: u32;
    continue 0
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> 1: u32 ;
  Some (var@6) -> 2: u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := move var@5 < move var@6
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> 1: u32 ;
  Some (var@6) -> 2: u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> 1: u32 ;
  Some (var@6) -> 2: u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
move var@5

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> 2: u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
move var@6

[[32mDebug[39m] 
**About to evaluate statement**: [
  if (move var@4) {
    loop {
      var@8 := copy j;
      var@9 := copy max;
      var@7 := move var@8 < move var@9;
      if (move var@7) {
        var@11 := copy i;
        var@12 := copy j;
        var@10 := copy var@11 + copy var@12;
        switch (move var@10) {
          17: u32 => {
            continue 0
          }
          _ => {
            nop
          }
        };
        var@14 := copy i;
        s := copy s + copy var@14;
        j := copy j + 1: u32;
        continue 1
      }
      else {
        break 0
      }
    };
    j := 0: u32;
    var@17 := copy i;
    s := copy s + copy var@17;
    i := copy i + 1: u32;
    continue 0
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> true ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> true ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
move var@4

[[32mDebug[39m] 
**About to evaluate statement**: [
  loop {
    var@8 := copy j;
    var@9 := copy max;
    var@7 := move var@8 < move var@9;
    if (move var@7) {
      var@11 := copy i;
      var@12 := copy j;
      var@10 := copy var@11 + copy var@12;
      switch (move var@10) {
        17: u32 => {
          continue 0
        }
        _ => {
          nop
        }
      };
      var@14 := copy i;
      s := copy s + copy var@14;
      j := copy j + 1: u32;
      continue 1
    }
    else {
      break 0
    }
  };
  j := 0: u32;
  var@17 := copy i;
  s := copy s + copy var@17;
  i := copy i + 1: u32;
  continue 0
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  loop {
    var@8 := copy j;
    var@9 := copy max;
    var@7 := move var@8 < move var@9;
    if (move var@7) {
      var@11 := copy i;
      var@12 := copy j;
      var@10 := copy var@11 + copy var@12;
      switch (move var@10) {
        17: u32 => {
          continue 0
        }
        _ => {
          nop
        }
      };
      var@14 := copy i;
      s := copy s + copy var@14;
      j := copy j + 1: u32;
      continue 1
    }
    else {
      break 0
    }
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := copy j;
  var@9 := copy max;
  var@7 := move var@8 < move var@9;
  if (move var@7) {
    var@11 := copy i;
    var@12 := copy j;
    var@10 := copy var@11 + copy var@12;
    switch (move var@10) {
      17: u32 => {
        continue 0
      }
      _ => {
        nop
      }
    };
    var@14 := copy i;
    s := copy s + copy var@14;
    j := copy j + 1: u32;
    continue 1
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := copy j
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy j

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@9 := copy max;
  var@7 := move var@8 < move var@9;
  if (move var@7) {
    var@11 := copy i;
    var@12 := copy j;
    var@10 := copy var@11 + copy var@12;
    switch (move var@10) {
      17: u32 => {
        continue 0
      }
      _ => {
        nop
      }
    };
    var@14 := copy i;
    s := copy s + copy var@14;
    j := copy j + 1: u32;
    continue 1
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> 1: u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@9 := copy max
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> 1: u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> 1: u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy max

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := move var@8 < move var@9;
  if (move var@7) {
    var@11 := copy i;
    var@12 := copy j;
    var@10 := copy var@11 + copy var@12;
    switch (move var@10) {
      17: u32 => {
        continue 0
      }
      _ => {
        nop
      }
    };
    var@14 := copy i;
    s := copy s + copy var@14;
    j := copy j + 1: u32;
    continue 1
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> 1: u32 ;
  Some (var@9) -> 2: u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := move var@8 < move var@9
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> 1: u32 ;
  Some (var@9) -> 2: u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> 1: u32 ;
  Some (var@9) -> 2: u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
move var@8

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> 2: u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
move var@9

[[32mDebug[39m] 
**About to evaluate statement**: [
  if (move var@7) {
    var@11 := copy i;
    var@12 := copy j;
    var@10 := copy var@11 + copy var@12;
    switch (move var@10) {
      17: u32 => {
        continue 0
      }
      _ => {
        nop
      }
    };
    var@14 := copy i;
    s := copy s + copy var@14;
    j := copy j + 1: u32;
    continue 1
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> true ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> true ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
move var@7

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@11 := copy i;
  var@12 := copy j;
  var@10 := copy var@11 + copy var@12;
  switch (move var@10) {
    17: u32 => {
      continue 0
    }
    _ => {
      nop
    }
  };
  var@14 := copy i;
  s := copy s + copy var@14;
  j := copy j + 1: u32;
  continue 1
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@11 := copy i
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy i

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@12 := copy j;
  var@10 := copy var@11 + copy var@12;
  switch (move var@10) {
    17: u32 => {
      continue 0
    }
    _ => {
      nop
    }
  };
  var@14 := copy i;
  s := copy s + copy var@14;
  j := copy j + 1: u32;
  continue 1
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@12 := copy j
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy j

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@10 := copy var@11 + copy var@12;
  switch (move var@10) {
    17: u32 => {
      continue 0
    }
    _ => {
      nop
    }
  };
  var@14 := copy i;
  s := copy s + copy var@14;
  j := copy j + 1: u32;
  continue 1
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@10 := copy var@11 + copy var@12
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy var@11

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy var@12

[[32mDebug[39m] 
**About to evaluate statement**: [
  switch (move var@10) {
    17: u32 => {
      continue 0
    }
    _ => {
      nop
    }
  };
  var@14 := copy i;
  s := copy s + copy var@14;
  j := copy j + 1: u32;
  continue 1
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 2: u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  switch (move var@10) {
    17: u32 => {
      continue 0
    }
    _ => {
      nop
    }
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 2: u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 2: u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
move var@10

[[32mDebug[39m] 
**About to evaluate statement**: [
  nop
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@14 := copy i;
  s := copy s + copy var@14;
  j := copy j + 1: u32;
  continue 1
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@14 := copy i
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy i

[[32mDebug[39m] 
**About to evaluate statement**: [
  s := copy s + copy var@14;
  j := copy j + 1: u32;
  continue 1
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  s := copy s + copy var@14
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy s

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy var@14

[[32mDebug[39m] 
**About to evaluate statement**: [
  j := copy j + 1: u32;
  continue 1
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 2: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  j := copy j + 1: u32
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 2: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 2: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy j

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 2: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
1: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  continue 1
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 2: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := copy i;
  var@6 := copy max;
  var@4 := move var@5 < move var@6;
  if (move var@4) {
    loop {
      var@8 := copy j;
      var@9 := copy max;
      var@7 := move var@8 < move var@9;
      if (move var@7) {
        var@11 := copy i;
        var@12 := copy j;
        var@10 := copy var@11 + copy var@12;
        switch (move var@10) {
          17: u32 => {
            continue 0
          }
          _ => {
            nop
          }
        };
        var@14 := copy i;
        s := copy s + copy var@14;
        j := copy j + 1: u32;
        continue 1
      }
      else {
        break 0
      }
    };
    j := 0: u32;
    var@17 := copy i;
    s := copy s + copy var@17;
    i := copy i + 1: u32;
    continue 0
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 2: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := copy i
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 2: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 2: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy i

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@6 := copy max;
  var@4 := move var@5 < move var@6;
  if (move var@4) {
    loop {
      var@8 := copy j;
      var@9 := copy max;
      var@7 := move var@8 < move var@9;
      if (move var@7) {
        var@11 := copy i;
        var@12 := copy j;
        var@10 := copy var@11 + copy var@12;
        switch (move var@10) {
          17: u32 => {
            continue 0
          }
          _ => {
            nop
          }
        };
        var@14 := copy i;
        s := copy s + copy var@14;
        j := copy j + 1: u32;
        continue 1
      }
      else {
        break 0
      }
    };
    j := 0: u32;
    var@17 := copy i;
    s := copy s + copy var@17;
    i := copy i + 1: u32;
    continue 0
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 2: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> 1: u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@6 := copy max
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 2: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> 1: u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 2: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> 1: u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy max

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := move var@5 < move var@6;
  if (move var@4) {
    loop {
      var@8 := copy j;
      var@9 := copy max;
      var@7 := move var@8 < move var@9;
      if (move var@7) {
        var@11 := copy i;
        var@12 := copy j;
        var@10 := copy var@11 + copy var@12;
        switch (move var@10) {
          17: u32 => {
            continue 0
          }
          _ => {
            nop
          }
        };
        var@14 := copy i;
        s := copy s + copy var@14;
        j := copy j + 1: u32;
        continue 1
      }
      else {
        break 0
      }
    };
    j := 0: u32;
    var@17 := copy i;
    s := copy s + copy var@17;
    i := copy i + 1: u32;
    continue 0
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 2: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> 1: u32 ;
  Some (var@6) -> 2: u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := move var@5 < move var@6
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 2: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> 1: u32 ;
  Some (var@6) -> 2: u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 2: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> 1: u32 ;
  Some (var@6) -> 2: u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
move var@5

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 2: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> 2: u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
move var@6

[[32mDebug[39m] 
**About to evaluate statement**: [
  if (move var@4) {
    loop {
      var@8 := copy j;
      var@9 := copy max;
      var@7 := move var@8 < move var@9;
      if (move var@7) {
        var@11 := copy i;
        var@12 := copy j;
        var@10 := copy var@11 + copy var@12;
        switch (move var@10) {
          17: u32 => {
            continue 0
          }
          _ => {
            nop
          }
        };
        var@14 := copy i;
        s := copy s + copy var@14;
        j := copy j + 1: u32;
        continue 1
      }
      else {
        break 0
      }
    };
    j := 0: u32;
    var@17 := copy i;
    s := copy s + copy var@17;
    i := copy i + 1: u32;
    continue 0
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 2: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> true ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 2: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> true ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
move var@4

[[32mDebug[39m] 
**About to evaluate statement**: [
  loop {
    var@8 := copy j;
    var@9 := copy max;
    var@7 := move var@8 < move var@9;
    if (move var@7) {
      var@11 := copy i;
      var@12 := copy j;
      var@10 := copy var@11 + copy var@12;
      switch (move var@10) {
        17: u32 => {
          continue 0
        }
        _ => {
          nop
        }
      };
      var@14 := copy i;
      s := copy s + copy var@14;
      j := copy j + 1: u32;
      continue 1
    }
    else {
      break 0
    }
  };
  j := 0: u32;
  var@17 := copy i;
  s := copy s + copy var@17;
  i := copy i + 1: u32;
  continue 0
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 2: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  loop {
    var@8 := copy j;
    var@9 := copy max;
    var@7 := move var@8 < move var@9;
    if (move var@7) {
      var@11 := copy i;
      var@12 := copy j;
      var@10 := copy var@11 + copy var@12;
      switch (move var@10) {
        17: u32 => {
          continue 0
        }
        _ => {
          nop
        }
      };
      var@14 := copy i;
      s := copy s + copy var@14;
      j := copy j + 1: u32;
      continue 1
    }
    else {
      break 0
    }
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 2: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := copy j;
  var@9 := copy max;
  var@7 := move var@8 < move var@9;
  if (move var@7) {
    var@11 := copy i;
    var@12 := copy j;
    var@10 := copy var@11 + copy var@12;
    switch (move var@10) {
      17: u32 => {
        continue 0
      }
      _ => {
        nop
      }
    };
    var@14 := copy i;
    s := copy s + copy var@14;
    j := copy j + 1: u32;
    continue 1
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 2: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := copy j
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 2: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 2: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy j

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@9 := copy max;
  var@7 := move var@8 < move var@9;
  if (move var@7) {
    var@11 := copy i;
    var@12 := copy j;
    var@10 := copy var@11 + copy var@12;
    switch (move var@10) {
      17: u32 => {
        continue 0
      }
      _ => {
        nop
      }
    };
    var@14 := copy i;
    s := copy s + copy var@14;
    j := copy j + 1: u32;
    continue 1
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 2: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> 2: u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@9 := copy max
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 2: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> 2: u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 2: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> 2: u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy max

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := move var@8 < move var@9;
  if (move var@7) {
    var@11 := copy i;
    var@12 := copy j;
    var@10 := copy var@11 + copy var@12;
    switch (move var@10) {
      17: u32 => {
        continue 0
      }
      _ => {
        nop
      }
    };
    var@14 := copy i;
    s := copy s + copy var@14;
    j := copy j + 1: u32;
    continue 1
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 2: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> 2: u32 ;
  Some (var@9) -> 2: u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := move var@8 < move var@9
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 2: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> 2: u32 ;
  Some (var@9) -> 2: u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 2: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> 2: u32 ;
  Some (var@9) -> 2: u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
move var@8

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 2: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> 2: u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
move var@9

[[32mDebug[39m] 
**About to evaluate statement**: [
  if (move var@7) {
    var@11 := copy i;
    var@12 := copy j;
    var@10 := copy var@11 + copy var@12;
    switch (move var@10) {
      17: u32 => {
        continue 0
      }
      _ => {
        nop
      }
    };
    var@14 := copy i;
    s := copy s + copy var@14;
    j := copy j + 1: u32;
    continue 1
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 2: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> false ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 2: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> false ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
move var@7

[[32mDebug[39m] 
**About to evaluate statement**: [
  break 0
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 2: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  j := 0: u32;
  var@17 := copy i;
  s := copy s + copy var@17;
  i := copy i + 1: u32;
  continue 0
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 2: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  j := 0: u32
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 2: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 2: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
0: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@17 := copy i;
  s := copy s + copy var@17;
  i := copy i + 1: u32;
  continue 0
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 2: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@17 := copy i
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 2: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 2: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 0: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy i

[[32mDebug[39m] 
**About to evaluate statement**: [
  s := copy s + copy var@17;
  i := copy i + 1: u32;
  continue 0
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 2: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 1: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  s := copy s + copy var@17
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 2: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 1: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 2: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 1: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy s

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 2: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 1: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy var@17

[[32mDebug[39m] 
**About to evaluate statement**: [
  i := copy i + 1: u32;
  continue 0
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 3: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 1: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  i := copy i + 1: u32
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 3: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 1: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 3: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 1: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy i

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 3: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 1: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
1: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  continue 0
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 3: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 1: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := copy i;
  var@6 := copy max;
  var@4 := move var@5 < move var@6;
  if (move var@4) {
    loop {
      var@8 := copy j;
      var@9 := copy max;
      var@7 := move var@8 < move var@9;
      if (move var@7) {
        var@11 := copy i;
        var@12 := copy j;
        var@10 := copy var@11 + copy var@12;
        switch (move var@10) {
          17: u32 => {
            continue 0
          }
          _ => {
            nop
          }
        };
        var@14 := copy i;
        s := copy s + copy var@14;
        j := copy j + 1: u32;
        continue 1
      }
      else {
        break 0
      }
    };
    j := 0: u32;
    var@17 := copy i;
    s := copy s + copy var@17;
    i := copy i + 1: u32;
    continue 0
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 3: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 1: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := copy i
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 3: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 1: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 3: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 1: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy i

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@6 := copy max;
  var@4 := move var@5 < move var@6;
  if (move var@4) {
    loop {
      var@8 := copy j;
      var@9 := copy max;
      var@7 := move var@8 < move var@9;
      if (move var@7) {
        var@11 := copy i;
        var@12 := copy j;
        var@10 := copy var@11 + copy var@12;
        switch (move var@10) {
          17: u32 => {
            continue 0
          }
          _ => {
            nop
          }
        };
        var@14 := copy i;
        s := copy s + copy var@14;
        j := copy j + 1: u32;
        continue 1
      }
      else {
        break 0
      }
    };
    j := 0: u32;
    var@17 := copy i;
    s := copy s + copy var@17;
    i := copy i + 1: u32;
    continue 0
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 3: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> 2: u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 1: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@6 := copy max
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 3: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> 2: u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 1: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 3: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> 2: u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 1: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy max

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := move var@5 < move var@6;
  if (move var@4) {
    loop {
      var@8 := copy j;
      var@9 := copy max;
      var@7 := move var@8 < move var@9;
      if (move var@7) {
        var@11 := copy i;
        var@12 := copy j;
        var@10 := copy var@11 + copy var@12;
        switch (move var@10) {
          17: u32 => {
            continue 0
          }
          _ => {
            nop
          }
        };
        var@14 := copy i;
        s := copy s + copy var@14;
        j := copy j + 1: u32;
        continue 1
      }
      else {
        break 0
      }
    };
    j := 0: u32;
    var@17 := copy i;
    s := copy s + copy var@17;
    i := copy i + 1: u32;
    continue 0
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 3: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> 2: u32 ;
  Some (var@6) -> 2: u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 1: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := move var@5 < move var@6
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 3: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> 2: u32 ;
  Some (var@6) -> 2: u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 1: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 3: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> 2: u32 ;
  Some (var@6) -> 2: u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 1: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
move var@5

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 3: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> 2: u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 1: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
move var@6

[[32mDebug[39m] 
**About to evaluate statement**: [
  if (move var@4) {
    loop {
      var@8 := copy j;
      var@9 := copy max;
      var@7 := move var@8 < move var@9;
      if (move var@7) {
        var@11 := copy i;
        var@12 := copy j;
        var@10 := copy var@11 + copy var@12;
        switch (move var@10) {
          17: u32 => {
            continue 0
          }
          _ => {
            nop
          }
        };
        var@14 := copy i;
        s := copy s + copy var@14;
        j := copy j + 1: u32;
        continue 1
      }
      else {
        break 0
      }
    };
    j := 0: u32;
    var@17 := copy i;
    s := copy s + copy var@17;
    i := copy i + 1: u32;
    continue 0
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 3: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> false ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 1: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 3: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> false ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 1: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
move var@4

[[32mDebug[39m] 
**About to evaluate statement**: [
  break 0
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 3: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 1: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  return
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 3: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 1: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] ctx_pop_frame:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 3: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 1: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 3: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 1: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> 1: u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
move s

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@12 := copy x;
  var@11 := move var@12 == 3: u32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  x := move test_loop4(20: u32);
  var@16 := copy x;
  var@15 := move var@16 == 1: u32;
  var@14 := Â¬ move var@15;
  assert(Â¬move var@14);
  x := move test_loop5(2: u32);
  var@20 := copy x;
  var@19 := move var@20 == 2: u32;
  var@18 := Â¬ move var@19;
  assert(Â¬move var@18);
  x := move test_loop6(2: u32);
  var@24 := copy x;
  var@23 := move var@24 == 2: u32;
  var@22 := Â¬ move var@23;
  assert(Â¬move var@22);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@12 := copy x
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}


- op:
copy x

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@11 := move var@12 == 3: u32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  x := move test_loop4(20: u32);
  var@16 := copy x;
  var@15 := move var@16 == 1: u32;
  var@14 := Â¬ move var@15;
  assert(Â¬move var@14);
  x := move test_loop5(2: u32);
  var@20 := copy x;
  var@19 := move var@20 == 2: u32;
  var@18 := Â¬ move var@19;
  assert(Â¬move var@18);
  x := move test_loop6(2: u32);
  var@24 := copy x;
  var@23 := move var@24 == 2: u32;
  var@22 := Â¬ move var@23;
  assert(Â¬move var@22);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> 3: u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@11 := move var@12 == 3: u32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> 3: u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> 3: u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}


- op:
move var@12

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}


- op:
3: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  x := move test_loop4(20: u32);
  var@16 := copy x;
  var@15 := move var@16 == 1: u32;
  var@14 := Â¬ move var@15;
  assert(Â¬move var@14);
  x := move test_loop5(2: u32);
  var@20 := copy x;
  var@19 := move var@20 == 2: u32;
  var@18 := Â¬ move var@19;
  assert(Â¬move var@18);
  x := move test_loop6(2: u32);
  var@24 := copy x;
  var@23 := move var@24 == 2: u32;
  var@22 := Â¬ move var@23;
  assert(Â¬move var@22);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> true ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@10 := Â¬ move var@11
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> true ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> true ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}


- op:
move var@11

[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@10);
  x := move test_loop4(20: u32);
  var@16 := copy x;
  var@15 := move var@16 == 1: u32;
  var@14 := Â¬ move var@15;
  assert(Â¬move var@14);
  x := move test_loop5(2: u32);
  var@20 := copy x;
  var@19 := move var@20 == 2: u32;
  var@18 := Â¬ move var@19;
  assert(Â¬move var@18);
  x := move test_loop6(2: u32);
  var@24 := copy x;
  var@23 := move var@24 == 2: u32;
  var@22 := Â¬ move var@23;
  assert(Â¬move var@22);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> false ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@10)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> false ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> false ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}


- op:
move var@10

[[32mDebug[39m] 
**About to evaluate statement**: [
  x := move test_loop4(20: u32);
  var@16 := copy x;
  var@15 := move var@16 == 1: u32;
  var@14 := Â¬ move var@15;
  assert(Â¬move var@14);
  x := move test_loop5(2: u32);
  var@20 := copy x;
  var@19 := move var@20 == 2: u32;
  var@18 := Â¬ move var@19;
  assert(Â¬move var@18);
  x := move test_loop6(2: u32);
  var@24 := copy x;
  var@23 := move var@24 == 2: u32;
  var@22 := Â¬ move var@23;
  assert(Â¬move var@22);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  x := move test_loop4(20: u32)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}


- op:
20: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  i := 1: u32;
  j := 0: u32;
  s := 0: u32;
  loop {
    var@5 := copy i;
    var@6 := copy max;
    var@4 := move var@5 < move var@6;
    if (move var@4) {
      loop {
        var@8 := copy j;
        var@9 := copy max;
        var@7 := move var@8 < move var@9;
        if (move var@7) {
          var@11 := copy i;
          var@12 := copy j;
          var@10 := copy var@11 + copy var@12;
          switch (move var@10) {
            17: u32 => {
              continue 0
            }
            _ => {
              nop
            }
          };
          var@14 := copy i;
          s := copy s + copy var@14;
          j := copy j + 1: u32;
          break 1
        }
        else {
          break 0
        }
      };
      j := 0: u32;
      var@17 := copy i;
      s := copy s + copy var@17;
      i := copy i + 1: u32;
      continue 0
    }
    else {
      break 0
    }
  };
  return
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> â¥ : u32 ;
  Some (max) -> 20: u32 ;
  Some (i) -> â¥ : u32 ;
  Some (j) -> â¥ : u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  i := 1: u32
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> â¥ : u32 ;
  Some (max) -> 20: u32 ;
  Some (i) -> â¥ : u32 ;
  Some (j) -> â¥ : u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> â¥ : u32 ;
  Some (max) -> 20: u32 ;
  Some (i) -> â¥ : u32 ;
  Some (j) -> â¥ : u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
1: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  j := 0: u32;
  s := 0: u32;
  loop {
    var@5 := copy i;
    var@6 := copy max;
    var@4 := move var@5 < move var@6;
    if (move var@4) {
      loop {
        var@8 := copy j;
        var@9 := copy max;
        var@7 := move var@8 < move var@9;
        if (move var@7) {
          var@11 := copy i;
          var@12 := copy j;
          var@10 := copy var@11 + copy var@12;
          switch (move var@10) {
            17: u32 => {
              continue 0
            }
            _ => {
              nop
            }
          };
          var@14 := copy i;
          s := copy s + copy var@14;
          j := copy j + 1: u32;
          break 1
        }
        else {
          break 0
        }
      };
      j := 0: u32;
      var@17 := copy i;
      s := copy s + copy var@17;
      i := copy i + 1: u32;
      continue 0
    }
    else {
      break 0
    }
  };
  return
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> â¥ : u32 ;
  Some (max) -> 20: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> â¥ : u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  j := 0: u32
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> â¥ : u32 ;
  Some (max) -> 20: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> â¥ : u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> â¥ : u32 ;
  Some (max) -> 20: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> â¥ : u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
0: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  s := 0: u32;
  loop {
    var@5 := copy i;
    var@6 := copy max;
    var@4 := move var@5 < move var@6;
    if (move var@4) {
      loop {
        var@8 := copy j;
        var@9 := copy max;
        var@7 := move var@8 < move var@9;
        if (move var@7) {
          var@11 := copy i;
          var@12 := copy j;
          var@10 := copy var@11 + copy var@12;
          switch (move var@10) {
            17: u32 => {
              continue 0
            }
            _ => {
              nop
            }
          };
          var@14 := copy i;
          s := copy s + copy var@14;
          j := copy j + 1: u32;
          break 1
        }
        else {
          break 0
        }
      };
      j := 0: u32;
      var@17 := copy i;
      s := copy s + copy var@17;
      i := copy i + 1: u32;
      continue 0
    }
    else {
      break 0
    }
  };
  return
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> â¥ : u32 ;
  Some (max) -> 20: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  s := 0: u32
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> â¥ : u32 ;
  Some (max) -> 20: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> â¥ : u32 ;
  Some (max) -> 20: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
0: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  loop {
    var@5 := copy i;
    var@6 := copy max;
    var@4 := move var@5 < move var@6;
    if (move var@4) {
      loop {
        var@8 := copy j;
        var@9 := copy max;
        var@7 := move var@8 < move var@9;
        if (move var@7) {
          var@11 := copy i;
          var@12 := copy j;
          var@10 := copy var@11 + copy var@12;
          switch (move var@10) {
            17: u32 => {
              continue 0
            }
            _ => {
              nop
            }
          };
          var@14 := copy i;
          s := copy s + copy var@14;
          j := copy j + 1: u32;
          break 1
        }
        else {
          break 0
        }
      };
      j := 0: u32;
      var@17 := copy i;
      s := copy s + copy var@17;
      i := copy i + 1: u32;
      continue 0
    }
    else {
      break 0
    }
  };
  return
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 20: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  loop {
    var@5 := copy i;
    var@6 := copy max;
    var@4 := move var@5 < move var@6;
    if (move var@4) {
      loop {
        var@8 := copy j;
        var@9 := copy max;
        var@7 := move var@8 < move var@9;
        if (move var@7) {
          var@11 := copy i;
          var@12 := copy j;
          var@10 := copy var@11 + copy var@12;
          switch (move var@10) {
            17: u32 => {
              continue 0
            }
            _ => {
              nop
            }
          };
          var@14 := copy i;
          s := copy s + copy var@14;
          j := copy j + 1: u32;
          break 1
        }
        else {
          break 0
        }
      };
      j := 0: u32;
      var@17 := copy i;
      s := copy s + copy var@17;
      i := copy i + 1: u32;
      continue 0
    }
    else {
      break 0
    }
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 20: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := copy i;
  var@6 := copy max;
  var@4 := move var@5 < move var@6;
  if (move var@4) {
    loop {
      var@8 := copy j;
      var@9 := copy max;
      var@7 := move var@8 < move var@9;
      if (move var@7) {
        var@11 := copy i;
        var@12 := copy j;
        var@10 := copy var@11 + copy var@12;
        switch (move var@10) {
          17: u32 => {
            continue 0
          }
          _ => {
            nop
          }
        };
        var@14 := copy i;
        s := copy s + copy var@14;
        j := copy j + 1: u32;
        break 1
      }
      else {
        break 0
      }
    };
    j := 0: u32;
    var@17 := copy i;
    s := copy s + copy var@17;
    i := copy i + 1: u32;
    continue 0
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 20: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := copy i
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 20: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 20: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy i

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@6 := copy max;
  var@4 := move var@5 < move var@6;
  if (move var@4) {
    loop {
      var@8 := copy j;
      var@9 := copy max;
      var@7 := move var@8 < move var@9;
      if (move var@7) {
        var@11 := copy i;
        var@12 := copy j;
        var@10 := copy var@11 + copy var@12;
        switch (move var@10) {
          17: u32 => {
            continue 0
          }
          _ => {
            nop
          }
        };
        var@14 := copy i;
        s := copy s + copy var@14;
        j := copy j + 1: u32;
        break 1
      }
      else {
        break 0
      }
    };
    j := 0: u32;
    var@17 := copy i;
    s := copy s + copy var@17;
    i := copy i + 1: u32;
    continue 0
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 20: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> 1: u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@6 := copy max
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 20: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> 1: u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 20: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> 1: u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy max

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := move var@5 < move var@6;
  if (move var@4) {
    loop {
      var@8 := copy j;
      var@9 := copy max;
      var@7 := move var@8 < move var@9;
      if (move var@7) {
        var@11 := copy i;
        var@12 := copy j;
        var@10 := copy var@11 + copy var@12;
        switch (move var@10) {
          17: u32 => {
            continue 0
          }
          _ => {
            nop
          }
        };
        var@14 := copy i;
        s := copy s + copy var@14;
        j := copy j + 1: u32;
        break 1
      }
      else {
        break 0
      }
    };
    j := 0: u32;
    var@17 := copy i;
    s := copy s + copy var@17;
    i := copy i + 1: u32;
    continue 0
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 20: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> 1: u32 ;
  Some (var@6) -> 20: u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := move var@5 < move var@6
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 20: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> 1: u32 ;
  Some (var@6) -> 20: u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 20: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> 1: u32 ;
  Some (var@6) -> 20: u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
move var@5

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 20: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> 20: u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
move var@6

[[32mDebug[39m] 
**About to evaluate statement**: [
  if (move var@4) {
    loop {
      var@8 := copy j;
      var@9 := copy max;
      var@7 := move var@8 < move var@9;
      if (move var@7) {
        var@11 := copy i;
        var@12 := copy j;
        var@10 := copy var@11 + copy var@12;
        switch (move var@10) {
          17: u32 => {
            continue 0
          }
          _ => {
            nop
          }
        };
        var@14 := copy i;
        s := copy s + copy var@14;
        j := copy j + 1: u32;
        break 1
      }
      else {
        break 0
      }
    };
    j := 0: u32;
    var@17 := copy i;
    s := copy s + copy var@17;
    i := copy i + 1: u32;
    continue 0
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 20: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> true ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 20: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> true ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
move var@4

[[32mDebug[39m] 
**About to evaluate statement**: [
  loop {
    var@8 := copy j;
    var@9 := copy max;
    var@7 := move var@8 < move var@9;
    if (move var@7) {
      var@11 := copy i;
      var@12 := copy j;
      var@10 := copy var@11 + copy var@12;
      switch (move var@10) {
        17: u32 => {
          continue 0
        }
        _ => {
          nop
        }
      };
      var@14 := copy i;
      s := copy s + copy var@14;
      j := copy j + 1: u32;
      break 1
    }
    else {
      break 0
    }
  };
  j := 0: u32;
  var@17 := copy i;
  s := copy s + copy var@17;
  i := copy i + 1: u32;
  continue 0
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 20: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  loop {
    var@8 := copy j;
    var@9 := copy max;
    var@7 := move var@8 < move var@9;
    if (move var@7) {
      var@11 := copy i;
      var@12 := copy j;
      var@10 := copy var@11 + copy var@12;
      switch (move var@10) {
        17: u32 => {
          continue 0
        }
        _ => {
          nop
        }
      };
      var@14 := copy i;
      s := copy s + copy var@14;
      j := copy j + 1: u32;
      break 1
    }
    else {
      break 0
    }
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 20: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := copy j;
  var@9 := copy max;
  var@7 := move var@8 < move var@9;
  if (move var@7) {
    var@11 := copy i;
    var@12 := copy j;
    var@10 := copy var@11 + copy var@12;
    switch (move var@10) {
      17: u32 => {
        continue 0
      }
      _ => {
        nop
      }
    };
    var@14 := copy i;
    s := copy s + copy var@14;
    j := copy j + 1: u32;
    break 1
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 20: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := copy j
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 20: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 20: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy j

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@9 := copy max;
  var@7 := move var@8 < move var@9;
  if (move var@7) {
    var@11 := copy i;
    var@12 := copy j;
    var@10 := copy var@11 + copy var@12;
    switch (move var@10) {
      17: u32 => {
        continue 0
      }
      _ => {
        nop
      }
    };
    var@14 := copy i;
    s := copy s + copy var@14;
    j := copy j + 1: u32;
    break 1
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 20: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> 0: u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@9 := copy max
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 20: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> 0: u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 20: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> 0: u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy max

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := move var@8 < move var@9;
  if (move var@7) {
    var@11 := copy i;
    var@12 := copy j;
    var@10 := copy var@11 + copy var@12;
    switch (move var@10) {
      17: u32 => {
        continue 0
      }
      _ => {
        nop
      }
    };
    var@14 := copy i;
    s := copy s + copy var@14;
    j := copy j + 1: u32;
    break 1
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 20: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> 0: u32 ;
  Some (var@9) -> 20: u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := move var@8 < move var@9
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 20: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> 0: u32 ;
  Some (var@9) -> 20: u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 20: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> 0: u32 ;
  Some (var@9) -> 20: u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
move var@8

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 20: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> 20: u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
move var@9

[[32mDebug[39m] 
**About to evaluate statement**: [
  if (move var@7) {
    var@11 := copy i;
    var@12 := copy j;
    var@10 := copy var@11 + copy var@12;
    switch (move var@10) {
      17: u32 => {
        continue 0
      }
      _ => {
        nop
      }
    };
    var@14 := copy i;
    s := copy s + copy var@14;
    j := copy j + 1: u32;
    break 1
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 20: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> true ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 20: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> true ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
move var@7

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@11 := copy i;
  var@12 := copy j;
  var@10 := copy var@11 + copy var@12;
  switch (move var@10) {
    17: u32 => {
      continue 0
    }
    _ => {
      nop
    }
  };
  var@14 := copy i;
  s := copy s + copy var@14;
  j := copy j + 1: u32;
  break 1
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 20: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@11 := copy i
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 20: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 20: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy i

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@12 := copy j;
  var@10 := copy var@11 + copy var@12;
  switch (move var@10) {
    17: u32 => {
      continue 0
    }
    _ => {
      nop
    }
  };
  var@14 := copy i;
  s := copy s + copy var@14;
  j := copy j + 1: u32;
  break 1
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 20: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@12 := copy j
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 20: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 20: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> â¥ : u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy j

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@10 := copy var@11 + copy var@12;
  switch (move var@10) {
    17: u32 => {
      continue 0
    }
    _ => {
      nop
    }
  };
  var@14 := copy i;
  s := copy s + copy var@14;
  j := copy j + 1: u32;
  break 1
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 20: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@10 := copy var@11 + copy var@12
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 20: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 20: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy var@11

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 20: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy var@12

[[32mDebug[39m] 
**About to evaluate statement**: [
  switch (move var@10) {
    17: u32 => {
      continue 0
    }
    _ => {
      nop
    }
  };
  var@14 := copy i;
  s := copy s + copy var@14;
  j := copy j + 1: u32;
  break 1
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 20: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  switch (move var@10) {
    17: u32 => {
      continue 0
    }
    _ => {
      nop
    }
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 20: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 20: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
move var@10

[[32mDebug[39m] 
**About to evaluate statement**: [
  nop
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 20: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@14 := copy i;
  s := copy s + copy var@14;
  j := copy j + 1: u32;
  break 1
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 20: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@14 := copy i
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 20: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 20: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> â¥ : u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy i

[[32mDebug[39m] 
**About to evaluate statement**: [
  s := copy s + copy var@14;
  j := copy j + 1: u32;
  break 1
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 20: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  s := copy s + copy var@14
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 20: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 20: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy s

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 20: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy var@14

[[32mDebug[39m] 
**About to evaluate statement**: [
  j := copy j + 1: u32;
  break 1
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 20: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  j := copy j + 1: u32
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 20: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 20: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
copy j

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 20: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
1: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  break 1
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 20: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  return
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 20: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] ctx_pop_frame:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 20: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 20: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> 1: u32 ;
  Some (var@12) -> 0: u32 ;
  Some (var@13) -> â¥ : (u32, bool) ;
  Some (var@14) -> 1: u32 ;
  Some (var@15) -> â¥ : (u32, bool) ;
  Some (var@16) -> â¥ : (u32, bool) ;
  Some (var@17) -> â¥ : u32 ;
  Some (var@18) -> â¥ : (u32, bool) ;
  Some (var@19) -> â¥ : (u32, bool) ;
}


- op:
move s

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@16 := copy x;
  var@15 := move var@16 == 1: u32;
  var@14 := Â¬ move var@15;
  assert(Â¬move var@14);
  x := move test_loop5(2: u32);
  var@20 := copy x;
  var@19 := move var@20 == 2: u32;
  var@18 := Â¬ move var@19;
  assert(Â¬move var@18);
  x := move test_loop6(2: u32);
  var@24 := copy x;
  var@23 := move var@24 == 2: u32;
  var@22 := Â¬ move var@23;
  assert(Â¬move var@22);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@16 := copy x
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}


- op:
copy x

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@15 := move var@16 == 1: u32;
  var@14 := Â¬ move var@15;
  assert(Â¬move var@14);
  x := move test_loop5(2: u32);
  var@20 := copy x;
  var@19 := move var@20 == 2: u32;
  var@18 := Â¬ move var@19;
  assert(Â¬move var@18);
  x := move test_loop6(2: u32);
  var@24 := copy x;
  var@23 := move var@24 == 2: u32;
  var@22 := Â¬ move var@23;
  assert(Â¬move var@22);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> 1: u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@15 := move var@16 == 1: u32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> 1: u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> 1: u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}


- op:
move var@16

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}


- op:
1: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@14 := Â¬ move var@15;
  assert(Â¬move var@14);
  x := move test_loop5(2: u32);
  var@20 := copy x;
  var@19 := move var@20 == 2: u32;
  var@18 := Â¬ move var@19;
  assert(Â¬move var@18);
  x := move test_loop6(2: u32);
  var@24 := copy x;
  var@23 := move var@24 == 2: u32;
  var@22 := Â¬ move var@23;
  assert(Â¬move var@22);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> true ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@14 := Â¬ move var@15
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> true ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> true ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}


- op:
move var@15

[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@14);
  x := move test_loop5(2: u32);
  var@20 := copy x;
  var@19 := move var@20 == 2: u32;
  var@18 := Â¬ move var@19;
  assert(Â¬move var@18);
  x := move test_loop6(2: u32);
  var@24 := copy x;
  var@23 := move var@24 == 2: u32;
  var@22 := Â¬ move var@23;
  assert(Â¬move var@22);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> false ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@14)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> false ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> false ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}


- op:
move var@14

[[32mDebug[39m] 
**About to evaluate statement**: [
  x := move test_loop5(2: u32);
  var@20 := copy x;
  var@19 := move var@20 == 2: u32;
  var@18 := Â¬ move var@19;
  assert(Â¬move var@18);
  x := move test_loop6(2: u32);
  var@24 := copy x;
  var@23 := move var@24 == 2: u32;
  var@22 := Â¬ move var@23;
  assert(Â¬move var@22);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  x := move test_loop5(2: u32)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}


- op:
2: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  i := 0: u32;
  j := 0: u32;
  s := 0: u32;
  loop {
    var@5 := copy i;
    var@6 := copy max;
    var@4 := move var@5 < move var@6;
    if (move var@4) {
      loop {
        var@8 := copy j;
        var@9 := copy max;
        var@7 := move var@8 < move var@9;
        if (move var@7) {
          var@10 := copy j;
          s := copy s + copy var@10;
          j := copy j + 1: u32;
          continue 0
        }
        else {
          break 0
        }
      };
      var@13 := copy i;
      s := copy s + copy var@13;
      i := copy i + 1: u32;
      continue 0
    }
    else {
      break 0
    }
  };
  return
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> â¥ : u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> â¥ : u32 ;
  Some (j) -> â¥ : u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  i := 0: u32
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> â¥ : u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> â¥ : u32 ;
  Some (j) -> â¥ : u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> â¥ : u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> â¥ : u32 ;
  Some (j) -> â¥ : u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}


- op:
0: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  j := 0: u32;
  s := 0: u32;
  loop {
    var@5 := copy i;
    var@6 := copy max;
    var@4 := move var@5 < move var@6;
    if (move var@4) {
      loop {
        var@8 := copy j;
        var@9 := copy max;
        var@7 := move var@8 < move var@9;
        if (move var@7) {
          var@10 := copy j;
          s := copy s + copy var@10;
          j := copy j + 1: u32;
          continue 0
        }
        else {
          break 0
        }
      };
      var@13 := copy i;
      s := copy s + copy var@13;
      i := copy i + 1: u32;
      continue 0
    }
    else {
      break 0
    }
  };
  return
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> â¥ : u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> â¥ : u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  j := 0: u32
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> â¥ : u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> â¥ : u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> â¥ : u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> â¥ : u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}


- op:
0: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  s := 0: u32;
  loop {
    var@5 := copy i;
    var@6 := copy max;
    var@4 := move var@5 < move var@6;
    if (move var@4) {
      loop {
        var@8 := copy j;
        var@9 := copy max;
        var@7 := move var@8 < move var@9;
        if (move var@7) {
          var@10 := copy j;
          s := copy s + copy var@10;
          j := copy j + 1: u32;
          continue 0
        }
        else {
          break 0
        }
      };
      var@13 := copy i;
      s := copy s + copy var@13;
      i := copy i + 1: u32;
      continue 0
    }
    else {
      break 0
    }
  };
  return
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> â¥ : u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  s := 0: u32
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> â¥ : u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> â¥ : u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}


- op:
0: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  loop {
    var@5 := copy i;
    var@6 := copy max;
    var@4 := move var@5 < move var@6;
    if (move var@4) {
      loop {
        var@8 := copy j;
        var@9 := copy max;
        var@7 := move var@8 < move var@9;
        if (move var@7) {
          var@10 := copy j;
          s := copy s + copy var@10;
          j := copy j + 1: u32;
          continue 0
        }
        else {
          break 0
        }
      };
      var@13 := copy i;
      s := copy s + copy var@13;
      i := copy i + 1: u32;
      continue 0
    }
    else {
      break 0
    }
  };
  return
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  loop {
    var@5 := copy i;
    var@6 := copy max;
    var@4 := move var@5 < move var@6;
    if (move var@4) {
      loop {
        var@8 := copy j;
        var@9 := copy max;
        var@7 := move var@8 < move var@9;
        if (move var@7) {
          var@10 := copy j;
          s := copy s + copy var@10;
          j := copy j + 1: u32;
          continue 0
        }
        else {
          break 0
        }
      };
      var@13 := copy i;
      s := copy s + copy var@13;
      i := copy i + 1: u32;
      continue 0
    }
    else {
      break 0
    }
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := copy i;
  var@6 := copy max;
  var@4 := move var@5 < move var@6;
  if (move var@4) {
    loop {
      var@8 := copy j;
      var@9 := copy max;
      var@7 := move var@8 < move var@9;
      if (move var@7) {
        var@10 := copy j;
        s := copy s + copy var@10;
        j := copy j + 1: u32;
        continue 0
      }
      else {
        break 0
      }
    };
    var@13 := copy i;
    s := copy s + copy var@13;
    i := copy i + 1: u32;
    continue 0
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := copy i
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}


- op:
copy i

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@6 := copy max;
  var@4 := move var@5 < move var@6;
  if (move var@4) {
    loop {
      var@8 := copy j;
      var@9 := copy max;
      var@7 := move var@8 < move var@9;
      if (move var@7) {
        var@10 := copy j;
        s := copy s + copy var@10;
        j := copy j + 1: u32;
        continue 0
      }
      else {
        break 0
      }
    };
    var@13 := copy i;
    s := copy s + copy var@13;
    i := copy i + 1: u32;
    continue 0
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> 0: u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@6 := copy max
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> 0: u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> 0: u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}


- op:
copy max

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := move var@5 < move var@6;
  if (move var@4) {
    loop {
      var@8 := copy j;
      var@9 := copy max;
      var@7 := move var@8 < move var@9;
      if (move var@7) {
        var@10 := copy j;
        s := copy s + copy var@10;
        j := copy j + 1: u32;
        continue 0
      }
      else {
        break 0
      }
    };
    var@13 := copy i;
    s := copy s + copy var@13;
    i := copy i + 1: u32;
    continue 0
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> 0: u32 ;
  Some (var@6) -> 2: u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := move var@5 < move var@6
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> 0: u32 ;
  Some (var@6) -> 2: u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> 0: u32 ;
  Some (var@6) -> 2: u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}


- op:
move var@5

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> 2: u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}


- op:
move var@6

[[32mDebug[39m] 
**About to evaluate statement**: [
  if (move var@4) {
    loop {
      var@8 := copy j;
      var@9 := copy max;
      var@7 := move var@8 < move var@9;
      if (move var@7) {
        var@10 := copy j;
        s := copy s + copy var@10;
        j := copy j + 1: u32;
        continue 0
      }
      else {
        break 0
      }
    };
    var@13 := copy i;
    s := copy s + copy var@13;
    i := copy i + 1: u32;
    continue 0
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> true ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> true ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}


- op:
move var@4

[[32mDebug[39m] 
**About to evaluate statement**: [
  loop {
    var@8 := copy j;
    var@9 := copy max;
    var@7 := move var@8 < move var@9;
    if (move var@7) {
      var@10 := copy j;
      s := copy s + copy var@10;
      j := copy j + 1: u32;
      continue 0
    }
    else {
      break 0
    }
  };
  var@13 := copy i;
  s := copy s + copy var@13;
  i := copy i + 1: u32;
  continue 0
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  loop {
    var@8 := copy j;
    var@9 := copy max;
    var@7 := move var@8 < move var@9;
    if (move var@7) {
      var@10 := copy j;
      s := copy s + copy var@10;
      j := copy j + 1: u32;
      continue 0
    }
    else {
      break 0
    }
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := copy j;
  var@9 := copy max;
  var@7 := move var@8 < move var@9;
  if (move var@7) {
    var@10 := copy j;
    s := copy s + copy var@10;
    j := copy j + 1: u32;
    continue 0
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := copy j
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}


- op:
copy j

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@9 := copy max;
  var@7 := move var@8 < move var@9;
  if (move var@7) {
    var@10 := copy j;
    s := copy s + copy var@10;
    j := copy j + 1: u32;
    continue 0
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> 0: u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@9 := copy max
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> 0: u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> 0: u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}


- op:
copy max

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := move var@8 < move var@9;
  if (move var@7) {
    var@10 := copy j;
    s := copy s + copy var@10;
    j := copy j + 1: u32;
    continue 0
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> 0: u32 ;
  Some (var@9) -> 2: u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := move var@8 < move var@9
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> 0: u32 ;
  Some (var@9) -> 2: u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> 0: u32 ;
  Some (var@9) -> 2: u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}


- op:
move var@8

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> 2: u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}


- op:
move var@9

[[32mDebug[39m] 
**About to evaluate statement**: [
  if (move var@7) {
    var@10 := copy j;
    s := copy s + copy var@10;
    j := copy j + 1: u32;
    continue 0
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> true ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> true ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}


- op:
move var@7

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@10 := copy j;
  s := copy s + copy var@10;
  j := copy j + 1: u32;
  continue 0
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@10 := copy j
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> â¥ : u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}


- op:
copy j

[[32mDebug[39m] 
**About to evaluate statement**: [
  s := copy s + copy var@10;
  j := copy j + 1: u32;
  continue 0
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 0: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  s := copy s + copy var@10
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 0: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 0: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}


- op:
copy s

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 0: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}


- op:
copy var@10

[[32mDebug[39m] 
**About to evaluate statement**: [
  j := copy j + 1: u32;
  continue 0
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 0: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  j := copy j + 1: u32
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 0: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 0: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}


- op:
copy j

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 0: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 0: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}


- op:
1: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  continue 0
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 0: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := copy j;
  var@9 := copy max;
  var@7 := move var@8 < move var@9;
  if (move var@7) {
    var@10 := copy j;
    s := copy s + copy var@10;
    j := copy j + 1: u32;
    continue 0
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 0: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := copy j
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 0: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 0: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}


- op:
copy j

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@9 := copy max;
  var@7 := move var@8 < move var@9;
  if (move var@7) {
    var@10 := copy j;
    s := copy s + copy var@10;
    j := copy j + 1: u32;
    continue 0
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> 1: u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 0: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@9 := copy max
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> 1: u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 0: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> 1: u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 0: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}


- op:
copy max

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := move var@8 < move var@9;
  if (move var@7) {
    var@10 := copy j;
    s := copy s + copy var@10;
    j := copy j + 1: u32;
    continue 0
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> 1: u32 ;
  Some (var@9) -> 2: u32 ;
  Some (var@10) -> 0: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := move var@8 < move var@9
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> 1: u32 ;
  Some (var@9) -> 2: u32 ;
  Some (var@10) -> 0: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> 1: u32 ;
  Some (var@9) -> 2: u32 ;
  Some (var@10) -> 0: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}


- op:
move var@8

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> 2: u32 ;
  Some (var@10) -> 0: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}


- op:
move var@9

[[32mDebug[39m] 
**About to evaluate statement**: [
  if (move var@7) {
    var@10 := copy j;
    s := copy s + copy var@10;
    j := copy j + 1: u32;
    continue 0
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> true ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 0: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> true ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 0: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}


- op:
move var@7

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@10 := copy j;
  s := copy s + copy var@10;
  j := copy j + 1: u32;
  continue 0
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 0: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@10 := copy j
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 0: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 0: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}


- op:
copy j

[[32mDebug[39m] 
**About to evaluate statement**: [
  s := copy s + copy var@10;
  j := copy j + 1: u32;
  continue 0
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  s := copy s + copy var@10
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}


- op:
copy s

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}


- op:
copy var@10

[[32mDebug[39m] 
**About to evaluate statement**: [
  j := copy j + 1: u32;
  continue 0
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  j := copy j + 1: u32
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}


- op:
copy j

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 1: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}


- op:
1: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  continue 0
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := copy j;
  var@9 := copy max;
  var@7 := move var@8 < move var@9;
  if (move var@7) {
    var@10 := copy j;
    s := copy s + copy var@10;
    j := copy j + 1: u32;
    continue 0
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := copy j
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}


- op:
copy j

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@9 := copy max;
  var@7 := move var@8 < move var@9;
  if (move var@7) {
    var@10 := copy j;
    s := copy s + copy var@10;
    j := copy j + 1: u32;
    continue 0
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> 2: u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@9 := copy max
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> 2: u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> 2: u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}


- op:
copy max

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := move var@8 < move var@9;
  if (move var@7) {
    var@10 := copy j;
    s := copy s + copy var@10;
    j := copy j + 1: u32;
    continue 0
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> 2: u32 ;
  Some (var@9) -> 2: u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := move var@8 < move var@9
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> 2: u32 ;
  Some (var@9) -> 2: u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> 2: u32 ;
  Some (var@9) -> 2: u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}


- op:
move var@8

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> 2: u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}


- op:
move var@9

[[32mDebug[39m] 
**About to evaluate statement**: [
  if (move var@7) {
    var@10 := copy j;
    s := copy s + copy var@10;
    j := copy j + 1: u32;
    continue 0
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> false ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> false ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}


- op:
move var@7

[[32mDebug[39m] 
**About to evaluate statement**: [
  break 0
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@13 := copy i;
  s := copy s + copy var@13;
  i := copy i + 1: u32;
  continue 0
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@13 := copy i
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> â¥ : u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}


- op:
copy i

[[32mDebug[39m] 
**About to evaluate statement**: [
  s := copy s + copy var@13;
  i := copy i + 1: u32;
  continue 0
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> 0: u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  s := copy s + copy var@13
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> 0: u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> 0: u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}


- op:
copy s

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> 0: u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}


- op:
copy var@13

[[32mDebug[39m] 
**About to evaluate statement**: [
  i := copy i + 1: u32;
  continue 0
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> 0: u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  i := copy i + 1: u32
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> 0: u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> 0: u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}


- op:
copy i

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> 0: u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}


- op:
1: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  continue 0
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> 0: u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := copy i;
  var@6 := copy max;
  var@4 := move var@5 < move var@6;
  if (move var@4) {
    loop {
      var@8 := copy j;
      var@9 := copy max;
      var@7 := move var@8 < move var@9;
      if (move var@7) {
        var@10 := copy j;
        s := copy s + copy var@10;
        j := copy j + 1: u32;
        continue 0
      }
      else {
        break 0
      }
    };
    var@13 := copy i;
    s := copy s + copy var@13;
    i := copy i + 1: u32;
    continue 0
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> 0: u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := copy i
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> 0: u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> 0: u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}


- op:
copy i

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@6 := copy max;
  var@4 := move var@5 < move var@6;
  if (move var@4) {
    loop {
      var@8 := copy j;
      var@9 := copy max;
      var@7 := move var@8 < move var@9;
      if (move var@7) {
        var@10 := copy j;
        s := copy s + copy var@10;
        j := copy j + 1: u32;
        continue 0
      }
      else {
        break 0
      }
    };
    var@13 := copy i;
    s := copy s + copy var@13;
    i := copy i + 1: u32;
    continue 0
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> 1: u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> 0: u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@6 := copy max
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> 1: u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> 0: u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> 1: u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> 0: u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}


- op:
copy max

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := move var@5 < move var@6;
  if (move var@4) {
    loop {
      var@8 := copy j;
      var@9 := copy max;
      var@7 := move var@8 < move var@9;
      if (move var@7) {
        var@10 := copy j;
        s := copy s + copy var@10;
        j := copy j + 1: u32;
        continue 0
      }
      else {
        break 0
      }
    };
    var@13 := copy i;
    s := copy s + copy var@13;
    i := copy i + 1: u32;
    continue 0
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> 1: u32 ;
  Some (var@6) -> 2: u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> 0: u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := move var@5 < move var@6
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> 1: u32 ;
  Some (var@6) -> 2: u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> 0: u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> 1: u32 ;
  Some (var@6) -> 2: u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> 0: u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}


- op:
move var@5

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> 2: u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> 0: u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}


- op:
move var@6

[[32mDebug[39m] 
**About to evaluate statement**: [
  if (move var@4) {
    loop {
      var@8 := copy j;
      var@9 := copy max;
      var@7 := move var@8 < move var@9;
      if (move var@7) {
        var@10 := copy j;
        s := copy s + copy var@10;
        j := copy j + 1: u32;
        continue 0
      }
      else {
        break 0
      }
    };
    var@13 := copy i;
    s := copy s + copy var@13;
    i := copy i + 1: u32;
    continue 0
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> true ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> 0: u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> true ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> 0: u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}


- op:
move var@4

[[32mDebug[39m] 
**About to evaluate statement**: [
  loop {
    var@8 := copy j;
    var@9 := copy max;
    var@7 := move var@8 < move var@9;
    if (move var@7) {
      var@10 := copy j;
      s := copy s + copy var@10;
      j := copy j + 1: u32;
      continue 0
    }
    else {
      break 0
    }
  };
  var@13 := copy i;
  s := copy s + copy var@13;
  i := copy i + 1: u32;
  continue 0
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> 0: u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  loop {
    var@8 := copy j;
    var@9 := copy max;
    var@7 := move var@8 < move var@9;
    if (move var@7) {
      var@10 := copy j;
      s := copy s + copy var@10;
      j := copy j + 1: u32;
      continue 0
    }
    else {
      break 0
    }
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> 0: u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := copy j;
  var@9 := copy max;
  var@7 := move var@8 < move var@9;
  if (move var@7) {
    var@10 := copy j;
    s := copy s + copy var@10;
    j := copy j + 1: u32;
    continue 0
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> 0: u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := copy j
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> 0: u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> 0: u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}


- op:
copy j

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@9 := copy max;
  var@7 := move var@8 < move var@9;
  if (move var@7) {
    var@10 := copy j;
    s := copy s + copy var@10;
    j := copy j + 1: u32;
    continue 0
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> 2: u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> 0: u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@9 := copy max
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> 2: u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> 0: u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> 2: u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> 0: u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}


- op:
copy max

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := move var@8 < move var@9;
  if (move var@7) {
    var@10 := copy j;
    s := copy s + copy var@10;
    j := copy j + 1: u32;
    continue 0
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> 2: u32 ;
  Some (var@9) -> 2: u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> 0: u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := move var@8 < move var@9
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> 2: u32 ;
  Some (var@9) -> 2: u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> 0: u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> 2: u32 ;
  Some (var@9) -> 2: u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> 0: u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}


- op:
move var@8

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> 2: u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> 0: u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}


- op:
move var@9

[[32mDebug[39m] 
**About to evaluate statement**: [
  if (move var@7) {
    var@10 := copy j;
    s := copy s + copy var@10;
    j := copy j + 1: u32;
    continue 0
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> false ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> 0: u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> false ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> 0: u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}


- op:
move var@7

[[32mDebug[39m] 
**About to evaluate statement**: [
  break 0
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> 0: u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@13 := copy i;
  s := copy s + copy var@13;
  i := copy i + 1: u32;
  continue 0
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> 0: u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@13 := copy i
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> 0: u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> 0: u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}


- op:
copy i

[[32mDebug[39m] 
**About to evaluate statement**: [
  s := copy s + copy var@13;
  i := copy i + 1: u32;
  continue 0
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> 1: u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  s := copy s + copy var@13
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> 1: u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> 1: u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}


- op:
copy s

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> 1: u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}


- op:
copy var@13

[[32mDebug[39m] 
**About to evaluate statement**: [
  i := copy i + 1: u32;
  continue 0
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 2: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> 1: u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  i := copy i + 1: u32
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 2: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> 1: u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 2: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> 1: u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}


- op:
copy i

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 2: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> 1: u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}


- op:
1: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  continue 0
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 2: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> 1: u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := copy i;
  var@6 := copy max;
  var@4 := move var@5 < move var@6;
  if (move var@4) {
    loop {
      var@8 := copy j;
      var@9 := copy max;
      var@7 := move var@8 < move var@9;
      if (move var@7) {
        var@10 := copy j;
        s := copy s + copy var@10;
        j := copy j + 1: u32;
        continue 0
      }
      else {
        break 0
      }
    };
    var@13 := copy i;
    s := copy s + copy var@13;
    i := copy i + 1: u32;
    continue 0
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 2: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> 1: u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := copy i
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 2: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> 1: u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 2: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> 1: u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}


- op:
copy i

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@6 := copy max;
  var@4 := move var@5 < move var@6;
  if (move var@4) {
    loop {
      var@8 := copy j;
      var@9 := copy max;
      var@7 := move var@8 < move var@9;
      if (move var@7) {
        var@10 := copy j;
        s := copy s + copy var@10;
        j := copy j + 1: u32;
        continue 0
      }
      else {
        break 0
      }
    };
    var@13 := copy i;
    s := copy s + copy var@13;
    i := copy i + 1: u32;
    continue 0
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 2: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> 2: u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> 1: u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@6 := copy max
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 2: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> 2: u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> 1: u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 2: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> 2: u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> 1: u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}


- op:
copy max

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := move var@5 < move var@6;
  if (move var@4) {
    loop {
      var@8 := copy j;
      var@9 := copy max;
      var@7 := move var@8 < move var@9;
      if (move var@7) {
        var@10 := copy j;
        s := copy s + copy var@10;
        j := copy j + 1: u32;
        continue 0
      }
      else {
        break 0
      }
    };
    var@13 := copy i;
    s := copy s + copy var@13;
    i := copy i + 1: u32;
    continue 0
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 2: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> 2: u32 ;
  Some (var@6) -> 2: u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> 1: u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := move var@5 < move var@6
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 2: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> 2: u32 ;
  Some (var@6) -> 2: u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> 1: u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 2: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> 2: u32 ;
  Some (var@6) -> 2: u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> 1: u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}


- op:
move var@5

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 2: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> 2: u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> 1: u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}


- op:
move var@6

[[32mDebug[39m] 
**About to evaluate statement**: [
  if (move var@4) {
    loop {
      var@8 := copy j;
      var@9 := copy max;
      var@7 := move var@8 < move var@9;
      if (move var@7) {
        var@10 := copy j;
        s := copy s + copy var@10;
        j := copy j + 1: u32;
        continue 0
      }
      else {
        break 0
      }
    };
    var@13 := copy i;
    s := copy s + copy var@13;
    i := copy i + 1: u32;
    continue 0
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 2: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> false ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> 1: u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 2: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> false ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> 1: u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}


- op:
move var@4

[[32mDebug[39m] 
**About to evaluate statement**: [
  break 0
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 2: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> 1: u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  return
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 2: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> 1: u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] ctx_pop_frame:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 2: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> 1: u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 2: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (j) -> 2: u32 ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : u32 ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : u32 ;
  Some (var@10) -> 1: u32 ;
  Some (var@11) -> â¥ : (u32, bool) ;
  Some (var@12) -> â¥ : (u32, bool) ;
  Some (var@13) -> 1: u32 ;
  Some (var@14) -> â¥ : (u32, bool) ;
  Some (var@15) -> â¥ : (u32, bool) ;
}


- op:
move s

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@20 := copy x;
  var@19 := move var@20 == 2: u32;
  var@18 := Â¬ move var@19;
  assert(Â¬move var@18);
  x := move test_loop6(2: u32);
  var@24 := copy x;
  var@23 := move var@24 == 2: u32;
  var@22 := Â¬ move var@23;
  assert(Â¬move var@22);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@20 := copy x
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}


- op:
copy x

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@19 := move var@20 == 2: u32;
  var@18 := Â¬ move var@19;
  assert(Â¬move var@18);
  x := move test_loop6(2: u32);
  var@24 := copy x;
  var@23 := move var@24 == 2: u32;
  var@22 := Â¬ move var@23;
  assert(Â¬move var@22);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> 2: u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@19 := move var@20 == 2: u32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> 2: u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> 2: u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}


- op:
move var@20

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}


- op:
2: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@18 := Â¬ move var@19;
  assert(Â¬move var@18);
  x := move test_loop6(2: u32);
  var@24 := copy x;
  var@23 := move var@24 == 2: u32;
  var@22 := Â¬ move var@23;
  assert(Â¬move var@22);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> true ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@18 := Â¬ move var@19
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> true ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> true ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}


- op:
move var@19

[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@18);
  x := move test_loop6(2: u32);
  var@24 := copy x;
  var@23 := move var@24 == 2: u32;
  var@22 := Â¬ move var@23;
  assert(Â¬move var@22);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> false ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@18)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> false ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> false ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}


- op:
move var@18

[[32mDebug[39m] 
**About to evaluate statement**: [
  x := move test_loop6(2: u32);
  var@24 := copy x;
  var@23 := move var@24 == 2: u32;
  var@22 := Â¬ move var@23;
  assert(Â¬move var@22);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  x := move test_loop6(2: u32)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}


- op:
2: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  i := 0: u32;
  s := 0: u32;
  loop {
    var@4 := copy i;
    var@5 := copy max;
    var@3 := move var@4 < move var@5;
    if (move var@3) {
      var@7 := copy i;
      var@6 := move var@7 > 3: u32;
      if (move var@6) {
        break 0
      }
      else {
        var@8 := copy i;
        s := copy s + copy var@8;
        i := copy i + 1: u32;
        continue 0
      }
    }
    else {
      break 0
    }
  };
  s := copy s + 1: u32;
  return
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> â¥ : u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> â¥ : u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  i := 0: u32
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> â¥ : u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> â¥ : u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> â¥ : u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> â¥ : u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}


- op:
0: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  s := 0: u32;
  loop {
    var@4 := copy i;
    var@5 := copy max;
    var@3 := move var@4 < move var@5;
    if (move var@3) {
      var@7 := copy i;
      var@6 := move var@7 > 3: u32;
      if (move var@6) {
        break 0
      }
      else {
        var@8 := copy i;
        s := copy s + copy var@8;
        i := copy i + 1: u32;
        continue 0
      }
    }
    else {
      break 0
    }
  };
  s := copy s + 1: u32;
  return
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> â¥ : u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  s := 0: u32
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> â¥ : u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> â¥ : u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}


- op:
0: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  loop {
    var@4 := copy i;
    var@5 := copy max;
    var@3 := move var@4 < move var@5;
    if (move var@3) {
      var@7 := copy i;
      var@6 := move var@7 > 3: u32;
      if (move var@6) {
        break 0
      }
      else {
        var@8 := copy i;
        s := copy s + copy var@8;
        i := copy i + 1: u32;
        continue 0
      }
    }
    else {
      break 0
    }
  };
  s := copy s + 1: u32;
  return
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  loop {
    var@4 := copy i;
    var@5 := copy max;
    var@3 := move var@4 < move var@5;
    if (move var@3) {
      var@7 := copy i;
      var@6 := move var@7 > 3: u32;
      if (move var@6) {
        break 0
      }
      else {
        var@8 := copy i;
        s := copy s + copy var@8;
        i := copy i + 1: u32;
        continue 0
      }
    }
    else {
      break 0
    }
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := copy i;
  var@5 := copy max;
  var@3 := move var@4 < move var@5;
  if (move var@3) {
    var@7 := copy i;
    var@6 := move var@7 > 3: u32;
    if (move var@6) {
      break 0
    }
    else {
      var@8 := copy i;
      s := copy s + copy var@8;
      i := copy i + 1: u32;
      continue 0
    }
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := copy i
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}


- op:
copy i

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := copy max;
  var@3 := move var@4 < move var@5;
  if (move var@3) {
    var@7 := copy i;
    var@6 := move var@7 > 3: u32;
    if (move var@6) {
      break 0
    }
    else {
      var@8 := copy i;
      s := copy s + copy var@8;
      i := copy i + 1: u32;
      continue 0
    }
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> 0: u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := copy max
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> 0: u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> 0: u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}


- op:
copy max

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@3 := move var@4 < move var@5;
  if (move var@3) {
    var@7 := copy i;
    var@6 := move var@7 > 3: u32;
    if (move var@6) {
      break 0
    }
    else {
      var@8 := copy i;
      s := copy s + copy var@8;
      i := copy i + 1: u32;
      continue 0
    }
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> 0: u32 ;
  Some (var@5) -> 2: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@3 := move var@4 < move var@5
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> 0: u32 ;
  Some (var@5) -> 2: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> 0: u32 ;
  Some (var@5) -> 2: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}


- op:
move var@4

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> 2: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}


- op:
move var@5

[[32mDebug[39m] 
**About to evaluate statement**: [
  if (move var@3) {
    var@7 := copy i;
    var@6 := move var@7 > 3: u32;
    if (move var@6) {
      break 0
    }
    else {
      var@8 := copy i;
      s := copy s + copy var@8;
      i := copy i + 1: u32;
      continue 0
    }
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> true ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> true ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}


- op:
move var@3

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := copy i;
  var@6 := move var@7 > 3: u32;
  if (move var@6) {
    break 0
  }
  else {
    var@8 := copy i;
    s := copy s + copy var@8;
    i := copy i + 1: u32;
    continue 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := copy i
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}


- op:
copy i

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@6 := move var@7 > 3: u32;
  if (move var@6) {
    break 0
  }
  else {
    var@8 := copy i;
    s := copy s + copy var@8;
    i := copy i + 1: u32;
    continue 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> 0: u32 ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@6 := move var@7 > 3: u32
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> 0: u32 ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> 0: u32 ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}


- op:
move var@7

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}


- op:
3: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  if (move var@6) {
    break 0
  }
  else {
    var@8 := copy i;
    s := copy s + copy var@8;
    i := copy i + 1: u32;
    continue 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> false ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> false ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}


- op:
move var@6

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := copy i;
  s := copy s + copy var@8;
  i := copy i + 1: u32;
  continue 0
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := copy i
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> â¥ : u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}


- op:
copy i

[[32mDebug[39m] 
**About to evaluate statement**: [
  s := copy s + copy var@8;
  i := copy i + 1: u32;
  continue 0
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> 0: u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  s := copy s + copy var@8
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> 0: u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> 0: u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}


- op:
copy s

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> 0: u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}


- op:
copy var@8

[[32mDebug[39m] 
**About to evaluate statement**: [
  i := copy i + 1: u32;
  continue 0
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> 0: u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  i := copy i + 1: u32
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> 0: u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> 0: u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}


- op:
copy i

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 0: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> 0: u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}


- op:
1: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  continue 0
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> 0: u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := copy i;
  var@5 := copy max;
  var@3 := move var@4 < move var@5;
  if (move var@3) {
    var@7 := copy i;
    var@6 := move var@7 > 3: u32;
    if (move var@6) {
      break 0
    }
    else {
      var@8 := copy i;
      s := copy s + copy var@8;
      i := copy i + 1: u32;
      continue 0
    }
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> 0: u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := copy i
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> 0: u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> 0: u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}


- op:
copy i

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := copy max;
  var@3 := move var@4 < move var@5;
  if (move var@3) {
    var@7 := copy i;
    var@6 := move var@7 > 3: u32;
    if (move var@6) {
      break 0
    }
    else {
      var@8 := copy i;
      s := copy s + copy var@8;
      i := copy i + 1: u32;
      continue 0
    }
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> 1: u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> 0: u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := copy max
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> 1: u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> 0: u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> 1: u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> 0: u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}


- op:
copy max

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@3 := move var@4 < move var@5;
  if (move var@3) {
    var@7 := copy i;
    var@6 := move var@7 > 3: u32;
    if (move var@6) {
      break 0
    }
    else {
      var@8 := copy i;
      s := copy s + copy var@8;
      i := copy i + 1: u32;
      continue 0
    }
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> 1: u32 ;
  Some (var@5) -> 2: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> 0: u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@3 := move var@4 < move var@5
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> 1: u32 ;
  Some (var@5) -> 2: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> 0: u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> 1: u32 ;
  Some (var@5) -> 2: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> 0: u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}


- op:
move var@4

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> 2: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> 0: u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}


- op:
move var@5

[[32mDebug[39m] 
**About to evaluate statement**: [
  if (move var@3) {
    var@7 := copy i;
    var@6 := move var@7 > 3: u32;
    if (move var@6) {
      break 0
    }
    else {
      var@8 := copy i;
      s := copy s + copy var@8;
      i := copy i + 1: u32;
      continue 0
    }
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> true ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> 0: u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> true ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> 0: u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}


- op:
move var@3

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := copy i;
  var@6 := move var@7 > 3: u32;
  if (move var@6) {
    break 0
  }
  else {
    var@8 := copy i;
    s := copy s + copy var@8;
    i := copy i + 1: u32;
    continue 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> 0: u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := copy i
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> 0: u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> 0: u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}


- op:
copy i

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@6 := move var@7 > 3: u32;
  if (move var@6) {
    break 0
  }
  else {
    var@8 := copy i;
    s := copy s + copy var@8;
    i := copy i + 1: u32;
    continue 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> 1: u32 ;
  Some (var@8) -> 0: u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@6 := move var@7 > 3: u32
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> 1: u32 ;
  Some (var@8) -> 0: u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> 1: u32 ;
  Some (var@8) -> 0: u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}


- op:
move var@7

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> 0: u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}


- op:
3: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  if (move var@6) {
    break 0
  }
  else {
    var@8 := copy i;
    s := copy s + copy var@8;
    i := copy i + 1: u32;
    continue 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> false ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> 0: u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> false ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> 0: u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}


- op:
move var@6

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := copy i;
  s := copy s + copy var@8;
  i := copy i + 1: u32;
  continue 0
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> 0: u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := copy i
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> 0: u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> 0: u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}


- op:
copy i

[[32mDebug[39m] 
**About to evaluate statement**: [
  s := copy s + copy var@8;
  i := copy i + 1: u32;
  continue 0
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> 1: u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  s := copy s + copy var@8
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> 1: u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> 1: u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}


- op:
copy s

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 0: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> 1: u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}


- op:
copy var@8

[[32mDebug[39m] 
**About to evaluate statement**: [
  i := copy i + 1: u32;
  continue 0
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> 1: u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  i := copy i + 1: u32
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> 1: u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> 1: u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}


- op:
copy i

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 1: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> 1: u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}


- op:
1: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  continue 0
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> 1: u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := copy i;
  var@5 := copy max;
  var@3 := move var@4 < move var@5;
  if (move var@3) {
    var@7 := copy i;
    var@6 := move var@7 > 3: u32;
    if (move var@6) {
      break 0
    }
    else {
      var@8 := copy i;
      s := copy s + copy var@8;
      i := copy i + 1: u32;
      continue 0
    }
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> 1: u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := copy i
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> 1: u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> 1: u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}


- op:
copy i

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := copy max;
  var@3 := move var@4 < move var@5;
  if (move var@3) {
    var@7 := copy i;
    var@6 := move var@7 > 3: u32;
    if (move var@6) {
      break 0
    }
    else {
      var@8 := copy i;
      s := copy s + copy var@8;
      i := copy i + 1: u32;
      continue 0
    }
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> 2: u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> 1: u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := copy max
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> 2: u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> 1: u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> 2: u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> 1: u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}


- op:
copy max

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@3 := move var@4 < move var@5;
  if (move var@3) {
    var@7 := copy i;
    var@6 := move var@7 > 3: u32;
    if (move var@6) {
      break 0
    }
    else {
      var@8 := copy i;
      s := copy s + copy var@8;
      i := copy i + 1: u32;
      continue 0
    }
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> 2: u32 ;
  Some (var@5) -> 2: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> 1: u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@3 := move var@4 < move var@5
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> 2: u32 ;
  Some (var@5) -> 2: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> 1: u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> 2: u32 ;
  Some (var@5) -> 2: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> 1: u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}


- op:
move var@4

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> 2: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> 1: u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}


- op:
move var@5

[[32mDebug[39m] 
**About to evaluate statement**: [
  if (move var@3) {
    var@7 := copy i;
    var@6 := move var@7 > 3: u32;
    if (move var@6) {
      break 0
    }
    else {
      var@8 := copy i;
      s := copy s + copy var@8;
      i := copy i + 1: u32;
      continue 0
    }
  }
  else {
    break 0
  }
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (var@3) -> false ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> 1: u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (var@3) -> false ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> 1: u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}


- op:
move var@3

[[32mDebug[39m] 
**About to evaluate statement**: [
  break 0
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> 1: u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  s := copy s + 1: u32;
  return
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> 1: u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  s := copy s + 1: u32
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> 1: u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> 1: u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}


- op:
copy s

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 1: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> 1: u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}


- op:
1: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  return
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 2: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> 1: u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] ctx_pop_frame:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 2: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> 1: u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}

# Frame 1:
{
  Some (s) -> 2: u32 ;
  Some (max) -> 2: u32 ;
  Some (i) -> 2: u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : u32 ;
  Some (var@8) -> 1: u32 ;
  Some (var@9) -> â¥ : (u32, bool) ;
  Some (var@10) -> â¥ : (u32, bool) ;
  Some (var@11) -> â¥ : (u32, bool) ;
}


- op:
move s

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@24 := copy x;
  var@23 := move var@24 == 2: u32;
  var@22 := Â¬ move var@23;
  assert(Â¬move var@22);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@24 := copy x
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}


- op:
copy x

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@23 := move var@24 == 2: u32;
  var@22 := Â¬ move var@23;
  assert(Â¬move var@22);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> 2: u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@23 := move var@24 == 2: u32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> 2: u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> 2: u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}


- op:
move var@24

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}


- op:
2: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@22 := Â¬ move var@23;
  assert(Â¬move var@22);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> true ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@22 := Â¬ move var@23
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> true ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> true ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}


- op:
move var@23

[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@22);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@22) -> false ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@22)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@22) -> false ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@22) -> false ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}


- op:
move var@22

[[32mDebug[39m] 
**About to evaluate statement**: [
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> 3: u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> 1: u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> 2: u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 0: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 20: u32 ;
  None -> 1: u32 ;
  None -> 1: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> 0: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : u32 ;
  None -> 2: u32 ;
  None -> 2: u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> â¥ : u32 ;
  None -> â¥ : bool ;
  None -> â¥ : u32 ;
  None -> 1: u32 ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
  None -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] test_unit_function: id_mut_mut_test1
[[32mDebug[39m] 
**About to evaluate statement**: [
  x := 0: i32;
  px := &mut x;
  ppx := &mut px;
  var@5 := &two-phase *(ppx);
  ppy := move id_mut_mut<i32>(move var@5);
  *(*(ppy)) := 1: i32;
  var@8 := copy *(px);
  var@7 := move var@8 == 1: i32;
  var@6 := Â¬ move var@7;
  assert(Â¬move var@6);
  var@11 := copy x;
  var@10 := move var@11 == 1: i32;
  var@9 := Â¬ move var@10;
  assert(Â¬move var@9);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  x := 0: i32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
}


- op:
0: i32

[[32mDebug[39m] 
**About to evaluate statement**: [
  px := &mut x;
  ppx := &mut px;
  var@5 := &two-phase *(ppx);
  ppy := move id_mut_mut<i32>(move var@5);
  *(*(ppy)) := 1: i32;
  var@8 := copy *(px);
  var@7 := move var@8 == 1: i32;
  var@6 := Â¬ move var@7;
  assert(Â¬move var@6);
  var@11 := copy x;
  var@10 := move var@11 == 1: i32;
  var@9 := Â¬ move var@10;
  assert(Â¬move var@9);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  px := &mut x
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  ppx := &mut px;
  var@5 := &two-phase *(ppx);
  ppy := move id_mut_mut<i32>(move var@5);
  *(*(ppy)) := 1: i32;
  var@8 := copy *(px);
  var@7 := move var@8 == 1: i32;
  var@6 := Â¬ move var@7;
  assert(Â¬move var@6);
  var@11 := copy x;
  var@10 := move var@11 == 1: i32;
  var@9 := Â¬ move var@10;
  assert(Â¬move var@9);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@0 (0: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  ppx := &mut px
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@0 (0: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := &two-phase *(ppx);
  ppy := move id_mut_mut<i32>(move var@5);
  *(*(ppy)) := 1: i32;
  var@8 := copy *(px);
  var@7 := move var@8 == 1: i32;
  var@6 := Â¬ move var@7;
  assert(Â¬move var@6);
  var@11 := copy x;
  var@10 := move var@11 == 1: i32;
  var@9 := Â¬ move var@10;
  assert(Â¬move var@9);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (&mut@0 (0: i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := &two-phase *(ppx)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (&mut@0 (0: i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  ppy := move id_mut_mut<i32>(move var@5);
  *(*(ppy)) := 1: i32;
  var@8 := copy *(px);
  var@7 := move var@8 == 1: i32;
  var@6 := Â¬ move var@7;
  assert(Â¬move var@6);
  var@11 := copy x;
  var@10 := move var@11 == 1: i32;
  var@9 := Â¬ move var@10;
  assert(Â¬move var@9);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (@shared_loan({2}, &mut@0 (0: i32))) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> âinactivated_mut@2â ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  ppy := move id_mut_mut<i32>(move var@5)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (@shared_loan({2}, &mut@0 (0: i32))) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> âinactivated_mut@2â ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
}



[[32mDebug[39m] activate_inactivated_mut_borrow: resulting value:
&mut@0 (0: i32)
[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> &mut@2 (&mut@0 (0: i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
}


- op:
move var@5

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@2 := &mut *(x);
  var@0 := &mut *(var@2);
  return
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (x) -> &mut@2 (&mut@0 (0: i32)) ;
  Some (var@2) -> â¥ : &'_ mut (&'_ mut (i32)) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@2 := &mut *(x)
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (x) -> &mut@2 (&mut@0 (0: i32)) ;
  Some (var@2) -> â¥ : &'_ mut (&'_ mut (i32)) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@0 := &mut *(var@2);
  return
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (x) -> &mut@2 (âmut@3â) ;
  Some (var@2) -> &mut@3 (&mut@0 (0: i32)) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@0 := &mut *(var@2)
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (x) -> &mut@2 (âmut@3â) ;
  Some (var@2) -> &mut@3 (&mut@0 (0: i32)) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  return
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
}

# Frame 1:
{
  Some (var@0) -> &mut@4 (&mut@0 (0: i32)) ;
  Some (x) -> &mut@2 (âmut@3â) ;
  Some (var@2) -> &mut@3 (âmut@4â) ;
}



[[32mDebug[39m] ctx_pop_frame:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
}

# Frame 1:
{
  Some (var@0) -> &mut@4 (&mut@0 (0: i32)) ;
  Some (x) -> &mut@2 (âmut@3â) ;
  Some (var@2) -> &mut@3 (âmut@4â) ;
}

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
}

# Frame 1:
{
  Some (var@0) -> &mut@4 (&mut@0 (0: i32)) ;
  Some (x) -> &mut@2 (âmut@3â) ;
  Some (var@2) -> &mut@3 (âmut@4â) ;
}


- op:
move var@0

[[32mDebug[39m] 
**About to evaluate statement**: [
  *(*(ppy)) := 1: i32;
  var@8 := copy *(px);
  var@7 := move var@8 == 1: i32;
  var@6 := Â¬ move var@7;
  assert(Â¬move var@6);
  var@11 := copy x;
  var@10 := move var@11 == 1: i32;
  var@9 := Â¬ move var@10;
  assert(Â¬move var@9);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@4 (&mut@0 (0: i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  *(*(ppy)) := 1: i32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@4 (&mut@0 (0: i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@4 (&mut@0 (0: i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
}


- op:
1: i32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := copy *(px);
  var@7 := move var@8 == 1: i32;
  var@6 := Â¬ move var@7;
  assert(Â¬move var@6);
  var@11 := copy x;
  var@10 := move var@11 == 1: i32;
  var@9 := Â¬ move var@10;
  assert(Â¬move var@9);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@4 (&mut@0 (1: i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := copy *(px)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@4 (&mut@0 (1: i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@4 (&mut@0 (1: i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
}


- op:
copy *(px)

[[32mDebug[39m] end borrow: 1:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@4 (&mut@0 (1: i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
}

[[32mDebug[39m] end borrow: 1: found outer borrows/abs:(InterpreterBorrowsCore.InnerLoans (InterpreterBorrowsCore.Borrow 2))
[[32mDebug[39m] end borrow: 2:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@4 (&mut@0 (1: i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
}

[[32mDebug[39m] end borrow: 2: found outer borrows/abs:(InterpreterBorrowsCore.InnerLoans (InterpreterBorrowsCore.Borrow 3))
[[32mDebug[39m] end borrow: 3:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@4 (&mut@0 (1: i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
}

[[32mDebug[39m] end borrow: 3: found outer borrows/abs:(InterpreterBorrowsCore.InnerLoans (InterpreterBorrowsCore.Borrow 4))
[[32mDebug[39m] end borrow: 4:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@4 (&mut@0 (1: i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
}

[[32mDebug[39m] give_back:
- bid: 4
- content: &mut@4 (&mut@0 (1: i32))
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
}


[[32mDebug[39m] give_back_value:
- bid: 4
- value: &mut@0 (1: i32)
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
}


[[32mDebug[39m] end borrow: 3:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (&mut@0 (1: i32)) ;
}

[[32mDebug[39m] give_back:
- bid: 3
- content: &mut@3 (&mut@0 (1: i32))
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}


[[32mDebug[39m] give_back_value:
- bid: 3
- value: &mut@0 (1: i32)
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}


[[32mDebug[39m] end borrow: 2:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (&mut@0 (1: i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}

[[32mDebug[39m] give_back:
- bid: 2
- content: &mut@2 (&mut@0 (1: i32))
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}


[[32mDebug[39m] give_back_value:
- bid: 2
- value: &mut@0 (1: i32)
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}


[[32mDebug[39m] end borrow: 1:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (&mut@0 (1: i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}

[[32mDebug[39m] give_back:
- bid: 1
- content: &mut@1 (&mut@0 (1: i32))
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}


[[32mDebug[39m] give_back_value:
- bid: 1
- value: &mut@0 (1: i32)
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}


[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := move var@8 == 1: i32;
  var@6 := Â¬ move var@7;
  assert(Â¬move var@6);
  var@11 := copy x;
  var@10 := move var@11 == 1: i32;
  var@9 := Â¬ move var@10;
  assert(Â¬move var@9);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@0 (1: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> 1: i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := move var@8 == 1: i32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@0 (1: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> 1: i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@0 (1: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> 1: i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}


- op:
move var@8

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@0 (1: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}


- op:
1: i32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@6 := Â¬ move var@7;
  assert(Â¬move var@6);
  var@11 := copy x;
  var@10 := move var@11 == 1: i32;
  var@9 := Â¬ move var@10;
  assert(Â¬move var@9);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@0 (1: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> true ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@6 := Â¬ move var@7
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@0 (1: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> true ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@0 (1: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> true ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}


- op:
move var@7

[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@6);
  var@11 := copy x;
  var@10 := move var@11 == 1: i32;
  var@9 := Â¬ move var@10;
  assert(Â¬move var@9);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@0 (1: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> false ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@6)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@0 (1: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> false ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@0 (1: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> false ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}


- op:
move var@6

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@11 := copy x;
  var@10 := move var@11 == 1: i32;
  var@9 := Â¬ move var@10;
  assert(Â¬move var@9);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@0 (1: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@11 := copy x
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@0 (1: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@0 (1: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}


- op:
copy x

[[32mDebug[39m] end borrow: 0:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@0 (1: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}

[[32mDebug[39m] give_back:
- bid: 0
- content: &mut@0 (1: i32)
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}


[[32mDebug[39m] give_back_value:
- bid: 0
- value: 1: i32
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}


[[32mDebug[39m] 
**About to evaluate statement**: [
  var@10 := move var@11 == 1: i32;
  var@9 := Â¬ move var@10;
  assert(Â¬move var@9);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> 1: i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@10 := move var@11 == 1: i32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> 1: i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> 1: i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}


- op:
move var@11

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}


- op:
1: i32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@9 := Â¬ move var@10;
  assert(Â¬move var@9);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> true ;
  Some (var@11) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@9 := Â¬ move var@10
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> true ;
  Some (var@11) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> true ;
  Some (var@11) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}


- op:
move var@10

[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@9);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> false ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@9)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> false ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> false ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}


- op:
move var@9

[[32mDebug[39m] 
**About to evaluate statement**: [
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}



[[32mDebug[39m] test_unit_function: id_mut_mut_test2
[[32mDebug[39m] 
**About to evaluate statement**: [
  x := 0: i32;
  px := &mut x;
  ppx := &mut px;
  var@5 := &two-phase *(ppx);
  ppy := move id_mut_mut<i32>(move var@5);
  *(*(ppy)) := 1: i32;
  y := 2: i32;
  py := &mut y;
  var@8 := &mut *(py);
  *(ppy) := move var@8;
  var@11 := copy *(px);
  var@10 := move var@11 == 2: i32;
  var@9 := Â¬ move var@10;
  assert(Â¬move var@9);
  *(px) := 3: i32;
  var@14 := copy x;
  var@13 := move var@14 == 1: i32;
  var@12 := Â¬ move var@13;
  assert(Â¬move var@12);
  var@17 := copy y;
  var@16 := move var@17 == 3: i32;
  var@15 := Â¬ move var@16;
  assert(Â¬move var@15);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> â¥ : i32 ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  x := 0: i32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> â¥ : i32 ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> â¥ : i32 ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
}


- op:
0: i32

[[32mDebug[39m] 
**About to evaluate statement**: [
  px := &mut x;
  ppx := &mut px;
  var@5 := &two-phase *(ppx);
  ppy := move id_mut_mut<i32>(move var@5);
  *(*(ppy)) := 1: i32;
  y := 2: i32;
  py := &mut y;
  var@8 := &mut *(py);
  *(ppy) := move var@8;
  var@11 := copy *(px);
  var@10 := move var@11 == 2: i32;
  var@9 := Â¬ move var@10;
  assert(Â¬move var@9);
  *(px) := 3: i32;
  var@14 := copy x;
  var@13 := move var@14 == 1: i32;
  var@12 := Â¬ move var@13;
  assert(Â¬move var@12);
  var@17 := copy y;
  var@16 := move var@17 == 3: i32;
  var@15 := Â¬ move var@16;
  assert(Â¬move var@15);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> â¥ : i32 ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  px := &mut x
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> â¥ : i32 ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  ppx := &mut px;
  var@5 := &two-phase *(ppx);
  ppy := move id_mut_mut<i32>(move var@5);
  *(*(ppy)) := 1: i32;
  y := 2: i32;
  py := &mut y;
  var@8 := &mut *(py);
  *(ppy) := move var@8;
  var@11 := copy *(px);
  var@10 := move var@11 == 2: i32;
  var@9 := Â¬ move var@10;
  assert(Â¬move var@9);
  *(px) := 3: i32;
  var@14 := copy x;
  var@13 := move var@14 == 1: i32;
  var@12 := Â¬ move var@13;
  assert(Â¬move var@12);
  var@17 := copy y;
  var@16 := move var@17 == 3: i32;
  var@15 := Â¬ move var@16;
  assert(Â¬move var@15);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@0 (0: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> â¥ : i32 ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  ppx := &mut px
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@0 (0: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> â¥ : i32 ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := &two-phase *(ppx);
  ppy := move id_mut_mut<i32>(move var@5);
  *(*(ppy)) := 1: i32;
  y := 2: i32;
  py := &mut y;
  var@8 := &mut *(py);
  *(ppy) := move var@8;
  var@11 := copy *(px);
  var@10 := move var@11 == 2: i32;
  var@9 := Â¬ move var@10;
  assert(Â¬move var@9);
  *(px) := 3: i32;
  var@14 := copy x;
  var@13 := move var@14 == 1: i32;
  var@12 := Â¬ move var@13;
  assert(Â¬move var@12);
  var@17 := copy y;
  var@16 := move var@17 == 3: i32;
  var@15 := Â¬ move var@16;
  assert(Â¬move var@15);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (&mut@0 (0: i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> â¥ : i32 ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := &two-phase *(ppx)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (&mut@0 (0: i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> â¥ : i32 ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  ppy := move id_mut_mut<i32>(move var@5);
  *(*(ppy)) := 1: i32;
  y := 2: i32;
  py := &mut y;
  var@8 := &mut *(py);
  *(ppy) := move var@8;
  var@11 := copy *(px);
  var@10 := move var@11 == 2: i32;
  var@9 := Â¬ move var@10;
  assert(Â¬move var@9);
  *(px) := 3: i32;
  var@14 := copy x;
  var@13 := move var@14 == 1: i32;
  var@12 := Â¬ move var@13;
  assert(Â¬move var@12);
  var@17 := copy y;
  var@16 := move var@17 == 3: i32;
  var@15 := Â¬ move var@16;
  assert(Â¬move var@15);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (@shared_loan({2}, &mut@0 (0: i32))) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> âinactivated_mut@2â ;
  Some (y) -> â¥ : i32 ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  ppy := move id_mut_mut<i32>(move var@5)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (@shared_loan({2}, &mut@0 (0: i32))) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> âinactivated_mut@2â ;
  Some (y) -> â¥ : i32 ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
}



[[32mDebug[39m] activate_inactivated_mut_borrow: resulting value:
&mut@0 (0: i32)
[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> &mut@2 (&mut@0 (0: i32)) ;
  Some (y) -> â¥ : i32 ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
}


- op:
move var@5

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@2 := &mut *(x);
  var@0 := &mut *(var@2);
  return
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> â¥ : i32 ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (x) -> &mut@2 (&mut@0 (0: i32)) ;
  Some (var@2) -> â¥ : &'_ mut (&'_ mut (i32)) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@2 := &mut *(x)
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> â¥ : i32 ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (x) -> &mut@2 (&mut@0 (0: i32)) ;
  Some (var@2) -> â¥ : &'_ mut (&'_ mut (i32)) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@0 := &mut *(var@2);
  return
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> â¥ : i32 ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (x) -> &mut@2 (âmut@3â) ;
  Some (var@2) -> &mut@3 (&mut@0 (0: i32)) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@0 := &mut *(var@2)
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> â¥ : i32 ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (x) -> &mut@2 (âmut@3â) ;
  Some (var@2) -> &mut@3 (&mut@0 (0: i32)) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  return
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> â¥ : i32 ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
}

# Frame 1:
{
  Some (var@0) -> &mut@4 (&mut@0 (0: i32)) ;
  Some (x) -> &mut@2 (âmut@3â) ;
  Some (var@2) -> &mut@3 (âmut@4â) ;
}



[[32mDebug[39m] ctx_pop_frame:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> â¥ : i32 ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
}

# Frame 1:
{
  Some (var@0) -> &mut@4 (&mut@0 (0: i32)) ;
  Some (x) -> &mut@2 (âmut@3â) ;
  Some (var@2) -> &mut@3 (âmut@4â) ;
}

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> â¥ : i32 ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
}

# Frame 1:
{
  Some (var@0) -> &mut@4 (&mut@0 (0: i32)) ;
  Some (x) -> &mut@2 (âmut@3â) ;
  Some (var@2) -> &mut@3 (âmut@4â) ;
}


- op:
move var@0

[[32mDebug[39m] 
**About to evaluate statement**: [
  *(*(ppy)) := 1: i32;
  y := 2: i32;
  py := &mut y;
  var@8 := &mut *(py);
  *(ppy) := move var@8;
  var@11 := copy *(px);
  var@10 := move var@11 == 2: i32;
  var@9 := Â¬ move var@10;
  assert(Â¬move var@9);
  *(px) := 3: i32;
  var@14 := copy x;
  var@13 := move var@14 == 1: i32;
  var@12 := Â¬ move var@13;
  assert(Â¬move var@12);
  var@17 := copy y;
  var@16 := move var@17 == 3: i32;
  var@15 := Â¬ move var@16;
  assert(Â¬move var@15);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@4 (&mut@0 (0: i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> â¥ : i32 ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  *(*(ppy)) := 1: i32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@4 (&mut@0 (0: i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> â¥ : i32 ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@4 (&mut@0 (0: i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> â¥ : i32 ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
}


- op:
1: i32

[[32mDebug[39m] 
**About to evaluate statement**: [
  y := 2: i32;
  py := &mut y;
  var@8 := &mut *(py);
  *(ppy) := move var@8;
  var@11 := copy *(px);
  var@10 := move var@11 == 2: i32;
  var@9 := Â¬ move var@10;
  assert(Â¬move var@9);
  *(px) := 3: i32;
  var@14 := copy x;
  var@13 := move var@14 == 1: i32;
  var@12 := Â¬ move var@13;
  assert(Â¬move var@12);
  var@17 := copy y;
  var@16 := move var@17 == 3: i32;
  var@15 := Â¬ move var@16;
  assert(Â¬move var@15);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@4 (&mut@0 (1: i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> â¥ : i32 ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  y := 2: i32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@4 (&mut@0 (1: i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> â¥ : i32 ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@4 (&mut@0 (1: i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> â¥ : i32 ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
}


- op:
2: i32

[[32mDebug[39m] 
**About to evaluate statement**: [
  py := &mut y;
  var@8 := &mut *(py);
  *(ppy) := move var@8;
  var@11 := copy *(px);
  var@10 := move var@11 == 2: i32;
  var@9 := Â¬ move var@10;
  assert(Â¬move var@9);
  *(px) := 3: i32;
  var@14 := copy x;
  var@13 := move var@14 == 1: i32;
  var@12 := Â¬ move var@13;
  assert(Â¬move var@12);
  var@17 := copy y;
  var@16 := move var@17 == 3: i32;
  var@15 := Â¬ move var@16;
  assert(Â¬move var@15);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@4 (&mut@0 (1: i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> 2: i32 ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  py := &mut y
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@4 (&mut@0 (1: i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> 2: i32 ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := &mut *(py);
  *(ppy) := move var@8;
  var@11 := copy *(px);
  var@10 := move var@11 == 2: i32;
  var@9 := Â¬ move var@10;
  assert(Â¬move var@9);
  *(px) := 3: i32;
  var@14 := copy x;
  var@13 := move var@14 == 1: i32;
  var@12 := Â¬ move var@13;
  assert(Â¬move var@12);
  var@17 := copy y;
  var@16 := move var@17 == 3: i32;
  var@15 := Â¬ move var@16;
  assert(Â¬move var@15);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@4 (&mut@0 (1: i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (2: i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := &mut *(py)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@4 (&mut@0 (1: i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (2: i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  *(ppy) := move var@8;
  var@11 := copy *(px);
  var@10 := move var@11 == 2: i32;
  var@9 := Â¬ move var@10;
  assert(Â¬move var@9);
  *(px) := 3: i32;
  var@14 := copy x;
  var@13 := move var@14 == 1: i32;
  var@12 := Â¬ move var@13;
  assert(Â¬move var@12);
  var@17 := copy y;
  var@16 := move var@17 == 3: i32;
  var@15 := Â¬ move var@16;
  assert(Â¬move var@15);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@4 (&mut@0 (1: i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> &mut@6 (2: i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  *(ppy) := move var@8
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@4 (&mut@0 (1: i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> &mut@6 (2: i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@4 (&mut@0 (1: i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> &mut@6 (2: i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
}


- op:
move var@8

[[32mDebug[39m] end borrow: 0:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@4 (â¥ : &'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
  None -> &mut@6 (2: i32) ;
  None -> &mut@0 (1: i32) ;
}

[[32mDebug[39m] give_back:
- bid: 0
- content: &mut@0 (1: i32)
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@4 (â¥ : &'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
  None -> &mut@6 (2: i32) ;
  None -> â¥ : &'_ mut (i32) ;
}


[[32mDebug[39m] give_back_value:
- bid: 0
- value: 1: i32
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@4 (â¥ : &'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
  None -> &mut@6 (2: i32) ;
  None -> â¥ : &'_ mut (i32) ;
}


[[32mDebug[39m] 
**About to evaluate statement**: [
  var@11 := copy *(px);
  var@10 := move var@11 == 2: i32;
  var@9 := Â¬ move var@10;
  assert(Â¬move var@9);
  *(px) := 3: i32;
  var@14 := copy x;
  var@13 := move var@14 == 1: i32;
  var@12 := Â¬ move var@13;
  assert(Â¬move var@12);
  var@17 := copy y;
  var@16 := move var@17 == 3: i32;
  var@15 := Â¬ move var@16;
  assert(Â¬move var@15);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@4 (&mut@6 (2: i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@11 := copy *(px)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@4 (&mut@6 (2: i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@4 (&mut@6 (2: i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
}


- op:
copy *(px)

[[32mDebug[39m] end borrow: 1:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@4 (&mut@6 (2: i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
}

[[32mDebug[39m] end borrow: 1: found outer borrows/abs:(InterpreterBorrowsCore.InnerLoans (InterpreterBorrowsCore.Borrow 2))
[[32mDebug[39m] end borrow: 2:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@4 (&mut@6 (2: i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
}

[[32mDebug[39m] end borrow: 2: found outer borrows/abs:(InterpreterBorrowsCore.InnerLoans (InterpreterBorrowsCore.Borrow 3))
[[32mDebug[39m] end borrow: 3:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@4 (&mut@6 (2: i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
}

[[32mDebug[39m] end borrow: 3: found outer borrows/abs:(InterpreterBorrowsCore.InnerLoans (InterpreterBorrowsCore.Borrow 4))
[[32mDebug[39m] end borrow: 4:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@4 (&mut@6 (2: i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
}

[[32mDebug[39m] give_back:
- bid: 4
- content: &mut@4 (&mut@6 (2: i32))
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
}


[[32mDebug[39m] give_back_value:
- bid: 4
- value: &mut@6 (2: i32)
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
}


[[32mDebug[39m] end borrow: 3:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (&mut@6 (2: i32)) ;
}

[[32mDebug[39m] give_back:
- bid: 3
- content: &mut@3 (&mut@6 (2: i32))
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}


[[32mDebug[39m] give_back_value:
- bid: 3
- value: &mut@6 (2: i32)
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}


[[32mDebug[39m] end borrow: 2:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (&mut@6 (2: i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}

[[32mDebug[39m] give_back:
- bid: 2
- content: &mut@2 (&mut@6 (2: i32))
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}


[[32mDebug[39m] give_back_value:
- bid: 2
- value: &mut@6 (2: i32)
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}


[[32mDebug[39m] end borrow: 1:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (&mut@6 (2: i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}

[[32mDebug[39m] give_back:
- bid: 1
- content: &mut@1 (&mut@6 (2: i32))
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}


[[32mDebug[39m] give_back_value:
- bid: 1
- value: &mut@6 (2: i32)
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}


[[32mDebug[39m] 
**About to evaluate statement**: [
  var@10 := move var@11 == 2: i32;
  var@9 := Â¬ move var@10;
  assert(Â¬move var@9);
  *(px) := 3: i32;
  var@14 := copy x;
  var@13 := move var@14 == 1: i32;
  var@12 := Â¬ move var@13;
  assert(Â¬move var@12);
  var@17 := copy y;
  var@16 := move var@17 == 3: i32;
  var@15 := Â¬ move var@16;
  assert(Â¬move var@15);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> &mut@6 (2: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> 2: i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@10 := move var@11 == 2: i32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> &mut@6 (2: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> 2: i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> &mut@6 (2: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> 2: i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}


- op:
move var@11

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> &mut@6 (2: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}


- op:
2: i32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@9 := Â¬ move var@10;
  assert(Â¬move var@9);
  *(px) := 3: i32;
  var@14 := copy x;
  var@13 := move var@14 == 1: i32;
  var@12 := Â¬ move var@13;
  assert(Â¬move var@12);
  var@17 := copy y;
  var@16 := move var@17 == 3: i32;
  var@15 := Â¬ move var@16;
  assert(Â¬move var@15);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> &mut@6 (2: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> true ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@9 := Â¬ move var@10
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> &mut@6 (2: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> true ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> &mut@6 (2: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> true ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}


- op:
move var@10

[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@9);
  *(px) := 3: i32;
  var@14 := copy x;
  var@13 := move var@14 == 1: i32;
  var@12 := Â¬ move var@13;
  assert(Â¬move var@12);
  var@17 := copy y;
  var@16 := move var@17 == 3: i32;
  var@15 := Â¬ move var@16;
  assert(Â¬move var@15);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> &mut@6 (2: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> false ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@9)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> &mut@6 (2: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> false ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> &mut@6 (2: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> false ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}


- op:
move var@9

[[32mDebug[39m] 
**About to evaluate statement**: [
  *(px) := 3: i32;
  var@14 := copy x;
  var@13 := move var@14 == 1: i32;
  var@12 := Â¬ move var@13;
  assert(Â¬move var@12);
  var@17 := copy y;
  var@16 := move var@17 == 3: i32;
  var@15 := Â¬ move var@16;
  assert(Â¬move var@15);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> &mut@6 (2: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  *(px) := 3: i32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> &mut@6 (2: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> &mut@6 (2: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}


- op:
3: i32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@14 := copy x;
  var@13 := move var@14 == 1: i32;
  var@12 := Â¬ move var@13;
  assert(Â¬move var@12);
  var@17 := copy y;
  var@16 := move var@17 == 3: i32;
  var@15 := Â¬ move var@16;
  assert(Â¬move var@15);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> &mut@6 (3: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@14 := copy x
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> &mut@6 (3: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> &mut@6 (3: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}


- op:
copy x

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@13 := move var@14 == 1: i32;
  var@12 := Â¬ move var@13;
  assert(Â¬move var@12);
  var@17 := copy y;
  var@16 := move var@17 == 3: i32;
  var@15 := Â¬ move var@16;
  assert(Â¬move var@15);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> &mut@6 (3: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> 1: i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@13 := move var@14 == 1: i32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> &mut@6 (3: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> 1: i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> &mut@6 (3: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> 1: i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}


- op:
move var@14

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> &mut@6 (3: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}


- op:
1: i32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@12 := Â¬ move var@13;
  assert(Â¬move var@12);
  var@17 := copy y;
  var@16 := move var@17 == 3: i32;
  var@15 := Â¬ move var@16;
  assert(Â¬move var@15);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> &mut@6 (3: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> true ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@12 := Â¬ move var@13
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> &mut@6 (3: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> true ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> &mut@6 (3: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> true ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}


- op:
move var@13

[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@12);
  var@17 := copy y;
  var@16 := move var@17 == 3: i32;
  var@15 := Â¬ move var@16;
  assert(Â¬move var@15);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> &mut@6 (3: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> false ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@12)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> &mut@6 (3: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> false ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> &mut@6 (3: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> false ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}


- op:
move var@12

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@17 := copy y;
  var@16 := move var@17 == 3: i32;
  var@15 := Â¬ move var@16;
  assert(Â¬move var@15);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> &mut@6 (3: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@17 := copy y
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> &mut@6 (3: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> &mut@6 (3: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}


- op:
copy y

[[32mDebug[39m] end borrow: 5:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> &mut@6 (3: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}

[[32mDebug[39m] end borrow: 5: found outer borrows/abs:(InterpreterBorrowsCore.InnerLoans (InterpreterBorrowsCore.Borrow 6))
[[32mDebug[39m] end borrow: 6:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> &mut@6 (3: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}

[[32mDebug[39m] give_back:
- bid: 6
- content: &mut@6 (3: i32)
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}


[[32mDebug[39m] give_back_value:
- bid: 6
- value: 3: i32
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}


[[32mDebug[39m] end borrow: 5:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (3: i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}

[[32mDebug[39m] give_back:
- bid: 5
- content: &mut@5 (3: i32)
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}


[[32mDebug[39m] give_back_value:
- bid: 5
- value: 3: i32
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}


[[32mDebug[39m] 
**About to evaluate statement**: [
  var@16 := move var@17 == 3: i32;
  var@15 := Â¬ move var@16;
  assert(Â¬move var@15);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> 3: i32 ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> 3: i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@16 := move var@17 == 3: i32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> 3: i32 ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> 3: i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> 3: i32 ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> 3: i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}


- op:
move var@17

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> 3: i32 ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}


- op:
3: i32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@15 := Â¬ move var@16;
  assert(Â¬move var@15);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> 3: i32 ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> true ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@15 := Â¬ move var@16
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> 3: i32 ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> true ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> 3: i32 ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> true ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}


- op:
move var@16

[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@15);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> 3: i32 ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> false ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@15)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> 3: i32 ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> false ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> 3: i32 ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> false ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}


- op:
move var@15

[[32mDebug[39m] 
**About to evaluate statement**: [
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> 3: i32 ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}



[[32mDebug[39m] test_unit_function: id_mut_mut_test3
[[32mDebug[39m] 
**About to evaluate statement**: [
  x := 0: i32;
  px := &mut x;
  ppx := &mut px;
  var@5 := &two-phase *(ppx);
  ppy := move id_mut_mut<i32>(move var@5);
  *(*(ppy)) := 1: i32;
  var@7 := &two-phase *(ppy);
  ppz := move id_mut_mut<i32>(move var@7);
  *(*(ppz)) := 2: i32;
  var@10 := copy *(px);
  var@9 := move var@10 == 2: i32;
  var@8 := Â¬ move var@9;
  assert(Â¬move var@8);
  var@13 := copy x;
  var@12 := move var@13 == 2: i32;
  var@11 := Â¬ move var@12;
  assert(Â¬move var@11);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  x := 0: i32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
}


- op:
0: i32

[[32mDebug[39m] 
**About to evaluate statement**: [
  px := &mut x;
  ppx := &mut px;
  var@5 := &two-phase *(ppx);
  ppy := move id_mut_mut<i32>(move var@5);
  *(*(ppy)) := 1: i32;
  var@7 := &two-phase *(ppy);
  ppz := move id_mut_mut<i32>(move var@7);
  *(*(ppz)) := 2: i32;
  var@10 := copy *(px);
  var@9 := move var@10 == 2: i32;
  var@8 := Â¬ move var@9;
  assert(Â¬move var@8);
  var@13 := copy x;
  var@12 := move var@13 == 2: i32;
  var@11 := Â¬ move var@12;
  assert(Â¬move var@11);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  px := &mut x
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  ppx := &mut px;
  var@5 := &two-phase *(ppx);
  ppy := move id_mut_mut<i32>(move var@5);
  *(*(ppy)) := 1: i32;
  var@7 := &two-phase *(ppy);
  ppz := move id_mut_mut<i32>(move var@7);
  *(*(ppz)) := 2: i32;
  var@10 := copy *(px);
  var@9 := move var@10 == 2: i32;
  var@8 := Â¬ move var@9;
  assert(Â¬move var@8);
  var@13 := copy x;
  var@12 := move var@13 == 2: i32;
  var@11 := Â¬ move var@12;
  assert(Â¬move var@11);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@0 (0: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  ppx := &mut px
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@0 (0: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := &two-phase *(ppx);
  ppy := move id_mut_mut<i32>(move var@5);
  *(*(ppy)) := 1: i32;
  var@7 := &two-phase *(ppy);
  ppz := move id_mut_mut<i32>(move var@7);
  *(*(ppz)) := 2: i32;
  var@10 := copy *(px);
  var@9 := move var@10 == 2: i32;
  var@8 := Â¬ move var@9;
  assert(Â¬move var@8);
  var@13 := copy x;
  var@12 := move var@13 == 2: i32;
  var@11 := Â¬ move var@12;
  assert(Â¬move var@11);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (&mut@0 (0: i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := &two-phase *(ppx)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (&mut@0 (0: i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  ppy := move id_mut_mut<i32>(move var@5);
  *(*(ppy)) := 1: i32;
  var@7 := &two-phase *(ppy);
  ppz := move id_mut_mut<i32>(move var@7);
  *(*(ppz)) := 2: i32;
  var@10 := copy *(px);
  var@9 := move var@10 == 2: i32;
  var@8 := Â¬ move var@9;
  assert(Â¬move var@8);
  var@13 := copy x;
  var@12 := move var@13 == 2: i32;
  var@11 := Â¬ move var@12;
  assert(Â¬move var@11);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (@shared_loan({2}, &mut@0 (0: i32))) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> âinactivated_mut@2â ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  ppy := move id_mut_mut<i32>(move var@5)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (@shared_loan({2}, &mut@0 (0: i32))) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> âinactivated_mut@2â ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
}



[[32mDebug[39m] activate_inactivated_mut_borrow: resulting value:
&mut@0 (0: i32)
[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> &mut@2 (&mut@0 (0: i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
}


- op:
move var@5

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@2 := &mut *(x);
  var@0 := &mut *(var@2);
  return
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (x) -> &mut@2 (&mut@0 (0: i32)) ;
  Some (var@2) -> â¥ : &'_ mut (&'_ mut (i32)) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@2 := &mut *(x)
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (x) -> &mut@2 (&mut@0 (0: i32)) ;
  Some (var@2) -> â¥ : &'_ mut (&'_ mut (i32)) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@0 := &mut *(var@2);
  return
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (x) -> &mut@2 (âmut@3â) ;
  Some (var@2) -> &mut@3 (&mut@0 (0: i32)) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@0 := &mut *(var@2)
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (x) -> &mut@2 (âmut@3â) ;
  Some (var@2) -> &mut@3 (&mut@0 (0: i32)) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  return
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
}

# Frame 1:
{
  Some (var@0) -> &mut@4 (&mut@0 (0: i32)) ;
  Some (x) -> &mut@2 (âmut@3â) ;
  Some (var@2) -> &mut@3 (âmut@4â) ;
}



[[32mDebug[39m] ctx_pop_frame:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
}

# Frame 1:
{
  Some (var@0) -> &mut@4 (&mut@0 (0: i32)) ;
  Some (x) -> &mut@2 (âmut@3â) ;
  Some (var@2) -> &mut@3 (âmut@4â) ;
}

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
}

# Frame 1:
{
  Some (var@0) -> &mut@4 (&mut@0 (0: i32)) ;
  Some (x) -> &mut@2 (âmut@3â) ;
  Some (var@2) -> &mut@3 (âmut@4â) ;
}


- op:
move var@0

[[32mDebug[39m] 
**About to evaluate statement**: [
  *(*(ppy)) := 1: i32;
  var@7 := &two-phase *(ppy);
  ppz := move id_mut_mut<i32>(move var@7);
  *(*(ppz)) := 2: i32;
  var@10 := copy *(px);
  var@9 := move var@10 == 2: i32;
  var@8 := Â¬ move var@9;
  assert(Â¬move var@8);
  var@13 := copy x;
  var@12 := move var@13 == 2: i32;
  var@11 := Â¬ move var@12;
  assert(Â¬move var@11);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@4 (&mut@0 (0: i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  *(*(ppy)) := 1: i32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@4 (&mut@0 (0: i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@4 (&mut@0 (0: i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
}


- op:
1: i32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := &two-phase *(ppy);
  ppz := move id_mut_mut<i32>(move var@7);
  *(*(ppz)) := 2: i32;
  var@10 := copy *(px);
  var@9 := move var@10 == 2: i32;
  var@8 := Â¬ move var@9;
  assert(Â¬move var@8);
  var@13 := copy x;
  var@12 := move var@13 == 2: i32;
  var@11 := Â¬ move var@12;
  assert(Â¬move var@11);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@4 (&mut@0 (1: i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := &two-phase *(ppy)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@4 (&mut@0 (1: i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  ppz := move id_mut_mut<i32>(move var@7);
  *(*(ppz)) := 2: i32;
  var@10 := copy *(px);
  var@9 := move var@10 == 2: i32;
  var@8 := Â¬ move var@9;
  assert(Â¬move var@8);
  var@13 := copy x;
  var@12 := move var@13 == 2: i32;
  var@11 := Â¬ move var@12;
  assert(Â¬move var@11);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@4 (@shared_loan({5}, &mut@0 (1: i32))) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> âinactivated_mut@5â ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  ppz := move id_mut_mut<i32>(move var@7)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@4 (@shared_loan({5}, &mut@0 (1: i32))) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> âinactivated_mut@5â ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
}



[[32mDebug[39m] activate_inactivated_mut_borrow: resulting value:
&mut@0 (1: i32)
[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@4 (âmut@5â) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> &mut@5 (&mut@0 (1: i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
}


- op:
move var@7

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@2 := &mut *(x);
  var@0 := &mut *(var@2);
  return
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@4 (âmut@5â) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (x) -> &mut@5 (&mut@0 (1: i32)) ;
  Some (var@2) -> â¥ : &'_ mut (&'_ mut (i32)) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@2 := &mut *(x)
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@4 (âmut@5â) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (x) -> &mut@5 (&mut@0 (1: i32)) ;
  Some (var@2) -> â¥ : &'_ mut (&'_ mut (i32)) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@0 := &mut *(var@2);
  return
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@4 (âmut@5â) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (x) -> &mut@5 (âmut@6â) ;
  Some (var@2) -> &mut@6 (&mut@0 (1: i32)) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@0 := &mut *(var@2)
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@4 (âmut@5â) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
}

# Frame 1:
{
  Some (var@0) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (x) -> &mut@5 (âmut@6â) ;
  Some (var@2) -> &mut@6 (&mut@0 (1: i32)) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  return
]

**Context**:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@4 (âmut@5â) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
}

# Frame 1:
{
  Some (var@0) -> &mut@7 (&mut@0 (1: i32)) ;
  Some (x) -> &mut@5 (âmut@6â) ;
  Some (var@2) -> &mut@6 (âmut@7â) ;
}



[[32mDebug[39m] ctx_pop_frame:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@4 (âmut@5â) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
}

# Frame 1:
{
  Some (var@0) -> &mut@7 (&mut@0 (1: i32)) ;
  Some (x) -> &mut@5 (âmut@6â) ;
  Some (var@2) -> &mut@6 (âmut@7â) ;
}

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 2 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@4 (âmut@5â) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
}

# Frame 1:
{
  Some (var@0) -> &mut@7 (&mut@0 (1: i32)) ;
  Some (x) -> &mut@5 (âmut@6â) ;
  Some (var@2) -> &mut@6 (âmut@7â) ;
}


- op:
move var@0

[[32mDebug[39m] 
**About to evaluate statement**: [
  *(*(ppz)) := 2: i32;
  var@10 := copy *(px);
  var@9 := move var@10 == 2: i32;
  var@8 := Â¬ move var@9;
  assert(Â¬move var@8);
  var@13 := copy x;
  var@12 := move var@13 == 2: i32;
  var@11 := Â¬ move var@12;
  assert(Â¬move var@11);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@4 (âmut@5â) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> &mut@7 (&mut@0 (1: i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@5 (âmut@6â) ;
  None -> &mut@6 (âmut@7â) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  *(*(ppz)) := 2: i32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@4 (âmut@5â) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> &mut@7 (&mut@0 (1: i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@5 (âmut@6â) ;
  None -> &mut@6 (âmut@7â) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@4 (âmut@5â) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> &mut@7 (&mut@0 (1: i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@5 (âmut@6â) ;
  None -> &mut@6 (âmut@7â) ;
}


- op:
2: i32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@10 := copy *(px);
  var@9 := move var@10 == 2: i32;
  var@8 := Â¬ move var@9;
  assert(Â¬move var@8);
  var@13 := copy x;
  var@12 := move var@13 == 2: i32;
  var@11 := Â¬ move var@12;
  assert(Â¬move var@11);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@4 (âmut@5â) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> &mut@7 (&mut@0 (2: i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@5 (âmut@6â) ;
  None -> &mut@6 (âmut@7â) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@10 := copy *(px)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@4 (âmut@5â) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> &mut@7 (&mut@0 (2: i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@5 (âmut@6â) ;
  None -> &mut@6 (âmut@7â) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@4 (âmut@5â) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> &mut@7 (&mut@0 (2: i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@5 (âmut@6â) ;
  None -> &mut@6 (âmut@7â) ;
}


- op:
copy *(px)

[[32mDebug[39m] end borrow: 1:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@4 (âmut@5â) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> &mut@7 (&mut@0 (2: i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@5 (âmut@6â) ;
  None -> &mut@6 (âmut@7â) ;
}

[[32mDebug[39m] end borrow: 1: found outer borrows/abs:(InterpreterBorrowsCore.InnerLoans (InterpreterBorrowsCore.Borrow 2))
[[32mDebug[39m] end borrow: 2:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@4 (âmut@5â) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> &mut@7 (&mut@0 (2: i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@5 (âmut@6â) ;
  None -> &mut@6 (âmut@7â) ;
}

[[32mDebug[39m] end borrow: 2: found outer borrows/abs:(InterpreterBorrowsCore.InnerLoans (InterpreterBorrowsCore.Borrow 3))
[[32mDebug[39m] end borrow: 3:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@4 (âmut@5â) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> &mut@7 (&mut@0 (2: i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@5 (âmut@6â) ;
  None -> &mut@6 (âmut@7â) ;
}

[[32mDebug[39m] end borrow: 3: found outer borrows/abs:(InterpreterBorrowsCore.InnerLoans (InterpreterBorrowsCore.Borrow 4))
[[32mDebug[39m] end borrow: 4:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@4 (âmut@5â) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> &mut@7 (&mut@0 (2: i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@5 (âmut@6â) ;
  None -> &mut@6 (âmut@7â) ;
}

[[32mDebug[39m] end borrow: 4: found outer borrows/abs:(InterpreterBorrowsCore.InnerLoans (InterpreterBorrowsCore.Borrow 5))
[[32mDebug[39m] end borrow: 5:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@4 (âmut@5â) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> &mut@7 (&mut@0 (2: i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@5 (âmut@6â) ;
  None -> &mut@6 (âmut@7â) ;
}

[[32mDebug[39m] end borrow: 5: found outer borrows/abs:(InterpreterBorrowsCore.InnerLoans (InterpreterBorrowsCore.Borrow 6))
[[32mDebug[39m] end borrow: 6:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@4 (âmut@5â) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> &mut@7 (&mut@0 (2: i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@5 (âmut@6â) ;
  None -> &mut@6 (âmut@7â) ;
}

[[32mDebug[39m] end borrow: 6: found outer borrows/abs:(InterpreterBorrowsCore.InnerLoans (InterpreterBorrowsCore.Borrow 7))
[[32mDebug[39m] end borrow: 7:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@4 (âmut@5â) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> &mut@7 (&mut@0 (2: i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@5 (âmut@6â) ;
  None -> &mut@6 (âmut@7â) ;
}

[[32mDebug[39m] give_back:
- bid: 7
- content: &mut@7 (&mut@0 (2: i32))
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@4 (âmut@5â) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@5 (âmut@6â) ;
  None -> &mut@6 (âmut@7â) ;
}


[[32mDebug[39m] give_back_value:
- bid: 7
- value: &mut@0 (2: i32)
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@4 (âmut@5â) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@5 (âmut@6â) ;
  None -> &mut@6 (âmut@7â) ;
}


[[32mDebug[39m] end borrow: 6:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@4 (âmut@5â) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@5 (âmut@6â) ;
  None -> &mut@6 (&mut@0 (2: i32)) ;
}

[[32mDebug[39m] give_back:
- bid: 6
- content: &mut@6 (&mut@0 (2: i32))
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@4 (âmut@5â) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@5 (âmut@6â) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}


[[32mDebug[39m] give_back_value:
- bid: 6
- value: &mut@0 (2: i32)
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@4 (âmut@5â) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@5 (âmut@6â) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}


[[32mDebug[39m] end borrow: 5:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@4 (âmut@5â) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@5 (&mut@0 (2: i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}

[[32mDebug[39m] give_back:
- bid: 5
- content: &mut@5 (&mut@0 (2: i32))
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@4 (âmut@5â) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}


[[32mDebug[39m] give_back_value:
- bid: 5
- value: &mut@0 (2: i32)
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@4 (âmut@5â) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}


[[32mDebug[39m] end borrow: 4:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@4 (&mut@0 (2: i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}

[[32mDebug[39m] give_back:
- bid: 4
- content: &mut@4 (&mut@0 (2: i32))
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}


[[32mDebug[39m] give_back_value:
- bid: 4
- value: &mut@0 (2: i32)
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (âmut@4â) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}


[[32mDebug[39m] end borrow: 3:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> &mut@3 (&mut@0 (2: i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}

[[32mDebug[39m] give_back:
- bid: 3
- content: &mut@3 (&mut@0 (2: i32))
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}


[[32mDebug[39m] give_back_value:
- bid: 3
- value: &mut@0 (2: i32)
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (âmut@3â) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}


[[32mDebug[39m] end borrow: 2:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> &mut@2 (&mut@0 (2: i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}

[[32mDebug[39m] give_back:
- bid: 2
- content: &mut@2 (&mut@0 (2: i32))
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}


[[32mDebug[39m] give_back_value:
- bid: 2
- value: &mut@0 (2: i32)
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}


[[32mDebug[39m] end borrow: 1:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (&mut@0 (2: i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}

[[32mDebug[39m] give_back:
- bid: 1
- content: &mut@1 (&mut@0 (2: i32))
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}


[[32mDebug[39m] give_back_value:
- bid: 1
- value: &mut@0 (2: i32)
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}


[[32mDebug[39m] 
**About to evaluate statement**: [
  var@9 := move var@10 == 2: i32;
  var@8 := Â¬ move var@9;
  assert(Â¬move var@8);
  var@13 := copy x;
  var@12 := move var@13 == 2: i32;
  var@11 := Â¬ move var@12;
  assert(Â¬move var@11);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@0 (2: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> 2: i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@9 := move var@10 == 2: i32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@0 (2: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> 2: i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@0 (2: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> 2: i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}


- op:
move var@10

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@0 (2: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}


- op:
2: i32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := Â¬ move var@9;
  assert(Â¬move var@8);
  var@13 := copy x;
  var@12 := move var@13 == 2: i32;
  var@11 := Â¬ move var@12;
  assert(Â¬move var@11);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@0 (2: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> true ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := Â¬ move var@9
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@0 (2: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> true ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@0 (2: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> true ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}


- op:
move var@9

[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@8);
  var@13 := copy x;
  var@12 := move var@13 == 2: i32;
  var@11 := Â¬ move var@12;
  assert(Â¬move var@11);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@0 (2: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> false ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@8)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@0 (2: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> false ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@0 (2: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> false ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}


- op:
move var@8

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@13 := copy x;
  var@12 := move var@13 == 2: i32;
  var@11 := Â¬ move var@12;
  assert(Â¬move var@11);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@0 (2: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@13 := copy x
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@0 (2: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@0 (2: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}


- op:
copy x

[[32mDebug[39m] end borrow: 0:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@0 (2: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}

[[32mDebug[39m] give_back:
- bid: 0
- content: &mut@0 (2: i32)
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}


[[32mDebug[39m] give_back_value:
- bid: 0
- value: 2: i32
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}


[[32mDebug[39m] 
**About to evaluate statement**: [
  var@12 := move var@13 == 2: i32;
  var@11 := Â¬ move var@12;
  assert(Â¬move var@11);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> 2: i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@12 := move var@13 == 2: i32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> 2: i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> 2: i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}


- op:
move var@13

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}


- op:
2: i32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@11 := Â¬ move var@12;
  assert(Â¬move var@11);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> true ;
  Some (var@13) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@11 := Â¬ move var@12
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> true ;
  Some (var@13) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> true ;
  Some (var@13) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}


- op:
move var@12

[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@11);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> false ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@11)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> false ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> false ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}


- op:
move var@11

[[32mDebug[39m] 
**About to evaluate statement**: [
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 2: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
  None -> â¥ : &'_ mut (&'_ mut (i32)) ;
}



[[32mDebug[39m] test_function_symbolic: add_test
[[32mDebug[39m] 
**About to evaluate statement**: [
  var@3 := copy x;
  var@4 := copy y;
  var@0 := copy var@3 + copy var@4;
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (var@3) -> â¥ : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@3 := copy x
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (var@3) -> â¥ : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (var@3) -> â¥ : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : (u32, bool) ;
}


- op:
copy x

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := copy y;
  var@0 := copy var@3 + copy var@4;
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (var@3) -> s@0 : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := copy y
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (var@3) -> s@0 : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (var@3) -> s@0 : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : (u32, bool) ;
}


- op:
copy y

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@0 := copy var@3 + copy var@4;
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (var@3) -> s@0 : u32 ;
  Some (var@4) -> s@1 : u32 ;
  Some (var@5) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@0 := copy var@3 + copy var@4
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (var@3) -> s@0 : u32 ;
  Some (var@4) -> s@1 : u32 ;
  Some (var@5) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (var@3) -> s@0 : u32 ;
  Some (var@4) -> s@1 : u32 ;
  Some (var@5) -> â¥ : (u32, bool) ;
}


- op:
copy var@3

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (var@3) -> s@0 : u32 ;
  Some (var@4) -> s@1 : u32 ;
  Some (var@5) -> â¥ : (u32, bool) ;
}


- op:
copy var@4

[[32mDebug[39m] 
**About to evaluate statement**: [
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> s@2 : u32 ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (var@3) -> s@0 : u32 ;
  Some (var@4) -> s@1 : u32 ;
  Some (var@5) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] test_function_symbolic: subs_test
[[32mDebug[39m] 
**About to evaluate statement**: [
  var@3 := copy x;
  var@4 := copy y;
  var@0 := copy var@3 - copy var@4;
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (var@3) -> â¥ : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@3 := copy x
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (var@3) -> â¥ : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (var@3) -> â¥ : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : (u32, bool) ;
}


- op:
copy x

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := copy y;
  var@0 := copy var@3 - copy var@4;
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (var@3) -> s@0 : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := copy y
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (var@3) -> s@0 : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (var@3) -> s@0 : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : (u32, bool) ;
}


- op:
copy y

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@0 := copy var@3 - copy var@4;
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (var@3) -> s@0 : u32 ;
  Some (var@4) -> s@1 : u32 ;
  Some (var@5) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@0 := copy var@3 - copy var@4
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (var@3) -> s@0 : u32 ;
  Some (var@4) -> s@1 : u32 ;
  Some (var@5) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (var@3) -> s@0 : u32 ;
  Some (var@4) -> s@1 : u32 ;
  Some (var@5) -> â¥ : (u32, bool) ;
}


- op:
copy var@3

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (var@3) -> s@0 : u32 ;
  Some (var@4) -> s@1 : u32 ;
  Some (var@5) -> â¥ : (u32, bool) ;
}


- op:
copy var@4

[[32mDebug[39m] 
**About to evaluate statement**: [
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> s@2 : u32 ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (var@3) -> s@0 : u32 ;
  Some (var@4) -> s@1 : u32 ;
  Some (var@5) -> â¥ : (u32, bool) ;
}



[[32mDebug[39m] test_function_symbolic: div_test
[[32mDebug[39m] 
**About to evaluate statement**: [
  var@3 := copy x;
  var@4 := copy y;
  var@0 := move var@3 / move var@4;
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (var@3) -> â¥ : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : bool ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@3 := copy x
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (var@3) -> â¥ : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : bool ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (var@3) -> â¥ : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : bool ;
}


- op:
copy x

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := copy y;
  var@0 := move var@3 / move var@4;
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (var@3) -> s@0 : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : bool ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := copy y
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (var@3) -> s@0 : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : bool ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (var@3) -> s@0 : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : bool ;
}


- op:
copy y

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@0 := move var@3 / move var@4;
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (var@3) -> s@0 : u32 ;
  Some (var@4) -> s@1 : u32 ;
  Some (var@5) -> â¥ : bool ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@0 := move var@3 / move var@4
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (var@3) -> s@0 : u32 ;
  Some (var@4) -> s@1 : u32 ;
  Some (var@5) -> â¥ : bool ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (var@3) -> s@0 : u32 ;
  Some (var@4) -> s@1 : u32 ;
  Some (var@5) -> â¥ : bool ;
}


- op:
move var@3

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (var@3) -> â¥ : u32 ;
  Some (var@4) -> s@1 : u32 ;
  Some (var@5) -> â¥ : bool ;
}


- op:
move var@4

[[32mDebug[39m] 
**About to evaluate statement**: [
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> s@2 : u32 ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (var@3) -> â¥ : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : bool ;
}



[[32mDebug[39m] test_function_symbolic: rem_test
[[32mDebug[39m] 
**About to evaluate statement**: [
  var@3 := copy x;
  var@4 := copy y;
  var@0 := move var@3 % move var@4;
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (var@3) -> â¥ : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : bool ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@3 := copy x
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (var@3) -> â¥ : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : bool ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (var@3) -> â¥ : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : bool ;
}


- op:
copy x

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := copy y;
  var@0 := move var@3 % move var@4;
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (var@3) -> s@0 : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : bool ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := copy y
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (var@3) -> s@0 : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : bool ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (var@3) -> s@0 : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : bool ;
}


- op:
copy y

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@0 := move var@3 % move var@4;
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (var@3) -> s@0 : u32 ;
  Some (var@4) -> s@1 : u32 ;
  Some (var@5) -> â¥ : bool ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@0 := move var@3 % move var@4
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (var@3) -> s@0 : u32 ;
  Some (var@4) -> s@1 : u32 ;
  Some (var@5) -> â¥ : bool ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (var@3) -> s@0 : u32 ;
  Some (var@4) -> s@1 : u32 ;
  Some (var@5) -> â¥ : bool ;
}


- op:
move var@3

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (var@3) -> â¥ : u32 ;
  Some (var@4) -> s@1 : u32 ;
  Some (var@5) -> â¥ : bool ;
}


- op:
move var@4

[[32mDebug[39m] 
**About to evaluate statement**: [
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> s@2 : u32 ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (var@3) -> â¥ : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : bool ;
}



[[32mDebug[39m] test_function_symbolic: test2
[[32mDebug[39m] 
**About to evaluate statement**: [
  x := 23: u32;
  y := 44: u32;
  z := 67: u32;
  var@5 := copy x;
  (p).x := move var@5;
  (p).y := 67: u32;
  (s as test1::Sum::Right).0 := true;
  set_discriminant(s, 1);
  (o as test1::One::One).0 := 3: u64;
  set_discriminant(o, 0);
  set_discriminant(e0, 0);
  set_discriminant(enum0, 0);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (y) -> â¥ : u32 ;
  Some (z) -> â¥ : u32 ;
  Some (p) -> â¥ : test1::Pair<u32, u32> ;
  Some (var@5) -> â¥ : u32 ;
  Some (s) -> â¥ : test1::Sum<u32, bool> ;
  Some (o) -> â¥ : test1::One<u64> ;
  Some (e0) -> â¥ : test1::EmptyEnum ;
  Some (e1) -> â¥ : test1::EmptyEnum ;
  Some (enum0) -> â¥ : test1::Enum ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  x := 23: u32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (y) -> â¥ : u32 ;
  Some (z) -> â¥ : u32 ;
  Some (p) -> â¥ : test1::Pair<u32, u32> ;
  Some (var@5) -> â¥ : u32 ;
  Some (s) -> â¥ : test1::Sum<u32, bool> ;
  Some (o) -> â¥ : test1::One<u64> ;
  Some (e0) -> â¥ : test1::EmptyEnum ;
  Some (e1) -> â¥ : test1::EmptyEnum ;
  Some (enum0) -> â¥ : test1::Enum ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (y) -> â¥ : u32 ;
  Some (z) -> â¥ : u32 ;
  Some (p) -> â¥ : test1::Pair<u32, u32> ;
  Some (var@5) -> â¥ : u32 ;
  Some (s) -> â¥ : test1::Sum<u32, bool> ;
  Some (o) -> â¥ : test1::One<u64> ;
  Some (e0) -> â¥ : test1::EmptyEnum ;
  Some (e1) -> â¥ : test1::EmptyEnum ;
  Some (enum0) -> â¥ : test1::Enum ;
}


- op:
23: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  y := 44: u32;
  z := 67: u32;
  var@5 := copy x;
  (p).x := move var@5;
  (p).y := 67: u32;
  (s as test1::Sum::Right).0 := true;
  set_discriminant(s, 1);
  (o as test1::One::One).0 := 3: u64;
  set_discriminant(o, 0);
  set_discriminant(e0, 0);
  set_discriminant(enum0, 0);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 23: u32 ;
  Some (y) -> â¥ : u32 ;
  Some (z) -> â¥ : u32 ;
  Some (p) -> â¥ : test1::Pair<u32, u32> ;
  Some (var@5) -> â¥ : u32 ;
  Some (s) -> â¥ : test1::Sum<u32, bool> ;
  Some (o) -> â¥ : test1::One<u64> ;
  Some (e0) -> â¥ : test1::EmptyEnum ;
  Some (e1) -> â¥ : test1::EmptyEnum ;
  Some (enum0) -> â¥ : test1::Enum ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  y := 44: u32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 23: u32 ;
  Some (y) -> â¥ : u32 ;
  Some (z) -> â¥ : u32 ;
  Some (p) -> â¥ : test1::Pair<u32, u32> ;
  Some (var@5) -> â¥ : u32 ;
  Some (s) -> â¥ : test1::Sum<u32, bool> ;
  Some (o) -> â¥ : test1::One<u64> ;
  Some (e0) -> â¥ : test1::EmptyEnum ;
  Some (e1) -> â¥ : test1::EmptyEnum ;
  Some (enum0) -> â¥ : test1::Enum ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 23: u32 ;
  Some (y) -> â¥ : u32 ;
  Some (z) -> â¥ : u32 ;
  Some (p) -> â¥ : test1::Pair<u32, u32> ;
  Some (var@5) -> â¥ : u32 ;
  Some (s) -> â¥ : test1::Sum<u32, bool> ;
  Some (o) -> â¥ : test1::One<u64> ;
  Some (e0) -> â¥ : test1::EmptyEnum ;
  Some (e1) -> â¥ : test1::EmptyEnum ;
  Some (enum0) -> â¥ : test1::Enum ;
}


- op:
44: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  z := 67: u32;
  var@5 := copy x;
  (p).x := move var@5;
  (p).y := 67: u32;
  (s as test1::Sum::Right).0 := true;
  set_discriminant(s, 1);
  (o as test1::One::One).0 := 3: u64;
  set_discriminant(o, 0);
  set_discriminant(e0, 0);
  set_discriminant(enum0, 0);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 23: u32 ;
  Some (y) -> 44: u32 ;
  Some (z) -> â¥ : u32 ;
  Some (p) -> â¥ : test1::Pair<u32, u32> ;
  Some (var@5) -> â¥ : u32 ;
  Some (s) -> â¥ : test1::Sum<u32, bool> ;
  Some (o) -> â¥ : test1::One<u64> ;
  Some (e0) -> â¥ : test1::EmptyEnum ;
  Some (e1) -> â¥ : test1::EmptyEnum ;
  Some (enum0) -> â¥ : test1::Enum ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  z := 67: u32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 23: u32 ;
  Some (y) -> 44: u32 ;
  Some (z) -> â¥ : u32 ;
  Some (p) -> â¥ : test1::Pair<u32, u32> ;
  Some (var@5) -> â¥ : u32 ;
  Some (s) -> â¥ : test1::Sum<u32, bool> ;
  Some (o) -> â¥ : test1::One<u64> ;
  Some (e0) -> â¥ : test1::EmptyEnum ;
  Some (e1) -> â¥ : test1::EmptyEnum ;
  Some (enum0) -> â¥ : test1::Enum ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 23: u32 ;
  Some (y) -> 44: u32 ;
  Some (z) -> â¥ : u32 ;
  Some (p) -> â¥ : test1::Pair<u32, u32> ;
  Some (var@5) -> â¥ : u32 ;
  Some (s) -> â¥ : test1::Sum<u32, bool> ;
  Some (o) -> â¥ : test1::One<u64> ;
  Some (e0) -> â¥ : test1::EmptyEnum ;
  Some (e1) -> â¥ : test1::EmptyEnum ;
  Some (enum0) -> â¥ : test1::Enum ;
}


- op:
67: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := copy x;
  (p).x := move var@5;
  (p).y := 67: u32;
  (s as test1::Sum::Right).0 := true;
  set_discriminant(s, 1);
  (o as test1::One::One).0 := 3: u64;
  set_discriminant(o, 0);
  set_discriminant(e0, 0);
  set_discriminant(enum0, 0);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 23: u32 ;
  Some (y) -> 44: u32 ;
  Some (z) -> 67: u32 ;
  Some (p) -> â¥ : test1::Pair<u32, u32> ;
  Some (var@5) -> â¥ : u32 ;
  Some (s) -> â¥ : test1::Sum<u32, bool> ;
  Some (o) -> â¥ : test1::One<u64> ;
  Some (e0) -> â¥ : test1::EmptyEnum ;
  Some (e1) -> â¥ : test1::EmptyEnum ;
  Some (enum0) -> â¥ : test1::Enum ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := copy x
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 23: u32 ;
  Some (y) -> 44: u32 ;
  Some (z) -> 67: u32 ;
  Some (p) -> â¥ : test1::Pair<u32, u32> ;
  Some (var@5) -> â¥ : u32 ;
  Some (s) -> â¥ : test1::Sum<u32, bool> ;
  Some (o) -> â¥ : test1::One<u64> ;
  Some (e0) -> â¥ : test1::EmptyEnum ;
  Some (e1) -> â¥ : test1::EmptyEnum ;
  Some (enum0) -> â¥ : test1::Enum ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 23: u32 ;
  Some (y) -> 44: u32 ;
  Some (z) -> 67: u32 ;
  Some (p) -> â¥ : test1::Pair<u32, u32> ;
  Some (var@5) -> â¥ : u32 ;
  Some (s) -> â¥ : test1::Sum<u32, bool> ;
  Some (o) -> â¥ : test1::One<u64> ;
  Some (e0) -> â¥ : test1::EmptyEnum ;
  Some (e1) -> â¥ : test1::EmptyEnum ;
  Some (enum0) -> â¥ : test1::Enum ;
}


- op:
copy x

[[32mDebug[39m] 
**About to evaluate statement**: [
  (p).x := move var@5;
  (p).y := 67: u32;
  (s as test1::Sum::Right).0 := true;
  set_discriminant(s, 1);
  (o as test1::One::One).0 := 3: u64;
  set_discriminant(o, 0);
  set_discriminant(e0, 0);
  set_discriminant(enum0, 0);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 23: u32 ;
  Some (y) -> 44: u32 ;
  Some (z) -> 67: u32 ;
  Some (p) -> â¥ : test1::Pair<u32, u32> ;
  Some (var@5) -> 23: u32 ;
  Some (s) -> â¥ : test1::Sum<u32, bool> ;
  Some (o) -> â¥ : test1::One<u64> ;
  Some (e0) -> â¥ : test1::EmptyEnum ;
  Some (e1) -> â¥ : test1::EmptyEnum ;
  Some (enum0) -> â¥ : test1::Enum ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  (p).x := move var@5
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 23: u32 ;
  Some (y) -> 44: u32 ;
  Some (z) -> 67: u32 ;
  Some (p) -> â¥ : test1::Pair<u32, u32> ;
  Some (var@5) -> 23: u32 ;
  Some (s) -> â¥ : test1::Sum<u32, bool> ;
  Some (o) -> â¥ : test1::One<u64> ;
  Some (e0) -> â¥ : test1::EmptyEnum ;
  Some (e1) -> â¥ : test1::EmptyEnum ;
  Some (enum0) -> â¥ : test1::Enum ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 23: u32 ;
  Some (y) -> 44: u32 ;
  Some (z) -> 67: u32 ;
  Some (p) -> â¥ : test1::Pair<u32, u32> ;
  Some (var@5) -> 23: u32 ;
  Some (s) -> â¥ : test1::Sum<u32, bool> ;
  Some (o) -> â¥ : test1::One<u64> ;
  Some (e0) -> â¥ : test1::EmptyEnum ;
  Some (e1) -> â¥ : test1::EmptyEnum ;
  Some (enum0) -> â¥ : test1::Enum ;
}


- op:
move var@5

[[32mDebug[39m] expand_bottom_value_from_projection:
pe: (Expressions.Field ((Expressions.ProjAdt (0, None)), 0))
ty: (Types.Adt ((Types.AdtId 0), [],
   [(Types.Integer Types.U32); (Types.Integer Types.U32)]))
[[32mDebug[39m] 
**About to evaluate statement**: [
  (p).y := 67: u32;
  (s as test1::Sum::Right).0 := true;
  set_discriminant(s, 1);
  (o as test1::One::One).0 := 3: u64;
  set_discriminant(o, 0);
  set_discriminant(e0, 0);
  set_discriminant(enum0, 0);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 23: u32 ;
  Some (y) -> 44: u32 ;
  Some (z) -> 67: u32 ;
  Some (p) -> test1::Pair { x = 23: u32; y = â¥ : u32; } ;
  Some (var@5) -> â¥ : u32 ;
  Some (s) -> â¥ : test1::Sum<u32, bool> ;
  Some (o) -> â¥ : test1::One<u64> ;
  Some (e0) -> â¥ : test1::EmptyEnum ;
  Some (e1) -> â¥ : test1::EmptyEnum ;
  Some (enum0) -> â¥ : test1::Enum ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  (p).y := 67: u32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 23: u32 ;
  Some (y) -> 44: u32 ;
  Some (z) -> 67: u32 ;
  Some (p) -> test1::Pair { x = 23: u32; y = â¥ : u32; } ;
  Some (var@5) -> â¥ : u32 ;
  Some (s) -> â¥ : test1::Sum<u32, bool> ;
  Some (o) -> â¥ : test1::One<u64> ;
  Some (e0) -> â¥ : test1::EmptyEnum ;
  Some (e1) -> â¥ : test1::EmptyEnum ;
  Some (enum0) -> â¥ : test1::Enum ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 23: u32 ;
  Some (y) -> 44: u32 ;
  Some (z) -> 67: u32 ;
  Some (p) -> test1::Pair { x = 23: u32; y = â¥ : u32; } ;
  Some (var@5) -> â¥ : u32 ;
  Some (s) -> â¥ : test1::Sum<u32, bool> ;
  Some (o) -> â¥ : test1::One<u64> ;
  Some (e0) -> â¥ : test1::EmptyEnum ;
  Some (e1) -> â¥ : test1::EmptyEnum ;
  Some (enum0) -> â¥ : test1::Enum ;
}


- op:
67: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  (s as test1::Sum::Right).0 := true;
  set_discriminant(s, 1);
  (o as test1::One::One).0 := 3: u64;
  set_discriminant(o, 0);
  set_discriminant(e0, 0);
  set_discriminant(enum0, 0);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 23: u32 ;
  Some (y) -> 44: u32 ;
  Some (z) -> 67: u32 ;
  Some (p) -> test1::Pair { x = 23: u32; y = 67: u32; } ;
  Some (var@5) -> â¥ : u32 ;
  Some (s) -> â¥ : test1::Sum<u32, bool> ;
  Some (o) -> â¥ : test1::One<u64> ;
  Some (e0) -> â¥ : test1::EmptyEnum ;
  Some (e1) -> â¥ : test1::EmptyEnum ;
  Some (enum0) -> â¥ : test1::Enum ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  (s as test1::Sum::Right).0 := true
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 23: u32 ;
  Some (y) -> 44: u32 ;
  Some (z) -> 67: u32 ;
  Some (p) -> test1::Pair { x = 23: u32; y = 67: u32; } ;
  Some (var@5) -> â¥ : u32 ;
  Some (s) -> â¥ : test1::Sum<u32, bool> ;
  Some (o) -> â¥ : test1::One<u64> ;
  Some (e0) -> â¥ : test1::EmptyEnum ;
  Some (e1) -> â¥ : test1::EmptyEnum ;
  Some (enum0) -> â¥ : test1::Enum ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 23: u32 ;
  Some (y) -> 44: u32 ;
  Some (z) -> 67: u32 ;
  Some (p) -> test1::Pair { x = 23: u32; y = 67: u32; } ;
  Some (var@5) -> â¥ : u32 ;
  Some (s) -> â¥ : test1::Sum<u32, bool> ;
  Some (o) -> â¥ : test1::One<u64> ;
  Some (e0) -> â¥ : test1::EmptyEnum ;
  Some (e1) -> â¥ : test1::EmptyEnum ;
  Some (enum0) -> â¥ : test1::Enum ;
}


- op:
true

[[32mDebug[39m] expand_bottom_value_from_projection:
pe: (Expressions.Field ((Expressions.ProjAdt (6, (Some 1))), 0))
ty: (Types.Adt ((Types.AdtId 6), [], [(Types.Integer Types.U32); Types.Bool]))
[[32mDebug[39m] 
**About to evaluate statement**: [
  set_discriminant(s, 1);
  (o as test1::One::One).0 := 3: u64;
  set_discriminant(o, 0);
  set_discriminant(e0, 0);
  set_discriminant(enum0, 0);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 23: u32 ;
  Some (y) -> 44: u32 ;
  Some (z) -> 67: u32 ;
  Some (p) -> test1::Pair { x = 23: u32; y = 67: u32; } ;
  Some (var@5) -> â¥ : u32 ;
  Some (s) -> test1::Sum::Right { 0 = true; } ;
  Some (o) -> â¥ : test1::One<u64> ;
  Some (e0) -> â¥ : test1::EmptyEnum ;
  Some (e1) -> â¥ : test1::EmptyEnum ;
  Some (enum0) -> â¥ : test1::Enum ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  set_discriminant(s, 1)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 23: u32 ;
  Some (y) -> 44: u32 ;
  Some (z) -> 67: u32 ;
  Some (p) -> test1::Pair { x = 23: u32; y = 67: u32; } ;
  Some (var@5) -> â¥ : u32 ;
  Some (s) -> test1::Sum::Right { 0 = true; } ;
  Some (o) -> â¥ : test1::One<u64> ;
  Some (e0) -> â¥ : test1::EmptyEnum ;
  Some (e1) -> â¥ : test1::EmptyEnum ;
  Some (enum0) -> â¥ : test1::Enum ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  (o as test1::One::One).0 := 3: u64;
  set_discriminant(o, 0);
  set_discriminant(e0, 0);
  set_discriminant(enum0, 0);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 23: u32 ;
  Some (y) -> 44: u32 ;
  Some (z) -> 67: u32 ;
  Some (p) -> test1::Pair { x = 23: u32; y = 67: u32; } ;
  Some (var@5) -> â¥ : u32 ;
  Some (s) -> test1::Sum::Right { 0 = true; } ;
  Some (o) -> â¥ : test1::One<u64> ;
  Some (e0) -> â¥ : test1::EmptyEnum ;
  Some (e1) -> â¥ : test1::EmptyEnum ;
  Some (enum0) -> â¥ : test1::Enum ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  (o as test1::One::One).0 := 3: u64
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 23: u32 ;
  Some (y) -> 44: u32 ;
  Some (z) -> 67: u32 ;
  Some (p) -> test1::Pair { x = 23: u32; y = 67: u32; } ;
  Some (var@5) -> â¥ : u32 ;
  Some (s) -> test1::Sum::Right { 0 = true; } ;
  Some (o) -> â¥ : test1::One<u64> ;
  Some (e0) -> â¥ : test1::EmptyEnum ;
  Some (e1) -> â¥ : test1::EmptyEnum ;
  Some (enum0) -> â¥ : test1::Enum ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 23: u32 ;
  Some (y) -> 44: u32 ;
  Some (z) -> 67: u32 ;
  Some (p) -> test1::Pair { x = 23: u32; y = 67: u32; } ;
  Some (var@5) -> â¥ : u32 ;
  Some (s) -> test1::Sum::Right { 0 = true; } ;
  Some (o) -> â¥ : test1::One<u64> ;
  Some (e0) -> â¥ : test1::EmptyEnum ;
  Some (e1) -> â¥ : test1::EmptyEnum ;
  Some (enum0) -> â¥ : test1::Enum ;
}


- op:
3: u64

[[32mDebug[39m] expand_bottom_value_from_projection:
pe: (Expressions.Field ((Expressions.ProjAdt (2, (Some 0))), 0))
ty: (Types.Adt ((Types.AdtId 2), [], [(Types.Integer Types.U64)]))
[[32mDebug[39m] 
**About to evaluate statement**: [
  set_discriminant(o, 0);
  set_discriminant(e0, 0);
  set_discriminant(enum0, 0);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 23: u32 ;
  Some (y) -> 44: u32 ;
  Some (z) -> 67: u32 ;
  Some (p) -> test1::Pair { x = 23: u32; y = 67: u32; } ;
  Some (var@5) -> â¥ : u32 ;
  Some (s) -> test1::Sum::Right { 0 = true; } ;
  Some (o) -> test1::One::One { 0 = 3: u64; } ;
  Some (e0) -> â¥ : test1::EmptyEnum ;
  Some (e1) -> â¥ : test1::EmptyEnum ;
  Some (enum0) -> â¥ : test1::Enum ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  set_discriminant(o, 0)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 23: u32 ;
  Some (y) -> 44: u32 ;
  Some (z) -> 67: u32 ;
  Some (p) -> test1::Pair { x = 23: u32; y = 67: u32; } ;
  Some (var@5) -> â¥ : u32 ;
  Some (s) -> test1::Sum::Right { 0 = true; } ;
  Some (o) -> test1::One::One { 0 = 3: u64; } ;
  Some (e0) -> â¥ : test1::EmptyEnum ;
  Some (e1) -> â¥ : test1::EmptyEnum ;
  Some (enum0) -> â¥ : test1::Enum ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  set_discriminant(e0, 0);
  set_discriminant(enum0, 0);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 23: u32 ;
  Some (y) -> 44: u32 ;
  Some (z) -> 67: u32 ;
  Some (p) -> test1::Pair { x = 23: u32; y = 67: u32; } ;
  Some (var@5) -> â¥ : u32 ;
  Some (s) -> test1::Sum::Right { 0 = true; } ;
  Some (o) -> test1::One::One { 0 = 3: u64; } ;
  Some (e0) -> â¥ : test1::EmptyEnum ;
  Some (e1) -> â¥ : test1::EmptyEnum ;
  Some (enum0) -> â¥ : test1::Enum ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  set_discriminant(e0, 0)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 23: u32 ;
  Some (y) -> 44: u32 ;
  Some (z) -> 67: u32 ;
  Some (p) -> test1::Pair { x = 23: u32; y = 67: u32; } ;
  Some (var@5) -> â¥ : u32 ;
  Some (s) -> test1::Sum::Right { 0 = true; } ;
  Some (o) -> test1::One::One { 0 = 3: u64; } ;
  Some (e0) -> â¥ : test1::EmptyEnum ;
  Some (e1) -> â¥ : test1::EmptyEnum ;
  Some (enum0) -> â¥ : test1::Enum ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  set_discriminant(enum0, 0);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 23: u32 ;
  Some (y) -> 44: u32 ;
  Some (z) -> 67: u32 ;
  Some (p) -> test1::Pair { x = 23: u32; y = 67: u32; } ;
  Some (var@5) -> â¥ : u32 ;
  Some (s) -> test1::Sum::Right { 0 = true; } ;
  Some (o) -> test1::One::One { 0 = 3: u64; } ;
  Some (e0) -> test1::EmptyEnum::Empty ;
  Some (e1) -> â¥ : test1::EmptyEnum ;
  Some (enum0) -> â¥ : test1::Enum ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  set_discriminant(enum0, 0)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 23: u32 ;
  Some (y) -> 44: u32 ;
  Some (z) -> 67: u32 ;
  Some (p) -> test1::Pair { x = 23: u32; y = 67: u32; } ;
  Some (var@5) -> â¥ : u32 ;
  Some (s) -> test1::Sum::Right { 0 = true; } ;
  Some (o) -> test1::One::One { 0 = 3: u64; } ;
  Some (e0) -> test1::EmptyEnum::Empty ;
  Some (e1) -> â¥ : test1::EmptyEnum ;
  Some (enum0) -> â¥ : test1::Enum ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 23: u32 ;
  Some (y) -> 44: u32 ;
  Some (z) -> 67: u32 ;
  Some (p) -> test1::Pair { x = 23: u32; y = 67: u32; } ;
  Some (var@5) -> â¥ : u32 ;
  Some (s) -> test1::Sum::Right { 0 = true; } ;
  Some (o) -> test1::One::One { 0 = 3: u64; } ;
  Some (e0) -> test1::EmptyEnum::Empty ;
  Some (e1) -> â¥ : test1::EmptyEnum ;
  Some (enum0) -> test1::Enum::Variant1 ;
}



[[32mDebug[39m] test_function_symbolic: get_max
[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := copy x;
  var@5 := copy y;
  var@3 := move var@4 >= move var@5;
  if (move var@3) {
    var@0 := copy x
  }
  else {
    var@0 := copy y
  };
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := copy x
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
}


- op:
copy x

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := copy y;
  var@3 := move var@4 >= move var@5;
  if (move var@3) {
    var@0 := copy x
  }
  else {
    var@0 := copy y
  };
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> s@0 : u32 ;
  Some (var@5) -> â¥ : u32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := copy y
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> s@0 : u32 ;
  Some (var@5) -> â¥ : u32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> s@0 : u32 ;
  Some (var@5) -> â¥ : u32 ;
}


- op:
copy y

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@3 := move var@4 >= move var@5;
  if (move var@3) {
    var@0 := copy x
  }
  else {
    var@0 := copy y
  };
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> s@0 : u32 ;
  Some (var@5) -> s@1 : u32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@3 := move var@4 >= move var@5
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> s@0 : u32 ;
  Some (var@5) -> s@1 : u32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> s@0 : u32 ;
  Some (var@5) -> s@1 : u32 ;
}


- op:
move var@4

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> s@1 : u32 ;
}


- op:
move var@5

[[32mDebug[39m] 
**About to evaluate statement**: [
  if (move var@3) {
    var@0 := copy x
  }
  else {
    var@0 := copy y
  };
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (var@3) -> s@2 : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  if (move var@3) {
    var@0 := copy x
  }
  else {
    var@0 := copy y
  }
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (var@3) -> s@2 : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (var@3) -> true ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
}


- op:
move var@3

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@0 := copy x
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
}


- op:
copy x

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (var@3) -> false ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
}


- op:
move var@3

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@0 := copy y
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : u32 ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
}


- op:
copy y

[[32mDebug[39m] 
**About to evaluate statement**: [
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> s@0 : u32 ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> s@1 : u32 ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
}



[[32mDebug[39m] test_function_symbolic: test3
[[32mDebug[39m] 
**About to evaluate statement**: [
  x := move get_max(4: u32, 3: u32);
  y := move get_max(10: u32, 11: u32);
  var@4 := copy x;
  var@5 := copy y;
  z := copy var@4 + copy var@5;
  var@9 := copy z;
  var@8 := move var@9 == 15: u32;
  var@7 := Â¬ move var@8;
  assert(Â¬move var@7);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (y) -> â¥ : u32 ;
  Some (z) -> â¥ : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  x := move get_max(4: u32, 3: u32)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (y) -> â¥ : u32 ;
  Some (z) -> â¥ : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (y) -> â¥ : u32 ;
  Some (z) -> â¥ : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
}


- op:
4: u32

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (y) -> â¥ : u32 ;
  Some (z) -> â¥ : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
}


- op:
3: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  y := move get_max(10: u32, 11: u32);
  var@4 := copy x;
  var@5 := copy y;
  z := copy var@4 + copy var@5;
  var@9 := copy z;
  var@8 := move var@9 == 15: u32;
  var@7 := Â¬ move var@8;
  assert(Â¬move var@7);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> â¥ : u32 ;
  Some (z) -> â¥ : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  y := move get_max(10: u32, 11: u32)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> â¥ : u32 ;
  Some (z) -> â¥ : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> â¥ : u32 ;
  Some (z) -> â¥ : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
}


- op:
10: u32

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> â¥ : u32 ;
  Some (z) -> â¥ : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
}


- op:
11: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := copy x;
  var@5 := copy y;
  z := copy var@4 + copy var@5;
  var@9 := copy z;
  var@8 := move var@9 == 15: u32;
  var@7 := Â¬ move var@8;
  assert(Â¬move var@7);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (z) -> â¥ : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := copy x
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (z) -> â¥ : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (z) -> â¥ : u32 ;
  Some (var@4) -> â¥ : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
}


- op:
copy x

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := copy y;
  z := copy var@4 + copy var@5;
  var@9 := copy z;
  var@8 := move var@9 == 15: u32;
  var@7 := Â¬ move var@8;
  assert(Â¬move var@7);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (z) -> â¥ : u32 ;
  Some (var@4) -> s@0 : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := copy y
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (z) -> â¥ : u32 ;
  Some (var@4) -> s@0 : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (z) -> â¥ : u32 ;
  Some (var@4) -> s@0 : u32 ;
  Some (var@5) -> â¥ : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
}


- op:
copy y

[[32mDebug[39m] 
**About to evaluate statement**: [
  z := copy var@4 + copy var@5;
  var@9 := copy z;
  var@8 := move var@9 == 15: u32;
  var@7 := Â¬ move var@8;
  assert(Â¬move var@7);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (z) -> â¥ : u32 ;
  Some (var@4) -> s@0 : u32 ;
  Some (var@5) -> s@1 : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  z := copy var@4 + copy var@5
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (z) -> â¥ : u32 ;
  Some (var@4) -> s@0 : u32 ;
  Some (var@5) -> s@1 : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (z) -> â¥ : u32 ;
  Some (var@4) -> s@0 : u32 ;
  Some (var@5) -> s@1 : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
}


- op:
copy var@4

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (z) -> â¥ : u32 ;
  Some (var@4) -> s@0 : u32 ;
  Some (var@5) -> s@1 : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
}


- op:
copy var@5

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@9 := copy z;
  var@8 := move var@9 == 15: u32;
  var@7 := Â¬ move var@8;
  assert(Â¬move var@7);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (z) -> s@2 : u32 ;
  Some (var@4) -> s@0 : u32 ;
  Some (var@5) -> s@1 : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@9 := copy z
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (z) -> s@2 : u32 ;
  Some (var@4) -> s@0 : u32 ;
  Some (var@5) -> s@1 : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (z) -> s@2 : u32 ;
  Some (var@4) -> s@0 : u32 ;
  Some (var@5) -> s@1 : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
}


- op:
copy z

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := move var@9 == 15: u32;
  var@7 := Â¬ move var@8;
  assert(Â¬move var@7);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (z) -> s@2 : u32 ;
  Some (var@4) -> s@0 : u32 ;
  Some (var@5) -> s@1 : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> s@2 : u32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := move var@9 == 15: u32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (z) -> s@2 : u32 ;
  Some (var@4) -> s@0 : u32 ;
  Some (var@5) -> s@1 : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> s@2 : u32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (z) -> s@2 : u32 ;
  Some (var@4) -> s@0 : u32 ;
  Some (var@5) -> s@1 : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> s@2 : u32 ;
}


- op:
move var@9

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (z) -> s@2 : u32 ;
  Some (var@4) -> s@0 : u32 ;
  Some (var@5) -> s@1 : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
}


- op:
15: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := Â¬ move var@8;
  assert(Â¬move var@7);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (z) -> s@2 : u32 ;
  Some (var@4) -> s@0 : u32 ;
  Some (var@5) -> s@1 : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> s@3 : bool ;
  Some (var@9) -> â¥ : u32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := Â¬ move var@8
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (z) -> s@2 : u32 ;
  Some (var@4) -> s@0 : u32 ;
  Some (var@5) -> s@1 : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> s@3 : bool ;
  Some (var@9) -> â¥ : u32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (z) -> s@2 : u32 ;
  Some (var@4) -> s@0 : u32 ;
  Some (var@5) -> s@1 : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> s@3 : bool ;
  Some (var@9) -> â¥ : u32 ;
}


- op:
move var@8

[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@7);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (z) -> s@2 : u32 ;
  Some (var@4) -> s@0 : u32 ;
  Some (var@5) -> s@1 : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> s@4 : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@7)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (z) -> s@2 : u32 ;
  Some (var@4) -> s@0 : u32 ;
  Some (var@5) -> s@1 : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> s@4 : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (z) -> s@2 : u32 ;
  Some (var@4) -> s@0 : u32 ;
  Some (var@5) -> s@1 : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> true ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
}


- op:
move var@7

[[32mDebug[39m] 
**About to evaluate statement**: [
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (y) -> s@1 : u32 ;
  Some (z) -> s@2 : u32 ;
  Some (var@4) -> s@0 : u32 ;
  Some (var@5) -> s@1 : u32 ;
  Some (var@6) -> â¥ : (u32, bool) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : u32 ;
}



[[32mDebug[39m] test_function_symbolic: test_neg
[[32mDebug[39m] 
**About to evaluate statement**: [
  var@2 := copy x;
  var@3 := copy var@2 == -2147483648: i32;
  assert(Â¬move var@3);
  var@0 := - move var@2;
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : i32 ;
  Some (x) -> s@0 : i32 ;
  Some (var@2) -> â¥ : i32 ;
  Some (var@3) -> â¥ : bool ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@2 := copy x
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : i32 ;
  Some (x) -> s@0 : i32 ;
  Some (var@2) -> â¥ : i32 ;
  Some (var@3) -> â¥ : bool ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : i32 ;
  Some (x) -> s@0 : i32 ;
  Some (var@2) -> â¥ : i32 ;
  Some (var@3) -> â¥ : bool ;
}


- op:
copy x

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@3 := copy var@2 == -2147483648: i32;
  assert(Â¬move var@3);
  var@0 := - move var@2;
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : i32 ;
  Some (x) -> s@0 : i32 ;
  Some (var@2) -> s@0 : i32 ;
  Some (var@3) -> â¥ : bool ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@3 := copy var@2 == -2147483648: i32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : i32 ;
  Some (x) -> s@0 : i32 ;
  Some (var@2) -> s@0 : i32 ;
  Some (var@3) -> â¥ : bool ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : i32 ;
  Some (x) -> s@0 : i32 ;
  Some (var@2) -> s@0 : i32 ;
  Some (var@3) -> â¥ : bool ;
}


- op:
copy var@2

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : i32 ;
  Some (x) -> s@0 : i32 ;
  Some (var@2) -> s@0 : i32 ;
  Some (var@3) -> â¥ : bool ;
}


- op:
-2147483648: i32

[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@3);
  var@0 := - move var@2;
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : i32 ;
  Some (x) -> s@0 : i32 ;
  Some (var@2) -> s@0 : i32 ;
  Some (var@3) -> s@1 : bool ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@3)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : i32 ;
  Some (x) -> s@0 : i32 ;
  Some (var@2) -> s@0 : i32 ;
  Some (var@3) -> s@1 : bool ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : i32 ;
  Some (x) -> s@0 : i32 ;
  Some (var@2) -> s@0 : i32 ;
  Some (var@3) -> true ;
}


- op:
move var@3

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@0 := - move var@2;
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : i32 ;
  Some (x) -> s@0 : i32 ;
  Some (var@2) -> s@0 : i32 ;
  Some (var@3) -> â¥ : bool ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@0 := - move var@2
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : i32 ;
  Some (x) -> s@0 : i32 ;
  Some (var@2) -> s@0 : i32 ;
  Some (var@3) -> â¥ : bool ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : i32 ;
  Some (x) -> s@0 : i32 ;
  Some (var@2) -> s@0 : i32 ;
  Some (var@3) -> â¥ : bool ;
}


- op:
move var@2

[[32mDebug[39m] 
**About to evaluate statement**: [
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> s@2 : i32 ;
  Some (x) -> s@0 : i32 ;
  Some (var@2) -> â¥ : i32 ;
  Some (var@3) -> â¥ : bool ;
}



[[32mDebug[39m] test_function_symbolic: test_neg1
[[32mDebug[39m] 
**About to evaluate statement**: [
  x := 3: i32;
  y := -3: i32;
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : i32 ;
  Some (y) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  x := 3: i32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : i32 ;
  Some (y) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : i32 ;
  Some (y) -> â¥ : i32 ;
}


- op:
3: i32

[[32mDebug[39m] 
**About to evaluate statement**: [
  y := -3: i32;
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 3: i32 ;
  Some (y) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  y := -3: i32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 3: i32 ;
  Some (y) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 3: i32 ;
  Some (y) -> â¥ : i32 ;
}


- op:
-3: i32

[[32mDebug[39m] 
**About to evaluate statement**: [
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 3: i32 ;
  Some (y) -> -3: i32 ;
}



[[32mDebug[39m] test_function_symbolic: refs_test1
[[32mDebug[39m] 
**About to evaluate statement**: [
  x := 0: i32;
  px := &mut x;
  ppx := &mut px;
  *(*(ppx)) := 1: i32;
  var@6 := copy x;
  var@5 := move var@6 == 1: i32;
  var@4 := Â¬ move var@5;
  assert(Â¬move var@4);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  x := 0: i32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : i32 ;
}


- op:
0: i32

[[32mDebug[39m] 
**About to evaluate statement**: [
  px := &mut x;
  ppx := &mut px;
  *(*(ppx)) := 1: i32;
  var@6 := copy x;
  var@5 := move var@6 == 1: i32;
  var@4 := Â¬ move var@5;
  assert(Â¬move var@4);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  px := &mut x
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  ppx := &mut px;
  *(*(ppx)) := 1: i32;
  var@6 := copy x;
  var@5 := move var@6 == 1: i32;
  var@4 := Â¬ move var@5;
  assert(Â¬move var@4);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@0 (0: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  ppx := &mut px
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@0 (0: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  *(*(ppx)) := 1: i32;
  var@6 := copy x;
  var@5 := move var@6 == 1: i32;
  var@4 := Â¬ move var@5;
  assert(Â¬move var@4);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (&mut@0 (0: i32)) ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  *(*(ppx)) := 1: i32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (&mut@0 (0: i32)) ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (&mut@0 (0: i32)) ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : i32 ;
}


- op:
1: i32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@6 := copy x;
  var@5 := move var@6 == 1: i32;
  var@4 := Â¬ move var@5;
  assert(Â¬move var@4);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (&mut@0 (1: i32)) ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@6 := copy x
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (&mut@0 (1: i32)) ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (&mut@0 (1: i32)) ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : i32 ;
}


- op:
copy x

[[32mDebug[39m] end borrow: 0:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (&mut@0 (1: i32)) ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : i32 ;
}

[[32mDebug[39m] end borrow: 0: found outer borrows/abs:(InterpreterBorrowsCore.OuterBorrows (InterpreterBorrowsCore.Borrow 1))
[[32mDebug[39m] end borrow: 1:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (&mut@0 (1: i32)) ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : i32 ;
}

[[32mDebug[39m] give_back:
- bid: 1
- content: &mut@1 (&mut@0 (1: i32))
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : i32 ;
}


[[32mDebug[39m] give_back_value:
- bid: 1
- value: &mut@0 (1: i32)
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : i32 ;
}


[[32mDebug[39m] end borrow: 0:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@0 (1: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : i32 ;
}

[[32mDebug[39m] give_back:
- bid: 0
- content: &mut@0 (1: i32)
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : i32 ;
}


[[32mDebug[39m] give_back_value:
- bid: 0
- value: 1: i32
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : i32 ;
}


[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := move var@6 == 1: i32;
  var@4 := Â¬ move var@5;
  assert(Â¬move var@4);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> 1: i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := move var@6 == 1: i32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> 1: i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> 1: i32 ;
}


- op:
move var@6

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : i32 ;
}


- op:
1: i32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := Â¬ move var@5;
  assert(Â¬move var@4);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> s@0 : bool ;
  Some (var@6) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := Â¬ move var@5
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> s@0 : bool ;
  Some (var@6) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> s@0 : bool ;
  Some (var@6) -> â¥ : i32 ;
}


- op:
move var@5

[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@4);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@4) -> s@1 : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@4)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@4) -> s@1 : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@4) -> true ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : i32 ;
}


- op:
move var@4

[[32mDebug[39m] 
**About to evaluate statement**: [
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 1: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : i32 ;
}



[[32mDebug[39m] test_function_symbolic: refs_test2
[[32mDebug[39m] 
**About to evaluate statement**: [
  x := 0: i32;
  y := 1: i32;
  px := &mut x;
  py := &mut y;
  ppx := &mut px;
  var@6 := &mut *(py);
  *(ppx) := move var@6;
  *(*(ppx)) := 2: i32;
  var@9 := copy *(px);
  var@8 := move var@9 == 2: i32;
  var@7 := Â¬ move var@8;
  assert(Â¬move var@7);
  var@12 := copy x;
  var@11 := move var@12 == 0: i32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  var@15 := copy *(py);
  var@14 := move var@15 == 2: i32;
  var@13 := Â¬ move var@14;
  assert(Â¬move var@13);
  var@18 := copy y;
  var@17 := move var@18 == 2: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : i32 ;
  Some (y) -> â¥ : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  x := 0: i32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : i32 ;
  Some (y) -> â¥ : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : i32 ;
  Some (y) -> â¥ : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}


- op:
0: i32

[[32mDebug[39m] 
**About to evaluate statement**: [
  y := 1: i32;
  px := &mut x;
  py := &mut y;
  ppx := &mut px;
  var@6 := &mut *(py);
  *(ppx) := move var@6;
  *(*(ppx)) := 2: i32;
  var@9 := copy *(px);
  var@8 := move var@9 == 2: i32;
  var@7 := Â¬ move var@8;
  assert(Â¬move var@7);
  var@12 := copy x;
  var@11 := move var@12 == 0: i32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  var@15 := copy *(py);
  var@14 := move var@15 == 2: i32;
  var@13 := Â¬ move var@14;
  assert(Â¬move var@13);
  var@18 := copy y;
  var@17 := move var@18 == 2: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> â¥ : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  y := 1: i32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> â¥ : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> â¥ : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}


- op:
1: i32

[[32mDebug[39m] 
**About to evaluate statement**: [
  px := &mut x;
  py := &mut y;
  ppx := &mut px;
  var@6 := &mut *(py);
  *(ppx) := move var@6;
  *(*(ppx)) := 2: i32;
  var@9 := copy *(px);
  var@8 := move var@9 == 2: i32;
  var@7 := Â¬ move var@8;
  assert(Â¬move var@7);
  var@12 := copy x;
  var@11 := move var@12 == 0: i32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  var@15 := copy *(py);
  var@14 := move var@15 == 2: i32;
  var@13 := Â¬ move var@14;
  assert(Â¬move var@13);
  var@18 := copy y;
  var@17 := move var@18 == 2: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> 1: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  px := &mut x
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> 1: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  py := &mut y;
  ppx := &mut px;
  var@6 := &mut *(py);
  *(ppx) := move var@6;
  *(*(ppx)) := 2: i32;
  var@9 := copy *(px);
  var@8 := move var@9 == 2: i32;
  var@7 := Â¬ move var@8;
  assert(Â¬move var@7);
  var@12 := copy x;
  var@11 := move var@12 == 0: i32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  var@15 := copy *(py);
  var@14 := move var@15 == 2: i32;
  var@13 := Â¬ move var@14;
  assert(Â¬move var@13);
  var@18 := copy y;
  var@17 := move var@18 == 2: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> 1: i32 ;
  Some (px) -> &mut@0 (0: i32) ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  py := &mut y
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> 1: i32 ;
  Some (px) -> &mut@0 (0: i32) ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  ppx := &mut px;
  var@6 := &mut *(py);
  *(ppx) := move var@6;
  *(*(ppx)) := 2: i32;
  var@9 := copy *(px);
  var@8 := move var@9 == 2: i32;
  var@7 := Â¬ move var@8;
  assert(Â¬move var@7);
  var@12 := copy x;
  var@11 := move var@12 == 0: i32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  var@15 := copy *(py);
  var@14 := move var@15 == 2: i32;
  var@13 := Â¬ move var@14;
  assert(Â¬move var@13);
  var@18 := copy y;
  var@17 := move var@18 == 2: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@1â ;
  Some (px) -> &mut@0 (0: i32) ;
  Some (py) -> &mut@1 (1: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  ppx := &mut px
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@1â ;
  Some (px) -> &mut@0 (0: i32) ;
  Some (py) -> &mut@1 (1: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@6 := &mut *(py);
  *(ppx) := move var@6;
  *(*(ppx)) := 2: i32;
  var@9 := copy *(px);
  var@8 := move var@9 == 2: i32;
  var@7 := Â¬ move var@8;
  assert(Â¬move var@7);
  var@12 := copy x;
  var@11 := move var@12 == 0: i32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  var@15 := copy *(py);
  var@14 := move var@15 == 2: i32;
  var@13 := Â¬ move var@14;
  assert(Â¬move var@13);
  var@18 := copy y;
  var@17 := move var@18 == 2: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@1â ;
  Some (px) -> âmut@2â ;
  Some (py) -> &mut@1 (1: i32) ;
  Some (ppx) -> &mut@2 (&mut@0 (0: i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@6 := &mut *(py)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@1â ;
  Some (px) -> âmut@2â ;
  Some (py) -> &mut@1 (1: i32) ;
  Some (ppx) -> &mut@2 (&mut@0 (0: i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  *(ppx) := move var@6;
  *(*(ppx)) := 2: i32;
  var@9 := copy *(px);
  var@8 := move var@9 == 2: i32;
  var@7 := Â¬ move var@8;
  assert(Â¬move var@7);
  var@12 := copy x;
  var@11 := move var@12 == 0: i32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  var@15 := copy *(py);
  var@14 := move var@15 == 2: i32;
  var@13 := Â¬ move var@14;
  assert(Â¬move var@13);
  var@18 := copy y;
  var@17 := move var@18 == 2: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@1â ;
  Some (px) -> âmut@2â ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> &mut@2 (&mut@0 (0: i32)) ;
  Some (var@6) -> &mut@3 (1: i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  *(ppx) := move var@6
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@1â ;
  Some (px) -> âmut@2â ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> &mut@2 (&mut@0 (0: i32)) ;
  Some (var@6) -> &mut@3 (1: i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@1â ;
  Some (px) -> âmut@2â ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> &mut@2 (&mut@0 (0: i32)) ;
  Some (var@6) -> &mut@3 (1: i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}


- op:
move var@6

[[32mDebug[39m] end borrow: 0:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@1â ;
  Some (px) -> âmut@2â ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> &mut@2 (â¥ : &'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  None -> &mut@3 (1: i32) ;
  None -> &mut@0 (0: i32) ;
}

[[32mDebug[39m] give_back:
- bid: 0
- content: &mut@0 (0: i32)
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@1â ;
  Some (px) -> âmut@2â ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> &mut@2 (â¥ : &'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  None -> &mut@3 (1: i32) ;
  None -> â¥ : &'_ mut (i32) ;
}


[[32mDebug[39m] give_back_value:
- bid: 0
- value: 0: i32
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@1â ;
  Some (px) -> âmut@2â ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> &mut@2 (â¥ : &'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  None -> &mut@3 (1: i32) ;
  None -> â¥ : &'_ mut (i32) ;
}


[[32mDebug[39m] 
**About to evaluate statement**: [
  *(*(ppx)) := 2: i32;
  var@9 := copy *(px);
  var@8 := move var@9 == 2: i32;
  var@7 := Â¬ move var@8;
  assert(Â¬move var@7);
  var@12 := copy x;
  var@11 := move var@12 == 0: i32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  var@15 := copy *(py);
  var@14 := move var@15 == 2: i32;
  var@13 := Â¬ move var@14;
  assert(Â¬move var@13);
  var@18 := copy y;
  var@17 := move var@18 == 2: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> âmut@2â ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> &mut@2 (&mut@3 (1: i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  *(*(ppx)) := 2: i32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> âmut@2â ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> &mut@2 (&mut@3 (1: i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> âmut@2â ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> &mut@2 (&mut@3 (1: i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}


- op:
2: i32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@9 := copy *(px);
  var@8 := move var@9 == 2: i32;
  var@7 := Â¬ move var@8;
  assert(Â¬move var@7);
  var@12 := copy x;
  var@11 := move var@12 == 0: i32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  var@15 := copy *(py);
  var@14 := move var@15 == 2: i32;
  var@13 := Â¬ move var@14;
  assert(Â¬move var@13);
  var@18 := copy y;
  var@17 := move var@18 == 2: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> âmut@2â ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> &mut@2 (&mut@3 (2: i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@9 := copy *(px)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> âmut@2â ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> &mut@2 (&mut@3 (2: i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> âmut@2â ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> &mut@2 (&mut@3 (2: i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}


- op:
copy *(px)

[[32mDebug[39m] end borrow: 2:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> âmut@2â ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> &mut@2 (&mut@3 (2: i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}

[[32mDebug[39m] give_back:
- bid: 2
- content: &mut@2 (&mut@3 (2: i32))
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> âmut@2â ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}


[[32mDebug[39m] give_back_value:
- bid: 2
- value: &mut@3 (2: i32)
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> âmut@2â ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}


[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := move var@9 == 2: i32;
  var@7 := Â¬ move var@8;
  assert(Â¬move var@7);
  var@12 := copy x;
  var@11 := move var@12 == 0: i32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  var@15 := copy *(py);
  var@14 := move var@15 == 2: i32;
  var@13 := Â¬ move var@14;
  assert(Â¬move var@13);
  var@18 := copy y;
  var@17 := move var@18 == 2: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> &mut@3 (2: i32) ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> 2: i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := move var@9 == 2: i32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> &mut@3 (2: i32) ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> 2: i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> &mut@3 (2: i32) ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> 2: i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}


- op:
move var@9

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> &mut@3 (2: i32) ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}


- op:
2: i32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := Â¬ move var@8;
  assert(Â¬move var@7);
  var@12 := copy x;
  var@11 := move var@12 == 0: i32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  var@15 := copy *(py);
  var@14 := move var@15 == 2: i32;
  var@13 := Â¬ move var@14;
  assert(Â¬move var@13);
  var@18 := copy y;
  var@17 := move var@18 == 2: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> &mut@3 (2: i32) ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> s@0 : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := Â¬ move var@8
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> &mut@3 (2: i32) ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> s@0 : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> &mut@3 (2: i32) ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> s@0 : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}


- op:
move var@8

[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@7);
  var@12 := copy x;
  var@11 := move var@12 == 0: i32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  var@15 := copy *(py);
  var@14 := move var@15 == 2: i32;
  var@13 := Â¬ move var@14;
  assert(Â¬move var@13);
  var@18 := copy y;
  var@17 := move var@18 == 2: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> &mut@3 (2: i32) ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> s@1 : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@7)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> &mut@3 (2: i32) ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> s@1 : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> &mut@3 (2: i32) ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> true ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}


- op:
move var@7

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@12 := copy x;
  var@11 := move var@12 == 0: i32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  var@15 := copy *(py);
  var@14 := move var@15 == 2: i32;
  var@13 := Â¬ move var@14;
  assert(Â¬move var@13);
  var@18 := copy y;
  var@17 := move var@18 == 2: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> &mut@3 (2: i32) ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@12 := copy x
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> &mut@3 (2: i32) ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> &mut@3 (2: i32) ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}


- op:
copy x

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@11 := move var@12 == 0: i32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  var@15 := copy *(py);
  var@14 := move var@15 == 2: i32;
  var@13 := Â¬ move var@14;
  assert(Â¬move var@13);
  var@18 := copy y;
  var@17 := move var@18 == 2: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> &mut@3 (2: i32) ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> 0: i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@11 := move var@12 == 0: i32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> &mut@3 (2: i32) ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> 0: i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> &mut@3 (2: i32) ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> 0: i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}


- op:
move var@12

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> &mut@3 (2: i32) ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}


- op:
0: i32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  var@15 := copy *(py);
  var@14 := move var@15 == 2: i32;
  var@13 := Â¬ move var@14;
  assert(Â¬move var@13);
  var@18 := copy y;
  var@17 := move var@18 == 2: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> &mut@3 (2: i32) ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> s@2 : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@10 := Â¬ move var@11
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> &mut@3 (2: i32) ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> s@2 : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> &mut@3 (2: i32) ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> s@2 : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}


- op:
move var@11

[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@10);
  var@15 := copy *(py);
  var@14 := move var@15 == 2: i32;
  var@13 := Â¬ move var@14;
  assert(Â¬move var@13);
  var@18 := copy y;
  var@17 := move var@18 == 2: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> &mut@3 (2: i32) ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> s@3 : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@10)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> &mut@3 (2: i32) ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> s@3 : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> &mut@3 (2: i32) ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> true ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}


- op:
move var@10

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@15 := copy *(py);
  var@14 := move var@15 == 2: i32;
  var@13 := Â¬ move var@14;
  assert(Â¬move var@13);
  var@18 := copy y;
  var@17 := move var@18 == 2: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> &mut@3 (2: i32) ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@15 := copy *(py)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> &mut@3 (2: i32) ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> &mut@3 (2: i32) ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}


- op:
copy *(py)

[[32mDebug[39m] end borrow: 3:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> &mut@3 (2: i32) ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}

[[32mDebug[39m] give_back:
- bid: 3
- content: &mut@3 (2: i32)
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}


[[32mDebug[39m] give_back_value:
- bid: 3
- value: 2: i32
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (py) -> &mut@1 (âmut@3â) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}


[[32mDebug[39m] 
**About to evaluate statement**: [
  var@14 := move var@15 == 2: i32;
  var@13 := Â¬ move var@14;
  assert(Â¬move var@13);
  var@18 := copy y;
  var@17 := move var@18 == 2: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (py) -> &mut@1 (2: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> 2: i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@14 := move var@15 == 2: i32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (py) -> &mut@1 (2: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> 2: i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (py) -> &mut@1 (2: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> 2: i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}


- op:
move var@15

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (py) -> &mut@1 (2: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}


- op:
2: i32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@13 := Â¬ move var@14;
  assert(Â¬move var@13);
  var@18 := copy y;
  var@17 := move var@18 == 2: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (py) -> &mut@1 (2: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> s@4 : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@13 := Â¬ move var@14
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (py) -> &mut@1 (2: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> s@4 : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (py) -> &mut@1 (2: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> s@4 : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}


- op:
move var@14

[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@13);
  var@18 := copy y;
  var@17 := move var@18 == 2: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (py) -> &mut@1 (2: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> s@5 : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@13)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (py) -> &mut@1 (2: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> s@5 : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (py) -> &mut@1 (2: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> true ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}


- op:
move var@13

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@18 := copy y;
  var@17 := move var@18 == 2: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (py) -> &mut@1 (2: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@18 := copy y
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (py) -> &mut@1 (2: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (py) -> &mut@1 (2: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}


- op:
copy y

[[32mDebug[39m] end borrow: 1:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (py) -> &mut@1 (2: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}

[[32mDebug[39m] give_back:
- bid: 1
- content: &mut@1 (2: i32)
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}


[[32mDebug[39m] give_back_value:
- bid: 1
- value: 2: i32
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> âmut@1â ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}


[[32mDebug[39m] 
**About to evaluate statement**: [
  var@17 := move var@18 == 2: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> 2: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> 2: i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@17 := move var@18 == 2: i32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> 2: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> 2: i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> 2: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> 2: i32 ;
}


- op:
move var@18

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> 2: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}


- op:
2: i32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> 2: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> s@6 : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@16 := Â¬ move var@17
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> 2: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> s@6 : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> 2: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> s@6 : bool ;
  Some (var@18) -> â¥ : i32 ;
}


- op:
move var@17

[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> 2: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> s@7 : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@16)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> 2: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> s@7 : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> 2: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> true ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}


- op:
move var@16

[[32mDebug[39m] 
**About to evaluate statement**: [
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> 2: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : i32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] test_function_symbolic: test_list1
[[32mDebug[39m] 
**About to evaluate statement**: [
  set_discriminant(var@3, 1);
  var@2 := move alloc::boxed::Box<test1::List<i32>>::new(move var@3);
  (l as test1::List::Cons).0 := 0: i32;
  (l as test1::List::Cons).1 := move var@2;
  set_discriminant(l, 0);
  drop(l);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  set_discriminant(var@3, 1)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@2 := move alloc::boxed::Box<test1::List<i32>>::new(move var@3);
  (l as test1::List::Cons).0 := 0: i32;
  (l as test1::List::Cons).1 := move var@2;
  set_discriminant(l, 0);
  drop(l);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> test1::List::Nil ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@2 := move alloc::boxed::Box<test1::List<i32>>::new(move var@3)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> test1::List::Nil ;
}



[[32mDebug[39m] eval_non_local_function_call:
- fid:CfimAst.BoxNew
- type_params: [test1::List<i32>]
- args: [move var@3]
- dest: var@2
[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> test1::List::Nil ;
}


- op:
move var@3

[[32mDebug[39m] 
**About to evaluate statement**: [
  (l as test1::List::Cons).0 := 0: i32;
  (l as test1::List::Cons).1 := move var@2;
  set_discriminant(l, 0);
  drop(l);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> s@0 : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  (l as test1::List::Cons).0 := 0: i32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> s@0 : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> s@0 : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
}


- op:
0: i32

[[32mDebug[39m] expand_bottom_value_from_projection:
pe: (Expressions.Field ((Expressions.ProjAdt (1, (Some 0))), 0))
ty: (Types.Adt ((Types.AdtId 1), [], [(Types.Integer Types.I32)]))
[[32mDebug[39m] 
**About to evaluate statement**: [
  (l as test1::List::Cons).1 := move var@2;
  set_discriminant(l, 0);
  drop(l);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> test1::List::Cons { 0 = 0: i32; 1 = â¥ : std::boxed::Box<test1::List<i32>>; } ;
  Some (var@2) -> s@0 : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  (l as test1::List::Cons).1 := move var@2
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> test1::List::Cons { 0 = 0: i32; 1 = â¥ : std::boxed::Box<test1::List<i32>>; } ;
  Some (var@2) -> s@0 : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> test1::List::Cons { 0 = 0: i32; 1 = â¥ : std::boxed::Box<test1::List<i32>>; } ;
  Some (var@2) -> s@0 : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
}


- op:
move var@2

[[32mDebug[39m] 
**About to evaluate statement**: [
  set_discriminant(l, 0);
  drop(l);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> test1::List::Cons { 0 = 0: i32; 1 = s@0 : std::boxed::Box<test1::List<i32>>; } ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  set_discriminant(l, 0)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> test1::List::Cons { 0 = 0: i32; 1 = s@0 : std::boxed::Box<test1::List<i32>>; } ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  drop(l);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> test1::List::Cons { 0 = 0: i32; 1 = s@0 : std::boxed::Box<test1::List<i32>>; } ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  drop(l)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> test1::List::Cons { 0 = 0: i32; 1 = s@0 : std::boxed::Box<test1::List<i32>>; } ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
}



[[32mDebug[39m] drop_value: place: l
[[32mDebug[39m] 
**About to evaluate statement**: [
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
}



[[32mDebug[39m] test_function_symbolic: test_box1
[[32mDebug[39m] 
**About to evaluate statement**: [
  b := move alloc::boxed::Box<i32>::new(0: i32);
  var@3 := &two-phase b;
  x := move core::ops::deref::DerefMut<i32>::deref_mut(move var@3);
  *(x) := 1: i32;
  var@5 := &b;
  x := move core::ops::deref::Deref<Box<i32>>::deref(move var@5);
  var@8 := copy *(x);
  var@7 := move var@8 == 1: i32;
  var@6 := Â¬ move var@7;
  assert(Â¬move var@6);
  drop(b);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> â¥ : std::boxed::Box<i32> ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ (i32) ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  b := move alloc::boxed::Box<i32>::new(0: i32)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> â¥ : std::boxed::Box<i32> ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ (i32) ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_non_local_function_call:
- fid:CfimAst.BoxNew
- type_params: [i32]
- args: [0: i32]
- dest: b
[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> â¥ : std::boxed::Box<i32> ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ (i32) ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
}


- op:
0: i32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@3 := &two-phase b;
  x := move core::ops::deref::DerefMut<i32>::deref_mut(move var@3);
  *(x) := 1: i32;
  var@5 := &b;
  x := move core::ops::deref::Deref<Box<i32>>::deref(move var@5);
  var@8 := copy *(x);
  var@7 := move var@8 == 1: i32;
  var@6 := Â¬ move var@7;
  assert(Â¬move var@6);
  drop(b);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> s@0 : std::boxed::Box<i32> ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ (i32) ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@3 := &two-phase b
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> s@0 : std::boxed::Box<i32> ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ (i32) ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  x := move core::ops::deref::DerefMut<i32>::deref_mut(move var@3);
  *(x) := 1: i32;
  var@5 := &b;
  x := move core::ops::deref::Deref<Box<i32>>::deref(move var@5);
  var@8 := copy *(x);
  var@7 := move var@8 == 1: i32;
  var@6 := Â¬ move var@7;
  assert(Â¬move var@6);
  drop(b);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> @shared_loan({0}, s@0 : std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> âinactivated_mut@0â ;
  Some (x) -> â¥ : &'_ (i32) ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  x := move core::ops::deref::DerefMut<i32>::deref_mut(move var@3)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> @shared_loan({0}, s@0 : std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> âinactivated_mut@0â ;
  Some (x) -> â¥ : &'_ (i32) ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_non_local_function_call:
- fid:CfimAst.BoxDerefMut
- type_params: [i32]
- args: [move var@3]
- dest: x
[[32mDebug[39m] activate_inactivated_mut_borrow: resulting value:
s@0 : std::boxed::Box<i32>
[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> âmut@0â ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> &mut@0 (s@0 : std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ (i32) ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
}


- op:
move var@3

[[32mDebug[39m] 
**About to evaluate statement**: [
  *(x) := 1: i32;
  var@5 := &b;
  x := move core::ops::deref::Deref<Box<i32>>::deref(move var@5);
  var@8 := copy *(x);
  var@7 := move var@8 == 1: i32;
  var@6 := Â¬ move var@7;
  assert(Â¬move var@6);
  drop(b);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> âmut@0â ;
  Some (x) -> s@1 : &r@0 mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ (i32) ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@0 (proj_borrows (s@0 : std::boxed::Box<i32> <: std::boxed::Box<i32>)),
    proj_loans (s@1 : &r@0 mut (i32))
  }
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  *(x) := 1: i32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> âmut@0â ;
  Some (x) -> s@1 : &r@0 mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ (i32) ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@0 (proj_borrows (s@0 : std::boxed::Box<i32> <: std::boxed::Box<i32>)),
    proj_loans (s@1 : &r@0 mut (i32))
  }
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> âmut@0â ;
  Some (x) -> s@1 : &r@0 mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ (i32) ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@0 (proj_borrows (s@0 : std::boxed::Box<i32> <: std::boxed::Box<i32>)),
    proj_loans (s@1 : &r@0 mut (i32))
  }
}


- op:
1: i32

[[32mDebug[39m] expand_symbolic_value: s@1 : &r@0 mut (i32)

- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> âmut@0â ;
  Some (x) -> s@1 : &r@0 mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ (i32) ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@0 (proj_borrows (s@0 : std::boxed::Box<i32> <: std::boxed::Box<i32>)),
    proj_loans (s@1 : &r@0 mut (i32))
  }
  None -> 1: i32 ;
}


- new context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> âmut@0â ;
  Some (x) -> &mut@1 (s@2 : i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ (i32) ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@0 (proj_borrows (s@0 : std::boxed::Box<i32> <: std::boxed::Box<i32>)),
    âmut@1, proj_loans (s@2 : i32)â
  }
  None -> 1: i32 ;
}


[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := &b;
  x := move core::ops::deref::Deref<Box<i32>>::deref(move var@5);
  var@8 := copy *(x);
  var@7 := move var@8 == 1: i32;
  var@6 := Â¬ move var@7;
  assert(Â¬move var@6);
  drop(b);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> âmut@0â ;
  Some (x) -> &mut@1 (1: i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ (i32) ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@0 (proj_borrows (s@0 : std::boxed::Box<i32> <: std::boxed::Box<i32>)),
    âmut@1, proj_loans (s@2 : i32)â
  }
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := &b
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> âmut@0â ;
  Some (x) -> &mut@1 (1: i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ (i32) ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@0 (proj_borrows (s@0 : std::boxed::Box<i32> <: std::boxed::Box<i32>)),
    âmut@1, proj_loans (s@2 : i32)â
  }
}



[[32mDebug[39m] end borrow: 0:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> âmut@0â ;
  Some (x) -> &mut@1 (1: i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ (i32) ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@0 (proj_borrows (s@0 : std::boxed::Box<i32> <: std::boxed::Box<i32>)),
    âmut@1, proj_loans (s@2 : i32)â
  }
}

[[32mDebug[39m] end borrow: 0: found outer borrows/abs:(InterpreterBorrowsCore.OuterAbs 0)
[[32mDebug[39m] end_abstraction: 0
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> âmut@0â ;
  Some (x) -> &mut@1 (1: i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ (i32) ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@0 (proj_borrows (s@0 : std::boxed::Box<i32> <: std::boxed::Box<i32>)),
    âmut@1, proj_loans (s@2 : i32)â
  }
}

[[32mDebug[39m] end_abstraction: 0
- context after parent abstractions ended:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> âmut@0â ;
  Some (x) -> &mut@1 (1: i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ (i32) ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@0 (proj_borrows (s@0 : std::boxed::Box<i32> <: std::boxed::Box<i32>)),
    âmut@1, proj_loans (s@2 : i32)â
  }
}

[[32mDebug[39m] end borrow: 1:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> âmut@0â ;
  Some (x) -> &mut@1 (1: i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ (i32) ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@0 (proj_borrows (s@0 : std::boxed::Box<i32> <: std::boxed::Box<i32>)),
    âmut@1, proj_loans (s@2 : i32)â
  }
}

[[32mDebug[39m] give_back:
- bid: 1
- content: &mut@1 (1: i32)
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> âmut@0â ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ (i32) ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@0 (proj_borrows (s@0 : std::boxed::Box<i32> <: std::boxed::Box<i32>)),
    âmut@1, proj_loans (s@2 : i32)â
  }
}


[[32mDebug[39m] give_back_value:
- bid: 1
- value: 1: i32
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> âmut@0â ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ (i32) ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@0 (proj_borrows (s@0 : std::boxed::Box<i32> <: std::boxed::Box<i32>)),
    âmut@1, proj_loans (s@2 : i32)â
  }
}


[[32mDebug[39m] end_abstraction: 0
- context after loans ended:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> âmut@0â ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ (i32) ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@0 (proj_borrows (s@0 : std::boxed::Box<i32> <: std::boxed::Box<i32>)),
    @ended_mut_loan{ given_back=1: i32; child=proj_loans (s@2 : i32) }
  }
}

[[32mDebug[39m] give_back_value:
- bid: 0
- value: s@3 : std::boxed::Box<i32>
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> âmut@0â ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ (i32) ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    â¥ : &r@0 mut (std::boxed::Box<i32>),
    @ended_mut_loan{ given_back=1: i32; child=proj_loans (s@2 : i32) }
  }
}


[[32mDebug[39m] end_abstraction: 0
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> âmut@0â ;
  Some (x) -> &mut@1 (1: i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ (i32) ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@0 (proj_borrows (s@0 : std::boxed::Box<i32> <: std::boxed::Box<i32>)),
    âmut@1, proj_loans (s@2 : i32)â
  }
}


- new context:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> s@3 : std::boxed::Box<i32> ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ (i32) ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
}

[[32mDebug[39m] 
**About to evaluate statement**: [
  x := move core::ops::deref::Deref<Box<i32>>::deref(move var@5);
  var@8 := copy *(x);
  var@7 := move var@8 == 1: i32;
  var@6 := Â¬ move var@7;
  assert(Â¬move var@6);
  drop(b);
  return
]

**Context**:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> @shared_loan({2}, s@3 : std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ (i32) ;
  Some (var@5) -> âshared@2â ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  x := move core::ops::deref::Deref<Box<i32>>::deref(move var@5)
]

**Context**:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> @shared_loan({2}, s@3 : std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ (i32) ;
  Some (var@5) -> âshared@2â ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_non_local_function_call:
- fid:CfimAst.BoxDeref
- type_params: [i32]
- args: [move var@5]
- dest: x
[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> @shared_loan({2}, s@3 : std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ (i32) ;
  Some (var@5) -> âshared@2â ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
}


- op:
move var@5

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := copy *(x);
  var@7 := move var@8 == 1: i32;
  var@6 := Â¬ move var@7;
  assert(Â¬move var@6);
  drop(b);
  return
]

**Context**:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> @shared_loan({2}, s@3 : std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> s@4 : &r@1 (i32) ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    âshared@2â,
    proj_loans (s@4 : &r@1 (i32))
  }
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := copy *(x)
]

**Context**:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> @shared_loan({2}, s@3 : std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> s@4 : &r@1 (i32) ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    âshared@2â,
    proj_loans (s@4 : &r@1 (i32))
  }
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> @shared_loan({2}, s@3 : std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> s@4 : &r@1 (i32) ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    âshared@2â,
    proj_loans (s@4 : &r@1 (i32))
  }
}


- op:
copy *(x)

[[32mDebug[39m] expand_symbolic_value: s@4 : &r@1 (i32)

- original context:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> @shared_loan({2}, s@3 : std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> s@4 : &r@1 (i32) ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    âshared@2â,
    proj_loans (s@4 : &r@1 (i32))
  }
}


- new context:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> @shared_loan({2}, s@3 : std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> âshared@3â ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    âshared@2â,
    @shared_loan({3}, s@5 : i32, proj_loans (s@5 : i32))
  }
}


[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := move var@8 == 1: i32;
  var@6 := Â¬ move var@7;
  assert(Â¬move var@6);
  drop(b);
  return
]

**Context**:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> @shared_loan({2}, s@3 : std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> âshared@3â ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> s@5 : i32 ;
  abs@1{parents={}}{regions={1}} {
    âshared@2â,
    @shared_loan({3}, s@5 : i32, proj_loans (s@5 : i32))
  }
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := move var@8 == 1: i32
]

**Context**:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> @shared_loan({2}, s@3 : std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> âshared@3â ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> s@5 : i32 ;
  abs@1{parents={}}{regions={1}} {
    âshared@2â,
    @shared_loan({3}, s@5 : i32, proj_loans (s@5 : i32))
  }
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> @shared_loan({2}, s@3 : std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> âshared@3â ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> s@5 : i32 ;
  abs@1{parents={}}{regions={1}} {
    âshared@2â,
    @shared_loan({3}, s@5 : i32, proj_loans (s@5 : i32))
  }
}


- op:
move var@8

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> @shared_loan({2}, s@3 : std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> âshared@3â ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    âshared@2â,
    @shared_loan({3}, s@5 : i32, proj_loans (s@5 : i32))
  }
}


- op:
1: i32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@6 := Â¬ move var@7;
  assert(Â¬move var@6);
  drop(b);
  return
]

**Context**:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> @shared_loan({2}, s@3 : std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> âshared@3â ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> s@6 : bool ;
  Some (var@8) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    âshared@2â,
    @shared_loan({3}, s@5 : i32, proj_loans (s@5 : i32))
  }
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@6 := Â¬ move var@7
]

**Context**:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> @shared_loan({2}, s@3 : std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> âshared@3â ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> s@6 : bool ;
  Some (var@8) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    âshared@2â,
    @shared_loan({3}, s@5 : i32, proj_loans (s@5 : i32))
  }
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> @shared_loan({2}, s@3 : std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> âshared@3â ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> s@6 : bool ;
  Some (var@8) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    âshared@2â,
    @shared_loan({3}, s@5 : i32, proj_loans (s@5 : i32))
  }
}


- op:
move var@7

[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@6);
  drop(b);
  return
]

**Context**:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> @shared_loan({2}, s@3 : std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> âshared@3â ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> s@7 : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    âshared@2â,
    @shared_loan({3}, s@5 : i32, proj_loans (s@5 : i32))
  }
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@6)
]

**Context**:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> @shared_loan({2}, s@3 : std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> âshared@3â ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> s@7 : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    âshared@2â,
    @shared_loan({3}, s@5 : i32, proj_loans (s@5 : i32))
  }
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> @shared_loan({2}, s@3 : std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> âshared@3â ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> true ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    âshared@2â,
    @shared_loan({3}, s@5 : i32, proj_loans (s@5 : i32))
  }
}


- op:
move var@6

[[32mDebug[39m] 
**About to evaluate statement**: [
  drop(b);
  return
]

**Context**:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> @shared_loan({2}, s@3 : std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> âshared@3â ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    âshared@2â,
    @shared_loan({3}, s@5 : i32, proj_loans (s@5 : i32))
  }
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  drop(b)
]

**Context**:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> @shared_loan({2}, s@3 : std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> âshared@3â ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    âshared@2â,
    @shared_loan({3}, s@5 : i32, proj_loans (s@5 : i32))
  }
}



[[32mDebug[39m] drop_value: place: b
[[32mDebug[39m] end borrow: 2:
- original context:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> â¥ : std::boxed::Box<i32> ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> âshared@3â ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    âshared@2â,
    @shared_loan({3}, s@5 : i32, proj_loans (s@5 : i32))
  }
  None -> @shared_loan({2}, s@3 : std::boxed::Box<i32>) ;
}

[[32mDebug[39m] end borrow: 2: found outer borrows/abs:(InterpreterBorrowsCore.OuterAbs 1)
[[32mDebug[39m] end_abstraction: 1
- original context:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> â¥ : std::boxed::Box<i32> ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> âshared@3â ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    âshared@2â,
    @shared_loan({3}, s@5 : i32, proj_loans (s@5 : i32))
  }
  None -> @shared_loan({2}, s@3 : std::boxed::Box<i32>) ;
}

[[32mDebug[39m] end_abstraction: 1
- context after parent abstractions ended:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> â¥ : std::boxed::Box<i32> ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> âshared@3â ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    âshared@2â,
    @shared_loan({3}, s@5 : i32, proj_loans (s@5 : i32))
  }
  None -> @shared_loan({2}, s@3 : std::boxed::Box<i32>) ;
}

[[32mDebug[39m] end borrow: 3:
- original context:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> â¥ : std::boxed::Box<i32> ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> âshared@3â ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    âshared@2â,
    @shared_loan({3}, s@5 : i32, proj_loans (s@5 : i32))
  }
  None -> @shared_loan({2}, s@3 : std::boxed::Box<i32>) ;
}

[[32mDebug[39m] give_back:
- bid: 3
- content: âshared@3â
- context:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> â¥ : std::boxed::Box<i32> ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ (i32) ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    âshared@2â,
    @shared_loan({3}, s@5 : i32, proj_loans (s@5 : i32))
  }
  None -> @shared_loan({2}, s@3 : std::boxed::Box<i32>) ;
}


[[32mDebug[39m] end_abstraction: 1
- context after loans ended:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> â¥ : std::boxed::Box<i32> ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ (i32) ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    âshared@2â,
    @ended_shared_loan(s@5 : i32, proj_loans (s@5 : i32))
  }
  None -> @shared_loan({2}, s@3 : std::boxed::Box<i32>) ;
}

[[32mDebug[39m] end_abstraction: 1
- original context:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> â¥ : std::boxed::Box<i32> ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> âshared@3â ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    âshared@2â,
    @shared_loan({3}, s@5 : i32, proj_loans (s@5 : i32))
  }
  None -> @shared_loan({2}, s@3 : std::boxed::Box<i32>) ;
}


- new context:
# Ended regions: {0, 1}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> â¥ : std::boxed::Box<i32> ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ (i32) ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  None -> s@3 : std::boxed::Box<i32> ;
}

[[32mDebug[39m] 
**About to evaluate statement**: [
  return
]

**Context**:
# Ended regions: {0, 1}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (b) -> â¥ : std::boxed::Box<i32> ;
  Some (x) -> â¥ : &'_ mut (i32) ;
  Some (var@3) -> â¥ : &'_ mut (std::boxed::Box<i32>) ;
  Some (x) -> â¥ : &'_ (i32) ;
  Some (var@5) -> â¥ : &'_ (std::boxed::Box<i32>) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
}



[[32mDebug[39m] test_function_symbolic: copy_int
[[32mDebug[39m] 
**About to evaluate statement**: [
  var@0 := copy x;
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : i32 ;
  Some (x) -> s@0 : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@0 := copy x
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : i32 ;
  Some (x) -> s@0 : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : i32 ;
  Some (x) -> s@0 : i32 ;
}


- op:
copy x

[[32mDebug[39m] 
**About to evaluate statement**: [
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> s@0 : i32 ;
  Some (x) -> s@0 : i32 ;
}



[[32mDebug[39m] test_function_symbolic: test_copy_int
[[32mDebug[39m] 
**About to evaluate statement**: [
  x := 0: i32;
  px := &x;
  var@4 := copy x;
  y := move copy_int(move var@4);
  var@7 := copy *(px);
  var@8 := copy y;
  var@6 := move var@7 == move var@8;
  var@5 := Â¬ move var@6;
  assert(Â¬move var@5);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : i32 ;
  Some (px) -> â¥ : &'_ (i32) ;
  Some (y) -> â¥ : i32 ;
  Some (var@4) -> â¥ : i32 ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : i32 ;
  Some (var@8) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  x := 0: i32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : i32 ;
  Some (px) -> â¥ : &'_ (i32) ;
  Some (y) -> â¥ : i32 ;
  Some (var@4) -> â¥ : i32 ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : i32 ;
  Some (var@8) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : i32 ;
  Some (px) -> â¥ : &'_ (i32) ;
  Some (y) -> â¥ : i32 ;
  Some (var@4) -> â¥ : i32 ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : i32 ;
  Some (var@8) -> â¥ : i32 ;
}


- op:
0: i32

[[32mDebug[39m] 
**About to evaluate statement**: [
  px := &x;
  var@4 := copy x;
  y := move copy_int(move var@4);
  var@7 := copy *(px);
  var@8 := copy y;
  var@6 := move var@7 == move var@8;
  var@5 := Â¬ move var@6;
  assert(Â¬move var@5);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (px) -> â¥ : &'_ (i32) ;
  Some (y) -> â¥ : i32 ;
  Some (var@4) -> â¥ : i32 ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : i32 ;
  Some (var@8) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  px := &x
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (px) -> â¥ : &'_ (i32) ;
  Some (y) -> â¥ : i32 ;
  Some (var@4) -> â¥ : i32 ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : i32 ;
  Some (var@8) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := copy x;
  y := move copy_int(move var@4);
  var@7 := copy *(px);
  var@8 := copy y;
  var@6 := move var@7 == move var@8;
  var@5 := Â¬ move var@6;
  assert(Â¬move var@5);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> @shared_loan({0}, 0: i32) ;
  Some (px) -> âshared@0â ;
  Some (y) -> â¥ : i32 ;
  Some (var@4) -> â¥ : i32 ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : i32 ;
  Some (var@8) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := copy x
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> @shared_loan({0}, 0: i32) ;
  Some (px) -> âshared@0â ;
  Some (y) -> â¥ : i32 ;
  Some (var@4) -> â¥ : i32 ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : i32 ;
  Some (var@8) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> @shared_loan({0}, 0: i32) ;
  Some (px) -> âshared@0â ;
  Some (y) -> â¥ : i32 ;
  Some (var@4) -> â¥ : i32 ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : i32 ;
  Some (var@8) -> â¥ : i32 ;
}


- op:
copy x

[[32mDebug[39m] 
**About to evaluate statement**: [
  y := move copy_int(move var@4);
  var@7 := copy *(px);
  var@8 := copy y;
  var@6 := move var@7 == move var@8;
  var@5 := Â¬ move var@6;
  assert(Â¬move var@5);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> @shared_loan({0}, 0: i32) ;
  Some (px) -> âshared@0â ;
  Some (y) -> â¥ : i32 ;
  Some (var@4) -> 0: i32 ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : i32 ;
  Some (var@8) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  y := move copy_int(move var@4)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> @shared_loan({0}, 0: i32) ;
  Some (px) -> âshared@0â ;
  Some (y) -> â¥ : i32 ;
  Some (var@4) -> 0: i32 ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : i32 ;
  Some (var@8) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> @shared_loan({0}, 0: i32) ;
  Some (px) -> âshared@0â ;
  Some (y) -> â¥ : i32 ;
  Some (var@4) -> 0: i32 ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : i32 ;
  Some (var@8) -> â¥ : i32 ;
}


- op:
move var@4

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := copy *(px);
  var@8 := copy y;
  var@6 := move var@7 == move var@8;
  var@5 := Â¬ move var@6;
  assert(Â¬move var@5);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> @shared_loan({0}, 0: i32) ;
  Some (px) -> âshared@0â ;
  Some (y) -> s@0 : i32 ;
  Some (var@4) -> â¥ : i32 ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : i32 ;
  Some (var@8) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := copy *(px)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> @shared_loan({0}, 0: i32) ;
  Some (px) -> âshared@0â ;
  Some (y) -> s@0 : i32 ;
  Some (var@4) -> â¥ : i32 ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : i32 ;
  Some (var@8) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> @shared_loan({0}, 0: i32) ;
  Some (px) -> âshared@0â ;
  Some (y) -> s@0 : i32 ;
  Some (var@4) -> â¥ : i32 ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : i32 ;
  Some (var@8) -> â¥ : i32 ;
}


- op:
copy *(px)

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := copy y;
  var@6 := move var@7 == move var@8;
  var@5 := Â¬ move var@6;
  assert(Â¬move var@5);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> @shared_loan({0}, 0: i32) ;
  Some (px) -> âshared@0â ;
  Some (y) -> s@0 : i32 ;
  Some (var@4) -> â¥ : i32 ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> 0: i32 ;
  Some (var@8) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := copy y
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> @shared_loan({0}, 0: i32) ;
  Some (px) -> âshared@0â ;
  Some (y) -> s@0 : i32 ;
  Some (var@4) -> â¥ : i32 ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> 0: i32 ;
  Some (var@8) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> @shared_loan({0}, 0: i32) ;
  Some (px) -> âshared@0â ;
  Some (y) -> s@0 : i32 ;
  Some (var@4) -> â¥ : i32 ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> 0: i32 ;
  Some (var@8) -> â¥ : i32 ;
}


- op:
copy y

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@6 := move var@7 == move var@8;
  var@5 := Â¬ move var@6;
  assert(Â¬move var@5);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> @shared_loan({0}, 0: i32) ;
  Some (px) -> âshared@0â ;
  Some (y) -> s@0 : i32 ;
  Some (var@4) -> â¥ : i32 ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> 0: i32 ;
  Some (var@8) -> s@0 : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@6 := move var@7 == move var@8
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> @shared_loan({0}, 0: i32) ;
  Some (px) -> âshared@0â ;
  Some (y) -> s@0 : i32 ;
  Some (var@4) -> â¥ : i32 ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> 0: i32 ;
  Some (var@8) -> s@0 : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> @shared_loan({0}, 0: i32) ;
  Some (px) -> âshared@0â ;
  Some (y) -> s@0 : i32 ;
  Some (var@4) -> â¥ : i32 ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> 0: i32 ;
  Some (var@8) -> s@0 : i32 ;
}


- op:
move var@7

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> @shared_loan({0}, 0: i32) ;
  Some (px) -> âshared@0â ;
  Some (y) -> s@0 : i32 ;
  Some (var@4) -> â¥ : i32 ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : i32 ;
  Some (var@8) -> s@0 : i32 ;
}


- op:
move var@8

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := Â¬ move var@6;
  assert(Â¬move var@5);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> @shared_loan({0}, 0: i32) ;
  Some (px) -> âshared@0â ;
  Some (y) -> s@0 : i32 ;
  Some (var@4) -> â¥ : i32 ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> s@1 : bool ;
  Some (var@7) -> â¥ : i32 ;
  Some (var@8) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := Â¬ move var@6
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> @shared_loan({0}, 0: i32) ;
  Some (px) -> âshared@0â ;
  Some (y) -> s@0 : i32 ;
  Some (var@4) -> â¥ : i32 ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> s@1 : bool ;
  Some (var@7) -> â¥ : i32 ;
  Some (var@8) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> @shared_loan({0}, 0: i32) ;
  Some (px) -> âshared@0â ;
  Some (y) -> s@0 : i32 ;
  Some (var@4) -> â¥ : i32 ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> s@1 : bool ;
  Some (var@7) -> â¥ : i32 ;
  Some (var@8) -> â¥ : i32 ;
}


- op:
move var@6

[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@5);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> @shared_loan({0}, 0: i32) ;
  Some (px) -> âshared@0â ;
  Some (y) -> s@0 : i32 ;
  Some (var@4) -> â¥ : i32 ;
  Some (var@5) -> s@2 : bool ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : i32 ;
  Some (var@8) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@5)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> @shared_loan({0}, 0: i32) ;
  Some (px) -> âshared@0â ;
  Some (y) -> s@0 : i32 ;
  Some (var@4) -> â¥ : i32 ;
  Some (var@5) -> s@2 : bool ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : i32 ;
  Some (var@8) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> @shared_loan({0}, 0: i32) ;
  Some (px) -> âshared@0â ;
  Some (y) -> s@0 : i32 ;
  Some (var@4) -> â¥ : i32 ;
  Some (var@5) -> true ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : i32 ;
  Some (var@8) -> â¥ : i32 ;
}


- op:
move var@5

[[32mDebug[39m] 
**About to evaluate statement**: [
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> @shared_loan({0}, 0: i32) ;
  Some (px) -> âshared@0â ;
  Some (y) -> s@0 : i32 ;
  Some (var@4) -> â¥ : i32 ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : i32 ;
  Some (var@8) -> â¥ : i32 ;
}



[[32mDebug[39m] test_function_symbolic: is_cons
[[32mDebug[39m] 
**About to evaluate statement**: [
  var@2 := discriminant(*(l));
  switch (move var@2) {
    0: isize => {
      var@0 := true
    }
    1: isize => {
      var@0 := false
    }
    _ => {
      panic
    }
  };
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  abs@0{parents={}}{regions={0}} {
    proj_loans (s@0 : &r@0 (test1::List<T>))
  }
  Some (var@0) -> â¥ : bool ;
  Some (l) -> s@0 : &r@0 (test1::List<T>) ;
  Some (var@2) -> â¥ : isize ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@2 := discriminant(*(l))
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  abs@0{parents={}}{regions={0}} {
    proj_loans (s@0 : &r@0 (test1::List<T>))
  }
  Some (var@0) -> â¥ : bool ;
  Some (l) -> s@0 : &r@0 (test1::List<T>) ;
  Some (var@2) -> â¥ : isize ;
}



[[32mDebug[39m] expand_symbolic_value: s@0 : &r@0 (test1::List<T>)

- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  abs@0{parents={}}{regions={0}} {
    proj_loans (s@0 : &r@0 (test1::List<T>))
  }
  Some (var@0) -> â¥ : bool ;
  Some (l) -> s@0 : &r@0 (test1::List<T>) ;
  Some (var@2) -> â¥ : isize ;
}


- new context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  abs@0{parents={}}{regions={0}} {
    @shared_loan({0}, s@1 : test1::List<T>, proj_loans (s@1 : test1::List<T>))
  }
  Some (var@0) -> â¥ : bool ;
  Some (l) -> âshared@0â ;
  Some (var@2) -> â¥ : isize ;
}


[[32mDebug[39m] 
**About to evaluate statement**: [
  switch (move var@2) {
    0: isize => {
      var@0 := true
    }
    1: isize => {
      var@0 := false
    }
    _ => {
      panic
    }
  };
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  abs@0{parents={}}{regions={0}} {
    @shared_loan({0}, test1::List::Cons { 0 = s@2 : T; 1 = s@3 : std::boxed::Box<test1::List<T>>; }, test1::List::Cons { 0 = proj_loans (s@2 : T); 1 = proj_loans (s@3 : std::boxed::Box<test1::List<T>>); })
  }
  Some (var@0) -> â¥ : bool ;
  Some (l) -> âshared@0â ;
  Some (var@2) -> 0: isize ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  switch (move var@2) {
    0: isize => {
      var@0 := true
    }
    1: isize => {
      var@0 := false
    }
    _ => {
      panic
    }
  }
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  abs@0{parents={}}{regions={0}} {
    @shared_loan({0}, test1::List::Cons { 0 = s@2 : T; 1 = s@3 : std::boxed::Box<test1::List<T>>; }, test1::List::Cons { 0 = proj_loans (s@2 : T); 1 = proj_loans (s@3 : std::boxed::Box<test1::List<T>>); })
  }
  Some (var@0) -> â¥ : bool ;
  Some (l) -> âshared@0â ;
  Some (var@2) -> 0: isize ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  abs@0{parents={}}{regions={0}} {
    @shared_loan({0}, test1::List::Cons { 0 = s@2 : T; 1 = s@3 : std::boxed::Box<test1::List<T>>; }, test1::List::Cons { 0 = proj_loans (s@2 : T); 1 = proj_loans (s@3 : std::boxed::Box<test1::List<T>>); })
  }
  Some (var@0) -> â¥ : bool ;
  Some (l) -> âshared@0â ;
  Some (var@2) -> 0: isize ;
}


- op:
move var@2

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@0 := true
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  abs@0{parents={}}{regions={0}} {
    @shared_loan({0}, test1::List::Cons { 0 = s@2 : T; 1 = s@3 : std::boxed::Box<test1::List<T>>; }, test1::List::Cons { 0 = proj_loans (s@2 : T); 1 = proj_loans (s@3 : std::boxed::Box<test1::List<T>>); })
  }
  Some (var@0) -> â¥ : bool ;
  Some (l) -> âshared@0â ;
  Some (var@2) -> â¥ : isize ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  abs@0{parents={}}{regions={0}} {
    @shared_loan({0}, test1::List::Cons { 0 = s@2 : T; 1 = s@3 : std::boxed::Box<test1::List<T>>; }, test1::List::Cons { 0 = proj_loans (s@2 : T); 1 = proj_loans (s@3 : std::boxed::Box<test1::List<T>>); })
  }
  Some (var@0) -> â¥ : bool ;
  Some (l) -> âshared@0â ;
  Some (var@2) -> â¥ : isize ;
}


- op:
true

[[32mDebug[39m] 
**About to evaluate statement**: [
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  abs@0{parents={}}{regions={0}} {
    @shared_loan({0}, test1::List::Cons { 0 = s@2 : T; 1 = s@3 : std::boxed::Box<test1::List<T>>; }, test1::List::Cons { 0 = proj_loans (s@2 : T); 1 = proj_loans (s@3 : std::boxed::Box<test1::List<T>>); })
  }
  Some (var@0) -> true ;
  Some (l) -> âshared@0â ;
  Some (var@2) -> â¥ : isize ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  switch (move var@2) {
    0: isize => {
      var@0 := true
    }
    1: isize => {
      var@0 := false
    }
    _ => {
      panic
    }
  };
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  abs@0{parents={}}{regions={0}} {
    @shared_loan({0}, test1::List::Nil, test1::List::Nil)
  }
  Some (var@0) -> â¥ : bool ;
  Some (l) -> âshared@0â ;
  Some (var@2) -> 1: isize ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  switch (move var@2) {
    0: isize => {
      var@0 := true
    }
    1: isize => {
      var@0 := false
    }
    _ => {
      panic
    }
  }
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  abs@0{parents={}}{regions={0}} {
    @shared_loan({0}, test1::List::Nil, test1::List::Nil)
  }
  Some (var@0) -> â¥ : bool ;
  Some (l) -> âshared@0â ;
  Some (var@2) -> 1: isize ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  abs@0{parents={}}{regions={0}} {
    @shared_loan({0}, test1::List::Nil, test1::List::Nil)
  }
  Some (var@0) -> â¥ : bool ;
  Some (l) -> âshared@0â ;
  Some (var@2) -> 1: isize ;
}


- op:
move var@2

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@0 := false
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  abs@0{parents={}}{regions={0}} {
    @shared_loan({0}, test1::List::Nil, test1::List::Nil)
  }
  Some (var@0) -> â¥ : bool ;
  Some (l) -> âshared@0â ;
  Some (var@2) -> â¥ : isize ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  abs@0{parents={}}{regions={0}} {
    @shared_loan({0}, test1::List::Nil, test1::List::Nil)
  }
  Some (var@0) -> â¥ : bool ;
  Some (l) -> âshared@0â ;
  Some (var@2) -> â¥ : isize ;
}


- op:
false

[[32mDebug[39m] 
**About to evaluate statement**: [
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  abs@0{parents={}}{regions={0}} {
    @shared_loan({0}, test1::List::Nil, test1::List::Nil)
  }
  Some (var@0) -> false ;
  Some (l) -> âshared@0â ;
  Some (var@2) -> â¥ : isize ;
}



[[32mDebug[39m] test_function_symbolic: test_is_cons
[[32mDebug[39m] 
**About to evaluate statement**: [
  set_discriminant(var@3, 1);
  var@2 := move alloc::boxed::Box<test1::List<i32>>::new(move var@3);
  (l as test1::List::Cons).0 := 0: i32;
  (l as test1::List::Cons).1 := move var@2;
  set_discriminant(l, 0);
  var@7 := &l;
  var@6 := copy var@7;
  var@5 := move is_cons<i32>(move var@6);
  var@4 := Â¬ move var@5;
  assert(Â¬move var@4);
  drop(l);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> â¥ : &'_ (test1::List<i32>) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  set_discriminant(var@3, 1)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> â¥ : &'_ (test1::List<i32>) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@2 := move alloc::boxed::Box<test1::List<i32>>::new(move var@3);
  (l as test1::List::Cons).0 := 0: i32;
  (l as test1::List::Cons).1 := move var@2;
  set_discriminant(l, 0);
  var@7 := &l;
  var@6 := copy var@7;
  var@5 := move is_cons<i32>(move var@6);
  var@4 := Â¬ move var@5;
  assert(Â¬move var@4);
  drop(l);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> test1::List::Nil ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> â¥ : &'_ (test1::List<i32>) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@2 := move alloc::boxed::Box<test1::List<i32>>::new(move var@3)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> test1::List::Nil ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> â¥ : &'_ (test1::List<i32>) ;
}



[[32mDebug[39m] eval_non_local_function_call:
- fid:CfimAst.BoxNew
- type_params: [test1::List<i32>]
- args: [move var@3]
- dest: var@2
[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> test1::List::Nil ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> â¥ : &'_ (test1::List<i32>) ;
}


- op:
move var@3

[[32mDebug[39m] 
**About to evaluate statement**: [
  (l as test1::List::Cons).0 := 0: i32;
  (l as test1::List::Cons).1 := move var@2;
  set_discriminant(l, 0);
  var@7 := &l;
  var@6 := copy var@7;
  var@5 := move is_cons<i32>(move var@6);
  var@4 := Â¬ move var@5;
  assert(Â¬move var@4);
  drop(l);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> s@0 : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> â¥ : &'_ (test1::List<i32>) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  (l as test1::List::Cons).0 := 0: i32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> s@0 : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> â¥ : &'_ (test1::List<i32>) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> s@0 : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> â¥ : &'_ (test1::List<i32>) ;
}


- op:
0: i32

[[32mDebug[39m] expand_bottom_value_from_projection:
pe: (Expressions.Field ((Expressions.ProjAdt (1, (Some 0))), 0))
ty: (Types.Adt ((Types.AdtId 1), [], [(Types.Integer Types.I32)]))
[[32mDebug[39m] 
**About to evaluate statement**: [
  (l as test1::List::Cons).1 := move var@2;
  set_discriminant(l, 0);
  var@7 := &l;
  var@6 := copy var@7;
  var@5 := move is_cons<i32>(move var@6);
  var@4 := Â¬ move var@5;
  assert(Â¬move var@4);
  drop(l);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> test1::List::Cons { 0 = 0: i32; 1 = â¥ : std::boxed::Box<test1::List<i32>>; } ;
  Some (var@2) -> s@0 : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> â¥ : &'_ (test1::List<i32>) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  (l as test1::List::Cons).1 := move var@2
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> test1::List::Cons { 0 = 0: i32; 1 = â¥ : std::boxed::Box<test1::List<i32>>; } ;
  Some (var@2) -> s@0 : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> â¥ : &'_ (test1::List<i32>) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> test1::List::Cons { 0 = 0: i32; 1 = â¥ : std::boxed::Box<test1::List<i32>>; } ;
  Some (var@2) -> s@0 : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> â¥ : &'_ (test1::List<i32>) ;
}


- op:
move var@2

[[32mDebug[39m] 
**About to evaluate statement**: [
  set_discriminant(l, 0);
  var@7 := &l;
  var@6 := copy var@7;
  var@5 := move is_cons<i32>(move var@6);
  var@4 := Â¬ move var@5;
  assert(Â¬move var@4);
  drop(l);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> test1::List::Cons { 0 = 0: i32; 1 = s@0 : std::boxed::Box<test1::List<i32>>; } ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> â¥ : &'_ (test1::List<i32>) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  set_discriminant(l, 0)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> test1::List::Cons { 0 = 0: i32; 1 = s@0 : std::boxed::Box<test1::List<i32>>; } ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> â¥ : &'_ (test1::List<i32>) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := &l;
  var@6 := copy var@7;
  var@5 := move is_cons<i32>(move var@6);
  var@4 := Â¬ move var@5;
  assert(Â¬move var@4);
  drop(l);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> test1::List::Cons { 0 = 0: i32; 1 = s@0 : std::boxed::Box<test1::List<i32>>; } ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> â¥ : &'_ (test1::List<i32>) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := &l
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> test1::List::Cons { 0 = 0: i32; 1 = s@0 : std::boxed::Box<test1::List<i32>>; } ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> â¥ : &'_ (test1::List<i32>) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@6 := copy var@7;
  var@5 := move is_cons<i32>(move var@6);
  var@4 := Â¬ move var@5;
  assert(Â¬move var@4);
  drop(l);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> @shared_loan({0}, test1::List::Cons { 0 = 0: i32; 1 = s@0 : std::boxed::Box<test1::List<i32>>; }) ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> âshared@0â ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@6 := copy var@7
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> @shared_loan({0}, test1::List::Cons { 0 = 0: i32; 1 = s@0 : std::boxed::Box<test1::List<i32>>; }) ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> âshared@0â ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> @shared_loan({0}, test1::List::Cons { 0 = 0: i32; 1 = s@0 : std::boxed::Box<test1::List<i32>>; }) ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> âshared@0â ;
}


- op:
copy var@7

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := move is_cons<i32>(move var@6);
  var@4 := Â¬ move var@5;
  assert(Â¬move var@4);
  drop(l);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> @shared_loan({0, 1}, test1::List::Cons { 0 = 0: i32; 1 = s@0 : std::boxed::Box<test1::List<i32>>; }) ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> âshared@1â ;
  Some (var@7) -> âshared@0â ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := move is_cons<i32>(move var@6)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> @shared_loan({0, 1}, test1::List::Cons { 0 = 0: i32; 1 = s@0 : std::boxed::Box<test1::List<i32>>; }) ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> âshared@1â ;
  Some (var@7) -> âshared@0â ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> @shared_loan({0, 1}, test1::List::Cons { 0 = 0: i32; 1 = s@0 : std::boxed::Box<test1::List<i32>>; }) ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> âshared@1â ;
  Some (var@7) -> âshared@0â ;
}


- op:
move var@6

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := Â¬ move var@5;
  assert(Â¬move var@4);
  drop(l);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> @shared_loan({0, 1}, test1::List::Cons { 0 = 0: i32; 1 = s@0 : std::boxed::Box<test1::List<i32>>; }) ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> s@1 : bool ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> âshared@0â ;
  abs@0{parents={}}{regions={0}} {
    âshared@1â,
    proj_loans (s@1 : bool)
  }
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := Â¬ move var@5
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> @shared_loan({0, 1}, test1::List::Cons { 0 = 0: i32; 1 = s@0 : std::boxed::Box<test1::List<i32>>; }) ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> s@1 : bool ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> âshared@0â ;
  abs@0{parents={}}{regions={0}} {
    âshared@1â,
    proj_loans (s@1 : bool)
  }
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> @shared_loan({0, 1}, test1::List::Cons { 0 = 0: i32; 1 = s@0 : std::boxed::Box<test1::List<i32>>; }) ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> s@1 : bool ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> âshared@0â ;
  abs@0{parents={}}{regions={0}} {
    âshared@1â,
    proj_loans (s@1 : bool)
  }
}


- op:
move var@5

[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@4);
  drop(l);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> @shared_loan({0, 1}, test1::List::Cons { 0 = 0: i32; 1 = s@0 : std::boxed::Box<test1::List<i32>>; }) ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> s@2 : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> âshared@0â ;
  abs@0{parents={}}{regions={0}} {
    âshared@1â,
    proj_loans (s@1 : bool)
  }
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@4)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> @shared_loan({0, 1}, test1::List::Cons { 0 = 0: i32; 1 = s@0 : std::boxed::Box<test1::List<i32>>; }) ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> s@2 : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> âshared@0â ;
  abs@0{parents={}}{regions={0}} {
    âshared@1â,
    proj_loans (s@1 : bool)
  }
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> @shared_loan({0, 1}, test1::List::Cons { 0 = 0: i32; 1 = s@0 : std::boxed::Box<test1::List<i32>>; }) ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> true ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> âshared@0â ;
  abs@0{parents={}}{regions={0}} {
    âshared@1â,
    proj_loans (s@1 : bool)
  }
}


- op:
move var@4

[[32mDebug[39m] 
**About to evaluate statement**: [
  drop(l);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> @shared_loan({0, 1}, test1::List::Cons { 0 = 0: i32; 1 = s@0 : std::boxed::Box<test1::List<i32>>; }) ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> âshared@0â ;
  abs@0{parents={}}{regions={0}} {
    âshared@1â,
    proj_loans (s@1 : bool)
  }
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  drop(l)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> @shared_loan({0, 1}, test1::List::Cons { 0 = 0: i32; 1 = s@0 : std::boxed::Box<test1::List<i32>>; }) ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> âshared@0â ;
  abs@0{parents={}}{regions={0}} {
    âshared@1â,
    proj_loans (s@1 : bool)
  }
}



[[32mDebug[39m] drop_value: place: l
[[32mDebug[39m] end borrow: 0:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> âshared@0â ;
  abs@0{parents={}}{regions={0}} {
    âshared@1â,
    proj_loans (s@1 : bool)
  }
  None -> @shared_loan({0, 1}, test1::List::Cons { 0 = 0: i32; 1 = s@0 : std::boxed::Box<test1::List<i32>>; }) ;
}

[[32mDebug[39m] give_back:
- bid: 0
- content: âshared@0â
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> â¥ : &'_ (test1::List<i32>) ;
  abs@0{parents={}}{regions={0}} {
    âshared@1â,
    proj_loans (s@1 : bool)
  }
  None -> @shared_loan({0, 1}, test1::List::Cons { 0 = 0: i32; 1 = s@0 : std::boxed::Box<test1::List<i32>>; }) ;
}


[[32mDebug[39m] end borrow: 1:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> â¥ : &'_ (test1::List<i32>) ;
  abs@0{parents={}}{regions={0}} {
    âshared@1â,
    proj_loans (s@1 : bool)
  }
  None -> @shared_loan({1}, test1::List::Cons { 0 = 0: i32; 1 = s@0 : std::boxed::Box<test1::List<i32>>; }) ;
}

[[32mDebug[39m] end borrow: 1: found outer borrows/abs:(InterpreterBorrowsCore.OuterAbs 0)
[[32mDebug[39m] end_abstraction: 0
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> â¥ : &'_ (test1::List<i32>) ;
  abs@0{parents={}}{regions={0}} {
    âshared@1â,
    proj_loans (s@1 : bool)
  }
  None -> @shared_loan({1}, test1::List::Cons { 0 = 0: i32; 1 = s@0 : std::boxed::Box<test1::List<i32>>; }) ;
}

[[32mDebug[39m] end_abstraction: 0
- context after parent abstractions ended:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> â¥ : &'_ (test1::List<i32>) ;
  abs@0{parents={}}{regions={0}} {
    âshared@1â,
    proj_loans (s@1 : bool)
  }
  None -> @shared_loan({1}, test1::List::Cons { 0 = 0: i32; 1 = s@0 : std::boxed::Box<test1::List<i32>>; }) ;
}

[[32mDebug[39m] end_abstraction: 0
- context after loans ended:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> â¥ : &'_ (test1::List<i32>) ;
  abs@0{parents={}}{regions={0}} {
    âshared@1â,
    proj_loans (s@1 : bool)
  }
  None -> @shared_loan({1}, test1::List::Cons { 0 = 0: i32; 1 = s@0 : std::boxed::Box<test1::List<i32>>; }) ;
}

[[32mDebug[39m] end_abstraction: 0
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> â¥ : &'_ (test1::List<i32>) ;
  abs@0{parents={}}{regions={0}} {
    âshared@1â,
    proj_loans (s@1 : bool)
  }
  None -> @shared_loan({1}, test1::List::Cons { 0 = 0: i32; 1 = s@0 : std::boxed::Box<test1::List<i32>>; }) ;
}


- new context:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> â¥ : &'_ (test1::List<i32>) ;
  None -> test1::List::Cons { 0 = 0: i32; 1 = s@0 : std::boxed::Box<test1::List<i32>>; } ;
}

[[32mDebug[39m] 
**About to evaluate statement**: [
  return
]

**Context**:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (var@4) -> â¥ : bool ;
  Some (var@5) -> â¥ : bool ;
  Some (var@6) -> â¥ : &'_ (test1::List<i32>) ;
  Some (var@7) -> â¥ : &'_ (test1::List<i32>) ;
}



[[32mDebug[39m] test_function_symbolic: split_list
[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := false;
  var@7 := false;
  var@7 := true;
  var@8 := true;
  var@2 := discriminant(l);
  switch (move var@2) {
    0: isize => {
      var@8 := false;
      hd := move (l as test1::List::Cons).0;
      var@7 := false;
      tl := move (l as test1::List::Cons).1;
      var@5 := move hd;
      var@6 := move deref_box(tl);
      (var@0).0 := move var@5;
      (var@0).1 := move var@6;
      var@9 := move alloc::alloc::box_free<test1::List<T>>(move tl);
      return
    }
    _ => {
      panic
    }
  }
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : (T, test1::List<T>) ;
  Some (l) -> s@0 : test1::List<T> ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> â¥ : T ;
  Some (tl) -> â¥ : std::boxed::Box<test1::List<T>> ;
  Some (var@5) -> â¥ : T ;
  Some (var@6) -> â¥ : test1::List<T> ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := false
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : (T, test1::List<T>) ;
  Some (l) -> s@0 : test1::List<T> ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> â¥ : T ;
  Some (tl) -> â¥ : std::boxed::Box<test1::List<T>> ;
  Some (var@5) -> â¥ : T ;
  Some (var@6) -> â¥ : test1::List<T> ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : (T, test1::List<T>) ;
  Some (l) -> s@0 : test1::List<T> ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> â¥ : T ;
  Some (tl) -> â¥ : std::boxed::Box<test1::List<T>> ;
  Some (var@5) -> â¥ : T ;
  Some (var@6) -> â¥ : test1::List<T> ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}


- op:
false

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := false;
  var@7 := true;
  var@8 := true;
  var@2 := discriminant(l);
  switch (move var@2) {
    0: isize => {
      var@8 := false;
      hd := move (l as test1::List::Cons).0;
      var@7 := false;
      tl := move (l as test1::List::Cons).1;
      var@5 := move hd;
      var@6 := move deref_box(tl);
      (var@0).0 := move var@5;
      (var@0).1 := move var@6;
      var@9 := move alloc::alloc::box_free<test1::List<T>>(move tl);
      return
    }
    _ => {
      panic
    }
  }
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : (T, test1::List<T>) ;
  Some (l) -> s@0 : test1::List<T> ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> â¥ : T ;
  Some (tl) -> â¥ : std::boxed::Box<test1::List<T>> ;
  Some (var@5) -> â¥ : T ;
  Some (var@6) -> â¥ : test1::List<T> ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> false ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := false
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : (T, test1::List<T>) ;
  Some (l) -> s@0 : test1::List<T> ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> â¥ : T ;
  Some (tl) -> â¥ : std::boxed::Box<test1::List<T>> ;
  Some (var@5) -> â¥ : T ;
  Some (var@6) -> â¥ : test1::List<T> ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> false ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : (T, test1::List<T>) ;
  Some (l) -> s@0 : test1::List<T> ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> â¥ : T ;
  Some (tl) -> â¥ : std::boxed::Box<test1::List<T>> ;
  Some (var@5) -> â¥ : T ;
  Some (var@6) -> â¥ : test1::List<T> ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> false ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}


- op:
false

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := true;
  var@8 := true;
  var@2 := discriminant(l);
  switch (move var@2) {
    0: isize => {
      var@8 := false;
      hd := move (l as test1::List::Cons).0;
      var@7 := false;
      tl := move (l as test1::List::Cons).1;
      var@5 := move hd;
      var@6 := move deref_box(tl);
      (var@0).0 := move var@5;
      (var@0).1 := move var@6;
      var@9 := move alloc::alloc::box_free<test1::List<T>>(move tl);
      return
    }
    _ => {
      panic
    }
  }
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : (T, test1::List<T>) ;
  Some (l) -> s@0 : test1::List<T> ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> â¥ : T ;
  Some (tl) -> â¥ : std::boxed::Box<test1::List<T>> ;
  Some (var@5) -> â¥ : T ;
  Some (var@6) -> â¥ : test1::List<T> ;
  Some (var@7) -> false ;
  Some (var@8) -> false ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := true
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : (T, test1::List<T>) ;
  Some (l) -> s@0 : test1::List<T> ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> â¥ : T ;
  Some (tl) -> â¥ : std::boxed::Box<test1::List<T>> ;
  Some (var@5) -> â¥ : T ;
  Some (var@6) -> â¥ : test1::List<T> ;
  Some (var@7) -> false ;
  Some (var@8) -> false ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : (T, test1::List<T>) ;
  Some (l) -> s@0 : test1::List<T> ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> â¥ : T ;
  Some (tl) -> â¥ : std::boxed::Box<test1::List<T>> ;
  Some (var@5) -> â¥ : T ;
  Some (var@6) -> â¥ : test1::List<T> ;
  Some (var@7) -> false ;
  Some (var@8) -> false ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}


- op:
true

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := true;
  var@2 := discriminant(l);
  switch (move var@2) {
    0: isize => {
      var@8 := false;
      hd := move (l as test1::List::Cons).0;
      var@7 := false;
      tl := move (l as test1::List::Cons).1;
      var@5 := move hd;
      var@6 := move deref_box(tl);
      (var@0).0 := move var@5;
      (var@0).1 := move var@6;
      var@9 := move alloc::alloc::box_free<test1::List<T>>(move tl);
      return
    }
    _ => {
      panic
    }
  }
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : (T, test1::List<T>) ;
  Some (l) -> s@0 : test1::List<T> ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> â¥ : T ;
  Some (tl) -> â¥ : std::boxed::Box<test1::List<T>> ;
  Some (var@5) -> â¥ : T ;
  Some (var@6) -> â¥ : test1::List<T> ;
  Some (var@7) -> true ;
  Some (var@8) -> false ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := true
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : (T, test1::List<T>) ;
  Some (l) -> s@0 : test1::List<T> ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> â¥ : T ;
  Some (tl) -> â¥ : std::boxed::Box<test1::List<T>> ;
  Some (var@5) -> â¥ : T ;
  Some (var@6) -> â¥ : test1::List<T> ;
  Some (var@7) -> true ;
  Some (var@8) -> false ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : (T, test1::List<T>) ;
  Some (l) -> s@0 : test1::List<T> ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> â¥ : T ;
  Some (tl) -> â¥ : std::boxed::Box<test1::List<T>> ;
  Some (var@5) -> â¥ : T ;
  Some (var@6) -> â¥ : test1::List<T> ;
  Some (var@7) -> true ;
  Some (var@8) -> false ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}


- op:
true

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@2 := discriminant(l);
  switch (move var@2) {
    0: isize => {
      var@8 := false;
      hd := move (l as test1::List::Cons).0;
      var@7 := false;
      tl := move (l as test1::List::Cons).1;
      var@5 := move hd;
      var@6 := move deref_box(tl);
      (var@0).0 := move var@5;
      (var@0).1 := move var@6;
      var@9 := move alloc::alloc::box_free<test1::List<T>>(move tl);
      return
    }
    _ => {
      panic
    }
  }
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : (T, test1::List<T>) ;
  Some (l) -> s@0 : test1::List<T> ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> â¥ : T ;
  Some (tl) -> â¥ : std::boxed::Box<test1::List<T>> ;
  Some (var@5) -> â¥ : T ;
  Some (var@6) -> â¥ : test1::List<T> ;
  Some (var@7) -> true ;
  Some (var@8) -> true ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@2 := discriminant(l)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : (T, test1::List<T>) ;
  Some (l) -> s@0 : test1::List<T> ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> â¥ : T ;
  Some (tl) -> â¥ : std::boxed::Box<test1::List<T>> ;
  Some (var@5) -> â¥ : T ;
  Some (var@6) -> â¥ : test1::List<T> ;
  Some (var@7) -> true ;
  Some (var@8) -> true ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  switch (move var@2) {
    0: isize => {
      var@8 := false;
      hd := move (l as test1::List::Cons).0;
      var@7 := false;
      tl := move (l as test1::List::Cons).1;
      var@5 := move hd;
      var@6 := move deref_box(tl);
      (var@0).0 := move var@5;
      (var@0).1 := move var@6;
      var@9 := move alloc::alloc::box_free<test1::List<T>>(move tl);
      return
    }
    _ => {
      panic
    }
  }
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : (T, test1::List<T>) ;
  Some (l) -> test1::List::Cons { 0 = s@1 : T; 1 = s@2 : std::boxed::Box<test1::List<T>>; } ;
  Some (var@2) -> 0: isize ;
  Some (hd) -> â¥ : T ;
  Some (tl) -> â¥ : std::boxed::Box<test1::List<T>> ;
  Some (var@5) -> â¥ : T ;
  Some (var@6) -> â¥ : test1::List<T> ;
  Some (var@7) -> true ;
  Some (var@8) -> true ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : (T, test1::List<T>) ;
  Some (l) -> test1::List::Cons { 0 = s@1 : T; 1 = s@2 : std::boxed::Box<test1::List<T>>; } ;
  Some (var@2) -> 0: isize ;
  Some (hd) -> â¥ : T ;
  Some (tl) -> â¥ : std::boxed::Box<test1::List<T>> ;
  Some (var@5) -> â¥ : T ;
  Some (var@6) -> â¥ : test1::List<T> ;
  Some (var@7) -> true ;
  Some (var@8) -> true ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}


- op:
move var@2

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := false;
  hd := move (l as test1::List::Cons).0;
  var@7 := false;
  tl := move (l as test1::List::Cons).1;
  var@5 := move hd;
  var@6 := move deref_box(tl);
  (var@0).0 := move var@5;
  (var@0).1 := move var@6;
  var@9 := move alloc::alloc::box_free<test1::List<T>>(move tl);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : (T, test1::List<T>) ;
  Some (l) -> test1::List::Cons { 0 = s@1 : T; 1 = s@2 : std::boxed::Box<test1::List<T>>; } ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> â¥ : T ;
  Some (tl) -> â¥ : std::boxed::Box<test1::List<T>> ;
  Some (var@5) -> â¥ : T ;
  Some (var@6) -> â¥ : test1::List<T> ;
  Some (var@7) -> true ;
  Some (var@8) -> true ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := false
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : (T, test1::List<T>) ;
  Some (l) -> test1::List::Cons { 0 = s@1 : T; 1 = s@2 : std::boxed::Box<test1::List<T>>; } ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> â¥ : T ;
  Some (tl) -> â¥ : std::boxed::Box<test1::List<T>> ;
  Some (var@5) -> â¥ : T ;
  Some (var@6) -> â¥ : test1::List<T> ;
  Some (var@7) -> true ;
  Some (var@8) -> true ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : (T, test1::List<T>) ;
  Some (l) -> test1::List::Cons { 0 = s@1 : T; 1 = s@2 : std::boxed::Box<test1::List<T>>; } ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> â¥ : T ;
  Some (tl) -> â¥ : std::boxed::Box<test1::List<T>> ;
  Some (var@5) -> â¥ : T ;
  Some (var@6) -> â¥ : test1::List<T> ;
  Some (var@7) -> true ;
  Some (var@8) -> true ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}


- op:
false

[[32mDebug[39m] 
**About to evaluate statement**: [
  hd := move (l as test1::List::Cons).0;
  var@7 := false;
  tl := move (l as test1::List::Cons).1;
  var@5 := move hd;
  var@6 := move deref_box(tl);
  (var@0).0 := move var@5;
  (var@0).1 := move var@6;
  var@9 := move alloc::alloc::box_free<test1::List<T>>(move tl);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : (T, test1::List<T>) ;
  Some (l) -> test1::List::Cons { 0 = s@1 : T; 1 = s@2 : std::boxed::Box<test1::List<T>>; } ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> â¥ : T ;
  Some (tl) -> â¥ : std::boxed::Box<test1::List<T>> ;
  Some (var@5) -> â¥ : T ;
  Some (var@6) -> â¥ : test1::List<T> ;
  Some (var@7) -> true ;
  Some (var@8) -> false ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  hd := move (l as test1::List::Cons).0
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : (T, test1::List<T>) ;
  Some (l) -> test1::List::Cons { 0 = s@1 : T; 1 = s@2 : std::boxed::Box<test1::List<T>>; } ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> â¥ : T ;
  Some (tl) -> â¥ : std::boxed::Box<test1::List<T>> ;
  Some (var@5) -> â¥ : T ;
  Some (var@6) -> â¥ : test1::List<T> ;
  Some (var@7) -> true ;
  Some (var@8) -> false ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : (T, test1::List<T>) ;
  Some (l) -> test1::List::Cons { 0 = s@1 : T; 1 = s@2 : std::boxed::Box<test1::List<T>>; } ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> â¥ : T ;
  Some (tl) -> â¥ : std::boxed::Box<test1::List<T>> ;
  Some (var@5) -> â¥ : T ;
  Some (var@6) -> â¥ : test1::List<T> ;
  Some (var@7) -> true ;
  Some (var@8) -> false ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}


- op:
move (l as test1::List::Cons).0

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := false;
  tl := move (l as test1::List::Cons).1;
  var@5 := move hd;
  var@6 := move deref_box(tl);
  (var@0).0 := move var@5;
  (var@0).1 := move var@6;
  var@9 := move alloc::alloc::box_free<test1::List<T>>(move tl);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : (T, test1::List<T>) ;
  Some (l) -> test1::List::Cons { 0 = â¥ : T; 1 = s@2 : std::boxed::Box<test1::List<T>>; } ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> s@1 : T ;
  Some (tl) -> â¥ : std::boxed::Box<test1::List<T>> ;
  Some (var@5) -> â¥ : T ;
  Some (var@6) -> â¥ : test1::List<T> ;
  Some (var@7) -> true ;
  Some (var@8) -> false ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := false
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : (T, test1::List<T>) ;
  Some (l) -> test1::List::Cons { 0 = â¥ : T; 1 = s@2 : std::boxed::Box<test1::List<T>>; } ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> s@1 : T ;
  Some (tl) -> â¥ : std::boxed::Box<test1::List<T>> ;
  Some (var@5) -> â¥ : T ;
  Some (var@6) -> â¥ : test1::List<T> ;
  Some (var@7) -> true ;
  Some (var@8) -> false ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : (T, test1::List<T>) ;
  Some (l) -> test1::List::Cons { 0 = â¥ : T; 1 = s@2 : std::boxed::Box<test1::List<T>>; } ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> s@1 : T ;
  Some (tl) -> â¥ : std::boxed::Box<test1::List<T>> ;
  Some (var@5) -> â¥ : T ;
  Some (var@6) -> â¥ : test1::List<T> ;
  Some (var@7) -> true ;
  Some (var@8) -> false ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}


- op:
false

[[32mDebug[39m] 
**About to evaluate statement**: [
  tl := move (l as test1::List::Cons).1;
  var@5 := move hd;
  var@6 := move deref_box(tl);
  (var@0).0 := move var@5;
  (var@0).1 := move var@6;
  var@9 := move alloc::alloc::box_free<test1::List<T>>(move tl);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : (T, test1::List<T>) ;
  Some (l) -> test1::List::Cons { 0 = â¥ : T; 1 = s@2 : std::boxed::Box<test1::List<T>>; } ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> s@1 : T ;
  Some (tl) -> â¥ : std::boxed::Box<test1::List<T>> ;
  Some (var@5) -> â¥ : T ;
  Some (var@6) -> â¥ : test1::List<T> ;
  Some (var@7) -> false ;
  Some (var@8) -> false ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  tl := move (l as test1::List::Cons).1
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : (T, test1::List<T>) ;
  Some (l) -> test1::List::Cons { 0 = â¥ : T; 1 = s@2 : std::boxed::Box<test1::List<T>>; } ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> s@1 : T ;
  Some (tl) -> â¥ : std::boxed::Box<test1::List<T>> ;
  Some (var@5) -> â¥ : T ;
  Some (var@6) -> â¥ : test1::List<T> ;
  Some (var@7) -> false ;
  Some (var@8) -> false ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : (T, test1::List<T>) ;
  Some (l) -> test1::List::Cons { 0 = â¥ : T; 1 = s@2 : std::boxed::Box<test1::List<T>>; } ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> s@1 : T ;
  Some (tl) -> â¥ : std::boxed::Box<test1::List<T>> ;
  Some (var@5) -> â¥ : T ;
  Some (var@6) -> â¥ : test1::List<T> ;
  Some (var@7) -> false ;
  Some (var@8) -> false ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}


- op:
move (l as test1::List::Cons).1

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := move hd;
  var@6 := move deref_box(tl);
  (var@0).0 := move var@5;
  (var@0).1 := move var@6;
  var@9 := move alloc::alloc::box_free<test1::List<T>>(move tl);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : (T, test1::List<T>) ;
  Some (l) -> test1::List::Cons { 0 = â¥ : T; 1 = â¥ : std::boxed::Box<test1::List<T>>; } ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> s@1 : T ;
  Some (tl) -> s@2 : std::boxed::Box<test1::List<T>> ;
  Some (var@5) -> â¥ : T ;
  Some (var@6) -> â¥ : test1::List<T> ;
  Some (var@7) -> false ;
  Some (var@8) -> false ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := move hd
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : (T, test1::List<T>) ;
  Some (l) -> test1::List::Cons { 0 = â¥ : T; 1 = â¥ : std::boxed::Box<test1::List<T>>; } ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> s@1 : T ;
  Some (tl) -> s@2 : std::boxed::Box<test1::List<T>> ;
  Some (var@5) -> â¥ : T ;
  Some (var@6) -> â¥ : test1::List<T> ;
  Some (var@7) -> false ;
  Some (var@8) -> false ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : (T, test1::List<T>) ;
  Some (l) -> test1::List::Cons { 0 = â¥ : T; 1 = â¥ : std::boxed::Box<test1::List<T>>; } ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> s@1 : T ;
  Some (tl) -> s@2 : std::boxed::Box<test1::List<T>> ;
  Some (var@5) -> â¥ : T ;
  Some (var@6) -> â¥ : test1::List<T> ;
  Some (var@7) -> false ;
  Some (var@8) -> false ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}


- op:
move hd

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@6 := move deref_box(tl);
  (var@0).0 := move var@5;
  (var@0).1 := move var@6;
  var@9 := move alloc::alloc::box_free<test1::List<T>>(move tl);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : (T, test1::List<T>) ;
  Some (l) -> test1::List::Cons { 0 = â¥ : T; 1 = â¥ : std::boxed::Box<test1::List<T>>; } ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> â¥ : T ;
  Some (tl) -> s@2 : std::boxed::Box<test1::List<T>> ;
  Some (var@5) -> s@1 : T ;
  Some (var@6) -> â¥ : test1::List<T> ;
  Some (var@7) -> false ;
  Some (var@8) -> false ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@6 := move deref_box(tl)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : (T, test1::List<T>) ;
  Some (l) -> test1::List::Cons { 0 = â¥ : T; 1 = â¥ : std::boxed::Box<test1::List<T>>; } ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> â¥ : T ;
  Some (tl) -> s@2 : std::boxed::Box<test1::List<T>> ;
  Some (var@5) -> s@1 : T ;
  Some (var@6) -> â¥ : test1::List<T> ;
  Some (var@7) -> false ;
  Some (var@8) -> false ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : (T, test1::List<T>) ;
  Some (l) -> test1::List::Cons { 0 = â¥ : T; 1 = â¥ : std::boxed::Box<test1::List<T>>; } ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> â¥ : T ;
  Some (tl) -> s@2 : std::boxed::Box<test1::List<T>> ;
  Some (var@5) -> s@1 : T ;
  Some (var@6) -> â¥ : test1::List<T> ;
  Some (var@7) -> false ;
  Some (var@8) -> false ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}


- op:
move deref_box(tl)

[[32mDebug[39m] expand_symbolic_value: s@2 : std::boxed::Box<test1::List<T>>

- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : (T, test1::List<T>) ;
  Some (l) -> test1::List::Cons { 0 = â¥ : T; 1 = â¥ : std::boxed::Box<test1::List<T>>; } ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> â¥ : T ;
  Some (tl) -> s@2 : std::boxed::Box<test1::List<T>> ;
  Some (var@5) -> s@1 : T ;
  Some (var@6) -> â¥ : test1::List<T> ;
  Some (var@7) -> false ;
  Some (var@8) -> false ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}


- new context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : (T, test1::List<T>) ;
  Some (l) -> test1::List::Cons { 0 = â¥ : T; 1 = â¥ : std::boxed::Box<test1::List<T>>; } ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> â¥ : T ;
  Some (tl) -> @Box(s@3 : test1::List<T>) ;
  Some (var@5) -> s@1 : T ;
  Some (var@6) -> â¥ : test1::List<T> ;
  Some (var@7) -> false ;
  Some (var@8) -> false ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}


[[32mDebug[39m] 
**About to evaluate statement**: [
  (var@0).0 := move var@5;
  (var@0).1 := move var@6;
  var@9 := move alloc::alloc::box_free<test1::List<T>>(move tl);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : (T, test1::List<T>) ;
  Some (l) -> test1::List::Cons { 0 = â¥ : T; 1 = â¥ : std::boxed::Box<test1::List<T>>; } ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> â¥ : T ;
  Some (tl) -> @Box(â¥ : test1::List<T>) ;
  Some (var@5) -> s@1 : T ;
  Some (var@6) -> s@3 : test1::List<T> ;
  Some (var@7) -> false ;
  Some (var@8) -> false ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  (var@0).0 := move var@5
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : (T, test1::List<T>) ;
  Some (l) -> test1::List::Cons { 0 = â¥ : T; 1 = â¥ : std::boxed::Box<test1::List<T>>; } ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> â¥ : T ;
  Some (tl) -> @Box(â¥ : test1::List<T>) ;
  Some (var@5) -> s@1 : T ;
  Some (var@6) -> s@3 : test1::List<T> ;
  Some (var@7) -> false ;
  Some (var@8) -> false ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : (T, test1::List<T>) ;
  Some (l) -> test1::List::Cons { 0 = â¥ : T; 1 = â¥ : std::boxed::Box<test1::List<T>>; } ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> â¥ : T ;
  Some (tl) -> @Box(â¥ : test1::List<T>) ;
  Some (var@5) -> s@1 : T ;
  Some (var@6) -> s@3 : test1::List<T> ;
  Some (var@7) -> false ;
  Some (var@8) -> false ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}


- op:
move var@5

[[32mDebug[39m] expand_bottom_value_from_projection:
pe: (Expressions.Field ((Expressions.ProjTuple 2), 0))
ty: (Types.Adt (Types.Tuple, [],
   [(Types.TypeVar 0); (Types.Adt ((Types.AdtId 1), [], [(Types.TypeVar 0)]))
     ]
   ))
[[32mDebug[39m] 
**About to evaluate statement**: [
  (var@0).1 := move var@6;
  var@9 := move alloc::alloc::box_free<test1::List<T>>(move tl);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> (s@1 : T, â¥ : test1::List<T>) ;
  Some (l) -> test1::List::Cons { 0 = â¥ : T; 1 = â¥ : std::boxed::Box<test1::List<T>>; } ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> â¥ : T ;
  Some (tl) -> @Box(â¥ : test1::List<T>) ;
  Some (var@5) -> â¥ : T ;
  Some (var@6) -> s@3 : test1::List<T> ;
  Some (var@7) -> false ;
  Some (var@8) -> false ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  (var@0).1 := move var@6
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> (s@1 : T, â¥ : test1::List<T>) ;
  Some (l) -> test1::List::Cons { 0 = â¥ : T; 1 = â¥ : std::boxed::Box<test1::List<T>>; } ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> â¥ : T ;
  Some (tl) -> @Box(â¥ : test1::List<T>) ;
  Some (var@5) -> â¥ : T ;
  Some (var@6) -> s@3 : test1::List<T> ;
  Some (var@7) -> false ;
  Some (var@8) -> false ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> (s@1 : T, â¥ : test1::List<T>) ;
  Some (l) -> test1::List::Cons { 0 = â¥ : T; 1 = â¥ : std::boxed::Box<test1::List<T>>; } ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> â¥ : T ;
  Some (tl) -> @Box(â¥ : test1::List<T>) ;
  Some (var@5) -> â¥ : T ;
  Some (var@6) -> s@3 : test1::List<T> ;
  Some (var@7) -> false ;
  Some (var@8) -> false ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}


- op:
move var@6

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@9 := move alloc::alloc::box_free<test1::List<T>>(move tl);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> (s@1 : T, s@3 : test1::List<T>) ;
  Some (l) -> test1::List::Cons { 0 = â¥ : T; 1 = â¥ : std::boxed::Box<test1::List<T>>; } ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> â¥ : T ;
  Some (tl) -> @Box(â¥ : test1::List<T>) ;
  Some (var@5) -> â¥ : T ;
  Some (var@6) -> â¥ : test1::List<T> ;
  Some (var@7) -> false ;
  Some (var@8) -> false ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@9 := move alloc::alloc::box_free<test1::List<T>>(move tl)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> (s@1 : T, s@3 : test1::List<T>) ;
  Some (l) -> test1::List::Cons { 0 = â¥ : T; 1 = â¥ : std::boxed::Box<test1::List<T>>; } ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> â¥ : T ;
  Some (tl) -> @Box(â¥ : test1::List<T>) ;
  Some (var@5) -> â¥ : T ;
  Some (var@6) -> â¥ : test1::List<T> ;
  Some (var@7) -> false ;
  Some (var@8) -> false ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}



[[32mDebug[39m] eval_non_local_function_call:
- fid:CfimAst.BoxFree
- type_params: [test1::List<T>]
- args: [move tl]
- dest: var@9
[[32mDebug[39m] drop_value: place: tl
[[32mDebug[39m] 
**About to evaluate statement**: [
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> (s@1 : T, s@3 : test1::List<T>) ;
  Some (l) -> test1::List::Cons { 0 = â¥ : T; 1 = â¥ : std::boxed::Box<test1::List<T>>; } ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> â¥ : T ;
  Some (tl) -> â¥ : std::boxed::Box<test1::List<T>> ;
  Some (var@5) -> â¥ : T ;
  Some (var@6) -> â¥ : test1::List<T> ;
  Some (var@7) -> false ;
  Some (var@8) -> false ;
  Some (var@9) -> () ;
  Some (var@10) -> â¥ : isize ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  switch (move var@2) {
    0: isize => {
      var@8 := false;
      hd := move (l as test1::List::Cons).0;
      var@7 := false;
      tl := move (l as test1::List::Cons).1;
      var@5 := move hd;
      var@6 := move deref_box(tl);
      (var@0).0 := move var@5;
      (var@0).1 := move var@6;
      var@9 := move alloc::alloc::box_free<test1::List<T>>(move tl);
      return
    }
    _ => {
      panic
    }
  }
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : (T, test1::List<T>) ;
  Some (l) -> test1::List::Nil ;
  Some (var@2) -> 1: isize ;
  Some (hd) -> â¥ : T ;
  Some (tl) -> â¥ : std::boxed::Box<test1::List<T>> ;
  Some (var@5) -> â¥ : T ;
  Some (var@6) -> â¥ : test1::List<T> ;
  Some (var@7) -> true ;
  Some (var@8) -> true ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : (T, test1::List<T>) ;
  Some (l) -> test1::List::Nil ;
  Some (var@2) -> 1: isize ;
  Some (hd) -> â¥ : T ;
  Some (tl) -> â¥ : std::boxed::Box<test1::List<T>> ;
  Some (var@5) -> â¥ : T ;
  Some (var@6) -> â¥ : test1::List<T> ;
  Some (var@7) -> true ;
  Some (var@8) -> true ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}


- op:
move var@2

[[32mDebug[39m] 
**About to evaluate statement**: [
  panic
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : (T, test1::List<T>) ;
  Some (l) -> test1::List::Nil ;
  Some (var@2) -> â¥ : isize ;
  Some (hd) -> â¥ : T ;
  Some (tl) -> â¥ : std::boxed::Box<test1::List<T>> ;
  Some (var@5) -> â¥ : T ;
  Some (var@6) -> â¥ : test1::List<T> ;
  Some (var@7) -> true ;
  Some (var@8) -> true ;
  Some (var@9) -> â¥ : () ;
  Some (var@10) -> â¥ : isize ;
}



[[32mDebug[39m] test_function_symbolic: test_split_list
[[32mDebug[39m] 
**About to evaluate statement**: [
  set_discriminant(var@3, 1);
  var@2 := move alloc::boxed::Box<test1::List<i32>>::new(move var@3);
  (l as test1::List::Cons).0 := 0: i32;
  (l as test1::List::Cons).1 := move var@2;
  set_discriminant(l, 0);
  var@7 := move l;
  var@6 := move split_list<i32>(move var@7);
  hd := copy (var@6).0;
  tl := move (var@6).1;
  var@10 := copy hd;
  var@9 := move var@10 == 0: i32;
  var@8 := Â¬ move var@9;
  assert(Â¬move var@8);
  drop(tl);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  set_discriminant(var@3, 1)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@2 := move alloc::boxed::Box<test1::List<i32>>::new(move var@3);
  (l as test1::List::Cons).0 := 0: i32;
  (l as test1::List::Cons).1 := move var@2;
  set_discriminant(l, 0);
  var@7 := move l;
  var@6 := move split_list<i32>(move var@7);
  hd := copy (var@6).0;
  tl := move (var@6).1;
  var@10 := copy hd;
  var@9 := move var@10 == 0: i32;
  var@8 := Â¬ move var@9;
  assert(Â¬move var@8);
  drop(tl);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> test1::List::Nil ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@2 := move alloc::boxed::Box<test1::List<i32>>::new(move var@3)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> test1::List::Nil ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_non_local_function_call:
- fid:CfimAst.BoxNew
- type_params: [test1::List<i32>]
- args: [move var@3]
- dest: var@2
[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> test1::List::Nil ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
}


- op:
move var@3

[[32mDebug[39m] 
**About to evaluate statement**: [
  (l as test1::List::Cons).0 := 0: i32;
  (l as test1::List::Cons).1 := move var@2;
  set_discriminant(l, 0);
  var@7 := move l;
  var@6 := move split_list<i32>(move var@7);
  hd := copy (var@6).0;
  tl := move (var@6).1;
  var@10 := copy hd;
  var@9 := move var@10 == 0: i32;
  var@8 := Â¬ move var@9;
  assert(Â¬move var@8);
  drop(tl);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> s@0 : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  (l as test1::List::Cons).0 := 0: i32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> s@0 : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> s@0 : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
}


- op:
0: i32

[[32mDebug[39m] expand_bottom_value_from_projection:
pe: (Expressions.Field ((Expressions.ProjAdt (1, (Some 0))), 0))
ty: (Types.Adt ((Types.AdtId 1), [], [(Types.Integer Types.I32)]))
[[32mDebug[39m] 
**About to evaluate statement**: [
  (l as test1::List::Cons).1 := move var@2;
  set_discriminant(l, 0);
  var@7 := move l;
  var@6 := move split_list<i32>(move var@7);
  hd := copy (var@6).0;
  tl := move (var@6).1;
  var@10 := copy hd;
  var@9 := move var@10 == 0: i32;
  var@8 := Â¬ move var@9;
  assert(Â¬move var@8);
  drop(tl);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> test1::List::Cons { 0 = 0: i32; 1 = â¥ : std::boxed::Box<test1::List<i32>>; } ;
  Some (var@2) -> s@0 : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  (l as test1::List::Cons).1 := move var@2
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> test1::List::Cons { 0 = 0: i32; 1 = â¥ : std::boxed::Box<test1::List<i32>>; } ;
  Some (var@2) -> s@0 : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> test1::List::Cons { 0 = 0: i32; 1 = â¥ : std::boxed::Box<test1::List<i32>>; } ;
  Some (var@2) -> s@0 : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
}


- op:
move var@2

[[32mDebug[39m] 
**About to evaluate statement**: [
  set_discriminant(l, 0);
  var@7 := move l;
  var@6 := move split_list<i32>(move var@7);
  hd := copy (var@6).0;
  tl := move (var@6).1;
  var@10 := copy hd;
  var@9 := move var@10 == 0: i32;
  var@8 := Â¬ move var@9;
  assert(Â¬move var@8);
  drop(tl);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> test1::List::Cons { 0 = 0: i32; 1 = s@0 : std::boxed::Box<test1::List<i32>>; } ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  set_discriminant(l, 0)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> test1::List::Cons { 0 = 0: i32; 1 = s@0 : std::boxed::Box<test1::List<i32>>; } ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := move l;
  var@6 := move split_list<i32>(move var@7);
  hd := copy (var@6).0;
  tl := move (var@6).1;
  var@10 := copy hd;
  var@9 := move var@10 == 0: i32;
  var@8 := Â¬ move var@9;
  assert(Â¬move var@8);
  drop(tl);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> test1::List::Cons { 0 = 0: i32; 1 = s@0 : std::boxed::Box<test1::List<i32>>; } ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := move l
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> test1::List::Cons { 0 = 0: i32; 1 = s@0 : std::boxed::Box<test1::List<i32>>; } ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> test1::List::Cons { 0 = 0: i32; 1 = s@0 : std::boxed::Box<test1::List<i32>>; } ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
}


- op:
move l

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@6 := move split_list<i32>(move var@7);
  hd := copy (var@6).0;
  tl := move (var@6).1;
  var@10 := copy hd;
  var@9 := move var@10 == 0: i32;
  var@8 := Â¬ move var@9;
  assert(Â¬move var@8);
  drop(tl);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> test1::List::Cons { 0 = 0: i32; 1 = s@0 : std::boxed::Box<test1::List<i32>>; } ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@6 := move split_list<i32>(move var@7)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> test1::List::Cons { 0 = 0: i32; 1 = s@0 : std::boxed::Box<test1::List<i32>>; } ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> â¥ : (i32, test1::List<i32>) ;
  Some (var@7) -> test1::List::Cons { 0 = 0: i32; 1 = s@0 : std::boxed::Box<test1::List<i32>>; } ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
}


- op:
move var@7

[[32mDebug[39m] 
**About to evaluate statement**: [
  hd := copy (var@6).0;
  tl := move (var@6).1;
  var@10 := copy hd;
  var@9 := move var@10 == 0: i32;
  var@8 := Â¬ move var@9;
  assert(Â¬move var@8);
  drop(tl);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> s@1 : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  hd := copy (var@6).0
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> s@1 : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> s@1 : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
}


- op:
copy (var@6).0

[[32mDebug[39m] expand_symbolic_value: s@1 : (i32, test1::List<i32>)

- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> s@1 : (i32, test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
}


- new context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> â¥ : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> (s@2 : i32, s@3 : test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
}


[[32mDebug[39m] 
**About to evaluate statement**: [
  tl := move (var@6).1;
  var@10 := copy hd;
  var@9 := move var@10 == 0: i32;
  var@8 := Â¬ move var@9;
  assert(Â¬move var@8);
  drop(tl);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> s@2 : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> (s@2 : i32, s@3 : test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  tl := move (var@6).1
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> s@2 : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> (s@2 : i32, s@3 : test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> s@2 : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> (s@2 : i32, s@3 : test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
}


- op:
move (var@6).1

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@10 := copy hd;
  var@9 := move var@10 == 0: i32;
  var@8 := Â¬ move var@9;
  assert(Â¬move var@8);
  drop(tl);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> s@2 : i32 ;
  Some (tl) -> s@3 : test1::List<i32> ;
  Some (var@6) -> (s@2 : i32, â¥ : test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@10 := copy hd
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> s@2 : i32 ;
  Some (tl) -> s@3 : test1::List<i32> ;
  Some (var@6) -> (s@2 : i32, â¥ : test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> s@2 : i32 ;
  Some (tl) -> s@3 : test1::List<i32> ;
  Some (var@6) -> (s@2 : i32, â¥ : test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
}


- op:
copy hd

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@9 := move var@10 == 0: i32;
  var@8 := Â¬ move var@9;
  assert(Â¬move var@8);
  drop(tl);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> s@2 : i32 ;
  Some (tl) -> s@3 : test1::List<i32> ;
  Some (var@6) -> (s@2 : i32, â¥ : test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> s@2 : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@9 := move var@10 == 0: i32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> s@2 : i32 ;
  Some (tl) -> s@3 : test1::List<i32> ;
  Some (var@6) -> (s@2 : i32, â¥ : test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> s@2 : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> s@2 : i32 ;
  Some (tl) -> s@3 : test1::List<i32> ;
  Some (var@6) -> (s@2 : i32, â¥ : test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> s@2 : i32 ;
}


- op:
move var@10

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> s@2 : i32 ;
  Some (tl) -> s@3 : test1::List<i32> ;
  Some (var@6) -> (s@2 : i32, â¥ : test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
}


- op:
0: i32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := Â¬ move var@9;
  assert(Â¬move var@8);
  drop(tl);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> s@2 : i32 ;
  Some (tl) -> s@3 : test1::List<i32> ;
  Some (var@6) -> (s@2 : i32, â¥ : test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> s@4 : bool ;
  Some (var@10) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := Â¬ move var@9
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> s@2 : i32 ;
  Some (tl) -> s@3 : test1::List<i32> ;
  Some (var@6) -> (s@2 : i32, â¥ : test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> s@4 : bool ;
  Some (var@10) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> s@2 : i32 ;
  Some (tl) -> s@3 : test1::List<i32> ;
  Some (var@6) -> (s@2 : i32, â¥ : test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> s@4 : bool ;
  Some (var@10) -> â¥ : i32 ;
}


- op:
move var@9

[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@8);
  drop(tl);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> s@2 : i32 ;
  Some (tl) -> s@3 : test1::List<i32> ;
  Some (var@6) -> (s@2 : i32, â¥ : test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> s@5 : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@8)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> s@2 : i32 ;
  Some (tl) -> s@3 : test1::List<i32> ;
  Some (var@6) -> (s@2 : i32, â¥ : test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> s@5 : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> s@2 : i32 ;
  Some (tl) -> s@3 : test1::List<i32> ;
  Some (var@6) -> (s@2 : i32, â¥ : test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> true ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
}


- op:
move var@8

[[32mDebug[39m] 
**About to evaluate statement**: [
  drop(tl);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> s@2 : i32 ;
  Some (tl) -> s@3 : test1::List<i32> ;
  Some (var@6) -> (s@2 : i32, â¥ : test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  drop(tl)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> s@2 : i32 ;
  Some (tl) -> s@3 : test1::List<i32> ;
  Some (var@6) -> (s@2 : i32, â¥ : test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
}



[[32mDebug[39m] drop_value: place: tl
[[32mDebug[39m] 
**About to evaluate statement**: [
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (l) -> â¥ : test1::List<i32> ;
  Some (var@2) -> â¥ : std::boxed::Box<test1::List<i32>> ;
  Some (var@3) -> â¥ : test1::List<i32> ;
  Some (hd) -> s@2 : i32 ;
  Some (tl) -> â¥ : test1::List<i32> ;
  Some (var@6) -> (s@2 : i32, â¥ : test1::List<i32>) ;
  Some (var@7) -> â¥ : test1::List<i32> ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
}



[[32mDebug[39m] test_function_symbolic: get_elem
[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := copy b;
  if (move var@4) {
    var@0 := &mut *(x)
  }
  else {
    var@0 := move y
  };
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  abs@0{parents={}}{regions={0}} {
    proj_loans (s@0 : bool),
    proj_loans (s@1 : &r@0 mut (T)),
    proj_loans (s@2 : &r@0 mut (T))
  }
  Some (var@0) -> â¥ : &'_ mut (T) ;
  Some (b) -> s@0 : bool ;
  Some (x) -> s@1 : &r@0 mut (T) ;
  Some (y) -> s@2 : &r@0 mut (T) ;
  Some (var@4) -> â¥ : bool ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := copy b
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  abs@0{parents={}}{regions={0}} {
    proj_loans (s@0 : bool),
    proj_loans (s@1 : &r@0 mut (T)),
    proj_loans (s@2 : &r@0 mut (T))
  }
  Some (var@0) -> â¥ : &'_ mut (T) ;
  Some (b) -> s@0 : bool ;
  Some (x) -> s@1 : &r@0 mut (T) ;
  Some (y) -> s@2 : &r@0 mut (T) ;
  Some (var@4) -> â¥ : bool ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  abs@0{parents={}}{regions={0}} {
    proj_loans (s@0 : bool),
    proj_loans (s@1 : &r@0 mut (T)),
    proj_loans (s@2 : &r@0 mut (T))
  }
  Some (var@0) -> â¥ : &'_ mut (T) ;
  Some (b) -> s@0 : bool ;
  Some (x) -> s@1 : &r@0 mut (T) ;
  Some (y) -> s@2 : &r@0 mut (T) ;
  Some (var@4) -> â¥ : bool ;
}


- op:
copy b

[[32mDebug[39m] 
**About to evaluate statement**: [
  if (move var@4) {
    var@0 := &mut *(x)
  }
  else {
    var@0 := move y
  };
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  abs@0{parents={}}{regions={0}} {
    proj_loans (s@0 : bool),
    proj_loans (s@1 : &r@0 mut (T)),
    proj_loans (s@2 : &r@0 mut (T))
  }
  Some (var@0) -> â¥ : &'_ mut (T) ;
  Some (b) -> s@0 : bool ;
  Some (x) -> s@1 : &r@0 mut (T) ;
  Some (y) -> s@2 : &r@0 mut (T) ;
  Some (var@4) -> s@0 : bool ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  if (move var@4) {
    var@0 := &mut *(x)
  }
  else {
    var@0 := move y
  }
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  abs@0{parents={}}{regions={0}} {
    proj_loans (s@0 : bool),
    proj_loans (s@1 : &r@0 mut (T)),
    proj_loans (s@2 : &r@0 mut (T))
  }
  Some (var@0) -> â¥ : &'_ mut (T) ;
  Some (b) -> s@0 : bool ;
  Some (x) -> s@1 : &r@0 mut (T) ;
  Some (y) -> s@2 : &r@0 mut (T) ;
  Some (var@4) -> s@0 : bool ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  abs@0{parents={}}{regions={0}} {
    true,
    proj_loans (s@1 : &r@0 mut (T)),
    proj_loans (s@2 : &r@0 mut (T))
  }
  Some (var@0) -> â¥ : &'_ mut (T) ;
  Some (b) -> true ;
  Some (x) -> s@1 : &r@0 mut (T) ;
  Some (y) -> s@2 : &r@0 mut (T) ;
  Some (var@4) -> true ;
}


- op:
move var@4

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@0 := &mut *(x)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  abs@0{parents={}}{regions={0}} {
    true,
    proj_loans (s@1 : &r@0 mut (T)),
    proj_loans (s@2 : &r@0 mut (T))
  }
  Some (var@0) -> â¥ : &'_ mut (T) ;
  Some (b) -> true ;
  Some (x) -> s@1 : &r@0 mut (T) ;
  Some (y) -> s@2 : &r@0 mut (T) ;
  Some (var@4) -> â¥ : bool ;
}



[[32mDebug[39m] expand_symbolic_value: s@1 : &r@0 mut (T)

- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  abs@0{parents={}}{regions={0}} {
    true,
    proj_loans (s@1 : &r@0 mut (T)),
    proj_loans (s@2 : &r@0 mut (T))
  }
  Some (var@0) -> â¥ : &'_ mut (T) ;
  Some (b) -> true ;
  Some (x) -> s@1 : &r@0 mut (T) ;
  Some (y) -> s@2 : &r@0 mut (T) ;
  Some (var@4) -> â¥ : bool ;
}


- new context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  abs@0{parents={}}{regions={0}} {
    true,
    âmut@0, proj_loans (s@3 : T)â,
    proj_loans (s@2 : &r@0 mut (T))
  }
  Some (var@0) -> â¥ : &'_ mut (T) ;
  Some (b) -> true ;
  Some (x) -> &mut@0 (s@3 : T) ;
  Some (y) -> s@2 : &r@0 mut (T) ;
  Some (var@4) -> â¥ : bool ;
}


[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  abs@0{parents={}}{regions={0}} {
    false,
    proj_loans (s@1 : &r@0 mut (T)),
    proj_loans (s@2 : &r@0 mut (T))
  }
  Some (var@0) -> â¥ : &'_ mut (T) ;
  Some (b) -> false ;
  Some (x) -> s@1 : &r@0 mut (T) ;
  Some (y) -> s@2 : &r@0 mut (T) ;
  Some (var@4) -> false ;
}


- op:
move var@4

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@0 := move y
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  abs@0{parents={}}{regions={0}} {
    false,
    proj_loans (s@1 : &r@0 mut (T)),
    proj_loans (s@2 : &r@0 mut (T))
  }
  Some (var@0) -> â¥ : &'_ mut (T) ;
  Some (b) -> false ;
  Some (x) -> s@1 : &r@0 mut (T) ;
  Some (y) -> s@2 : &r@0 mut (T) ;
  Some (var@4) -> â¥ : bool ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  abs@0{parents={}}{regions={0}} {
    false,
    proj_loans (s@1 : &r@0 mut (T)),
    proj_loans (s@2 : &r@0 mut (T))
  }
  Some (var@0) -> â¥ : &'_ mut (T) ;
  Some (b) -> false ;
  Some (x) -> s@1 : &r@0 mut (T) ;
  Some (y) -> s@2 : &r@0 mut (T) ;
  Some (var@4) -> â¥ : bool ;
}


- op:
move y

[[32mDebug[39m] 
**About to evaluate statement**: [
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  abs@0{parents={}}{regions={0}} {
    true,
    âmut@0, proj_loans (s@3 : T)â,
    proj_loans (s@2 : &r@0 mut (T))
  }
  Some (var@0) -> &mut@1 (s@3 : T) ;
  Some (b) -> true ;
  Some (x) -> &mut@0 (âmut@1â) ;
  Some (y) -> s@2 : &r@0 mut (T) ;
  Some (var@4) -> â¥ : bool ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  abs@0{parents={}}{regions={0}} {
    false,
    proj_loans (s@1 : &r@0 mut (T)),
    proj_loans (s@2 : &r@0 mut (T))
  }
  Some (var@0) -> s@2 : &r@0 mut (T) ;
  Some (b) -> false ;
  Some (x) -> s@1 : &r@0 mut (T) ;
  Some (y) -> â¥ : &'_ mut (T) ;
  Some (var@4) -> â¥ : bool ;
}



[[32mDebug[39m] test_function_symbolic: get_elem_test
[[32mDebug[39m] 
**About to evaluate statement**: [
  x := 0: i32;
  y := 0: i32;
  var@5 := &mut x;
  var@4 := &two-phase *(var@5);
  var@7 := &mut y;
  var@6 := &two-phase *(var@7);
  z := move get_elem<i32>(true, move var@4, move var@6);
  var@8 := copy *(z);
  *(z) := copy var@8 + 1: i32;
  var@12 := copy *(z);
  var@11 := move var@12 == 1: i32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  var@15 := copy x;
  var@14 := move var@15 == 1: i32;
  var@13 := Â¬ move var@14;
  assert(Â¬move var@13);
  var@18 := copy y;
  var@17 := move var@18 == 0: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : i32 ;
  Some (y) -> â¥ : i32 ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  x := 0: i32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : i32 ;
  Some (y) -> â¥ : i32 ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : i32 ;
  Some (y) -> â¥ : i32 ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}


- op:
0: i32

[[32mDebug[39m] 
**About to evaluate statement**: [
  y := 0: i32;
  var@5 := &mut x;
  var@4 := &two-phase *(var@5);
  var@7 := &mut y;
  var@6 := &two-phase *(var@7);
  z := move get_elem<i32>(true, move var@4, move var@6);
  var@8 := copy *(z);
  *(z) := copy var@8 + 1: i32;
  var@12 := copy *(z);
  var@11 := move var@12 == 1: i32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  var@15 := copy x;
  var@14 := move var@15 == 1: i32;
  var@13 := Â¬ move var@14;
  assert(Â¬move var@13);
  var@18 := copy y;
  var@17 := move var@18 == 0: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> â¥ : i32 ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  y := 0: i32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> â¥ : i32 ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> â¥ : i32 ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}


- op:
0: i32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := &mut x;
  var@4 := &two-phase *(var@5);
  var@7 := &mut y;
  var@6 := &two-phase *(var@7);
  z := move get_elem<i32>(true, move var@4, move var@6);
  var@8 := copy *(z);
  *(z) := copy var@8 + 1: i32;
  var@12 := copy *(z);
  var@11 := move var@12 == 1: i32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  var@15 := copy x;
  var@14 := move var@15 == 1: i32;
  var@13 := Â¬ move var@14;
  assert(Â¬move var@13);
  var@18 := copy y;
  var@17 := move var@18 == 0: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> 0: i32 ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := &mut x
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (y) -> 0: i32 ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := &two-phase *(var@5);
  var@7 := &mut y;
  var@6 := &two-phase *(var@7);
  z := move get_elem<i32>(true, move var@4, move var@6);
  var@8 := copy *(z);
  *(z) := copy var@8 + 1: i32;
  var@12 := copy *(z);
  var@11 := move var@12 == 1: i32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  var@15 := copy x;
  var@14 := move var@15 == 1: i32;
  var@13 := Â¬ move var@14;
  assert(Â¬move var@13);
  var@18 := copy y;
  var@17 := move var@18 == 0: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> 0: i32 ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (0: i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := &two-phase *(var@5)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> 0: i32 ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (0: i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := &mut y;
  var@6 := &two-phase *(var@7);
  z := move get_elem<i32>(true, move var@4, move var@6);
  var@8 := copy *(z);
  *(z) := copy var@8 + 1: i32;
  var@12 := copy *(z);
  var@11 := move var@12 == 1: i32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  var@15 := copy x;
  var@14 := move var@15 == 1: i32;
  var@13 := Â¬ move var@14;
  assert(Â¬move var@13);
  var@18 := copy y;
  var@17 := move var@18 == 0: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> 0: i32 ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> âinactivated_mut@1â ;
  Some (var@5) -> &mut@0 (@shared_loan({1}, 0: i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := &mut y
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> 0: i32 ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> âinactivated_mut@1â ;
  Some (var@5) -> &mut@0 (@shared_loan({1}, 0: i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@6 := &two-phase *(var@7);
  z := move get_elem<i32>(true, move var@4, move var@6);
  var@8 := copy *(z);
  *(z) := copy var@8 + 1: i32;
  var@12 := copy *(z);
  var@11 := move var@12 == 1: i32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  var@15 := copy x;
  var@14 := move var@15 == 1: i32;
  var@13 := Â¬ move var@14;
  assert(Â¬move var@13);
  var@18 := copy y;
  var@17 := move var@18 == 0: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> âinactivated_mut@1â ;
  Some (var@5) -> &mut@0 (@shared_loan({1}, 0: i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (0: i32) ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@6 := &two-phase *(var@7)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> âinactivated_mut@1â ;
  Some (var@5) -> &mut@0 (@shared_loan({1}, 0: i32)) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (0: i32) ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  z := move get_elem<i32>(true, move var@4, move var@6);
  var@8 := copy *(z);
  *(z) := copy var@8 + 1: i32;
  var@12 := copy *(z);
  var@11 := move var@12 == 1: i32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  var@15 := copy x;
  var@14 := move var@15 == 1: i32;
  var@13 := Â¬ move var@14;
  assert(Â¬move var@13);
  var@18 := copy y;
  var@17 := move var@18 == 0: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> âinactivated_mut@1â ;
  Some (var@5) -> &mut@0 (@shared_loan({1}, 0: i32)) ;
  Some (var@6) -> âinactivated_mut@3â ;
  Some (var@7) -> &mut@2 (@shared_loan({3}, 0: i32)) ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  z := move get_elem<i32>(true, move var@4, move var@6)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> âinactivated_mut@1â ;
  Some (var@5) -> &mut@0 (@shared_loan({1}, 0: i32)) ;
  Some (var@6) -> âinactivated_mut@3â ;
  Some (var@7) -> &mut@2 (@shared_loan({3}, 0: i32)) ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] activate_inactivated_mut_borrow: resulting value:
0: i32
[[32mDebug[39m] activate_inactivated_mut_borrow: resulting value:
0: i32
[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> &mut@1 (0: i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> &mut@3 (0: i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}


- op:
true

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> &mut@1 (0: i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> &mut@3 (0: i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}


- op:
move var@4

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> &mut@3 (0: i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}


- op:
move var@6

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := copy *(z);
  *(z) := copy var@8 + 1: i32;
  var@12 := copy *(z);
  var@11 := move var@12 == 1: i32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  var@15 := copy x;
  var@14 := move var@15 == 1: i32;
  var@13 := Â¬ move var@14;
  assert(Â¬move var@13);
  var@18 := copy y;
  var@17 := move var@18 == 0: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> s@0 : &r@0 mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    true,
    &mut@1 (0: i32),
    &mut@3 (0: i32),
    proj_loans (s@0 : &r@0 mut (i32))
  }
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := copy *(z)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> s@0 : &r@0 mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    true,
    &mut@1 (0: i32),
    &mut@3 (0: i32),
    proj_loans (s@0 : &r@0 mut (i32))
  }
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> s@0 : &r@0 mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    true,
    &mut@1 (0: i32),
    &mut@3 (0: i32),
    proj_loans (s@0 : &r@0 mut (i32))
  }
}


- op:
copy *(z)

[[32mDebug[39m] expand_symbolic_value: s@0 : &r@0 mut (i32)

- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> s@0 : &r@0 mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    true,
    &mut@1 (0: i32),
    &mut@3 (0: i32),
    proj_loans (s@0 : &r@0 mut (i32))
  }
}


- new context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> &mut@4 (s@1 : i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    true,
    &mut@1 (0: i32),
    &mut@3 (0: i32),
    âmut@4, proj_loans (s@1 : i32)â
  }
}


[[32mDebug[39m] 
**About to evaluate statement**: [
  *(z) := copy var@8 + 1: i32;
  var@12 := copy *(z);
  var@11 := move var@12 == 1: i32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  var@15 := copy x;
  var@14 := move var@15 == 1: i32;
  var@13 := Â¬ move var@14;
  assert(Â¬move var@13);
  var@18 := copy y;
  var@17 := move var@18 == 0: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> &mut@4 (s@1 : i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> s@1 : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    true,
    &mut@1 (0: i32),
    &mut@3 (0: i32),
    âmut@4, proj_loans (s@1 : i32)â
  }
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  *(z) := copy var@8 + 1: i32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> &mut@4 (s@1 : i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> s@1 : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    true,
    &mut@1 (0: i32),
    &mut@3 (0: i32),
    âmut@4, proj_loans (s@1 : i32)â
  }
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> &mut@4 (s@1 : i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> s@1 : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    true,
    &mut@1 (0: i32),
    &mut@3 (0: i32),
    âmut@4, proj_loans (s@1 : i32)â
  }
}


- op:
copy var@8

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> &mut@4 (s@1 : i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> s@1 : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    true,
    &mut@1 (0: i32),
    &mut@3 (0: i32),
    âmut@4, proj_loans (s@1 : i32)â
  }
}


- op:
1: i32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@12 := copy *(z);
  var@11 := move var@12 == 1: i32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  var@15 := copy x;
  var@14 := move var@15 == 1: i32;
  var@13 := Â¬ move var@14;
  assert(Â¬move var@13);
  var@18 := copy y;
  var@17 := move var@18 == 0: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> &mut@4 (s@2 : i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> s@1 : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    true,
    &mut@1 (0: i32),
    &mut@3 (0: i32),
    âmut@4, proj_loans (s@1 : i32)â
  }
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@12 := copy *(z)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> &mut@4 (s@2 : i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> s@1 : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    true,
    &mut@1 (0: i32),
    &mut@3 (0: i32),
    âmut@4, proj_loans (s@1 : i32)â
  }
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> &mut@4 (s@2 : i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> s@1 : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    true,
    &mut@1 (0: i32),
    &mut@3 (0: i32),
    âmut@4, proj_loans (s@1 : i32)â
  }
}


- op:
copy *(z)

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@11 := move var@12 == 1: i32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  var@15 := copy x;
  var@14 := move var@15 == 1: i32;
  var@13 := Â¬ move var@14;
  assert(Â¬move var@13);
  var@18 := copy y;
  var@17 := move var@18 == 0: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> &mut@4 (s@2 : i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> s@1 : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> s@2 : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    true,
    &mut@1 (0: i32),
    &mut@3 (0: i32),
    âmut@4, proj_loans (s@1 : i32)â
  }
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@11 := move var@12 == 1: i32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> &mut@4 (s@2 : i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> s@1 : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> s@2 : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    true,
    &mut@1 (0: i32),
    &mut@3 (0: i32),
    âmut@4, proj_loans (s@1 : i32)â
  }
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> &mut@4 (s@2 : i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> s@1 : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> s@2 : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    true,
    &mut@1 (0: i32),
    &mut@3 (0: i32),
    âmut@4, proj_loans (s@1 : i32)â
  }
}


- op:
move var@12

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> &mut@4 (s@2 : i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> s@1 : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    true,
    &mut@1 (0: i32),
    &mut@3 (0: i32),
    âmut@4, proj_loans (s@1 : i32)â
  }
}


- op:
1: i32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  var@15 := copy x;
  var@14 := move var@15 == 1: i32;
  var@13 := Â¬ move var@14;
  assert(Â¬move var@13);
  var@18 := copy y;
  var@17 := move var@18 == 0: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> &mut@4 (s@2 : i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> s@1 : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> s@3 : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    true,
    &mut@1 (0: i32),
    &mut@3 (0: i32),
    âmut@4, proj_loans (s@1 : i32)â
  }
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@10 := Â¬ move var@11
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> &mut@4 (s@2 : i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> s@1 : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> s@3 : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    true,
    &mut@1 (0: i32),
    &mut@3 (0: i32),
    âmut@4, proj_loans (s@1 : i32)â
  }
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> &mut@4 (s@2 : i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> s@1 : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> s@3 : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    true,
    &mut@1 (0: i32),
    &mut@3 (0: i32),
    âmut@4, proj_loans (s@1 : i32)â
  }
}


- op:
move var@11

[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@10);
  var@15 := copy x;
  var@14 := move var@15 == 1: i32;
  var@13 := Â¬ move var@14;
  assert(Â¬move var@13);
  var@18 := copy y;
  var@17 := move var@18 == 0: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> &mut@4 (s@2 : i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> s@1 : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> s@4 : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    true,
    &mut@1 (0: i32),
    &mut@3 (0: i32),
    âmut@4, proj_loans (s@1 : i32)â
  }
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@10)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> &mut@4 (s@2 : i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> s@1 : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> s@4 : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    true,
    &mut@1 (0: i32),
    &mut@3 (0: i32),
    âmut@4, proj_loans (s@1 : i32)â
  }
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> &mut@4 (s@2 : i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> s@1 : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> true ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    true,
    &mut@1 (0: i32),
    &mut@3 (0: i32),
    âmut@4, proj_loans (s@1 : i32)â
  }
}


- op:
move var@10

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@15 := copy x;
  var@14 := move var@15 == 1: i32;
  var@13 := Â¬ move var@14;
  assert(Â¬move var@13);
  var@18 := copy y;
  var@17 := move var@18 == 0: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> &mut@4 (s@2 : i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> s@1 : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    true,
    &mut@1 (0: i32),
    &mut@3 (0: i32),
    âmut@4, proj_loans (s@1 : i32)â
  }
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@15 := copy x
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> &mut@4 (s@2 : i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> s@1 : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    true,
    &mut@1 (0: i32),
    &mut@3 (0: i32),
    âmut@4, proj_loans (s@1 : i32)â
  }
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> &mut@4 (s@2 : i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> s@1 : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    true,
    &mut@1 (0: i32),
    &mut@3 (0: i32),
    âmut@4, proj_loans (s@1 : i32)â
  }
}


- op:
copy x

[[32mDebug[39m] end borrow: 0:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> &mut@4 (s@2 : i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> s@1 : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    true,
    &mut@1 (0: i32),
    &mut@3 (0: i32),
    âmut@4, proj_loans (s@1 : i32)â
  }
}

[[32mDebug[39m] end borrow: 0: found outer borrows/abs:(InterpreterBorrowsCore.InnerLoans (InterpreterBorrowsCore.Borrow 1))
[[32mDebug[39m] end borrow: 1:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> &mut@4 (s@2 : i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> s@1 : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    true,
    &mut@1 (0: i32),
    &mut@3 (0: i32),
    âmut@4, proj_loans (s@1 : i32)â
  }
}

[[32mDebug[39m] end borrow: 1: found outer borrows/abs:(InterpreterBorrowsCore.OuterAbs 0)
[[32mDebug[39m] end_abstraction: 0
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> &mut@4 (s@2 : i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> s@1 : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    true,
    &mut@1 (0: i32),
    &mut@3 (0: i32),
    âmut@4, proj_loans (s@1 : i32)â
  }
}

[[32mDebug[39m] end_abstraction: 0
- context after parent abstractions ended:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> &mut@4 (s@2 : i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> s@1 : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    true,
    &mut@1 (0: i32),
    &mut@3 (0: i32),
    âmut@4, proj_loans (s@1 : i32)â
  }
}

[[32mDebug[39m] end borrow: 4:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> &mut@4 (s@2 : i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> s@1 : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    true,
    &mut@1 (0: i32),
    &mut@3 (0: i32),
    âmut@4, proj_loans (s@1 : i32)â
  }
}

[[32mDebug[39m] give_back:
- bid: 4
- content: &mut@4 (s@2 : i32)
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> s@1 : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    true,
    &mut@1 (0: i32),
    &mut@3 (0: i32),
    âmut@4, proj_loans (s@1 : i32)â
  }
}


[[32mDebug[39m] give_back_value:
- bid: 4
- value: s@2 : i32
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> s@1 : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    true,
    &mut@1 (0: i32),
    &mut@3 (0: i32),
    âmut@4, proj_loans (s@1 : i32)â
  }
}


[[32mDebug[39m] end_abstraction: 0
- context after loans ended:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> s@1 : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    true,
    &mut@1 (0: i32),
    &mut@3 (0: i32),
    @ended_mut_loan{ given_back=proj_borrows (s@2 : i32 <: i32); child=proj_loans (s@1 : i32) }
  }
}

[[32mDebug[39m] give_back_value:
- bid: 1
- value: s@5 : i32
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> s@1 : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    true,
    â¥ : &r@0 mut (i32),
    &mut@3 (0: i32),
    @ended_mut_loan{ given_back=proj_borrows (s@2 : i32 <: i32); child=proj_loans (s@1 : i32) }
  }
}


[[32mDebug[39m] give_back_value:
- bid: 3
- value: s@6 : i32
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (s@5 : i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> s@1 : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    true,
    â¥ : &r@0 mut (i32),
    â¥ : &r@0 mut (i32),
    @ended_mut_loan{ given_back=proj_borrows (s@2 : i32 <: i32); child=proj_loans (s@1 : i32) }
  }
}


[[32mDebug[39m] end_abstraction: 0
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> &mut@4 (s@2 : i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (âmut@1â) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (âmut@3â) ;
  Some (var@8) -> s@1 : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    true,
    &mut@1 (0: i32),
    &mut@3 (0: i32),
    âmut@4, proj_loans (s@1 : i32)â
  }
}


- new context:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (s@5 : i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (s@6 : i32) ;
  Some (var@8) -> s@1 : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}

[[32mDebug[39m] end borrow: 0:
- original context:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> &mut@0 (s@5 : i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (s@6 : i32) ;
  Some (var@8) -> s@1 : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}

[[32mDebug[39m] give_back:
- bid: 0
- content: &mut@0 (s@5 : i32)
- context:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (s@6 : i32) ;
  Some (var@8) -> s@1 : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}


[[32mDebug[39m] give_back_value:
- bid: 0
- value: s@5 : i32
- context:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (y) -> âmut@2â ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (s@6 : i32) ;
  Some (var@8) -> s@1 : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}


[[32mDebug[39m] 
**About to evaluate statement**: [
  var@14 := move var@15 == 1: i32;
  var@13 := Â¬ move var@14;
  assert(Â¬move var@13);
  var@18 := copy y;
  var@17 := move var@18 == 0: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@5 : i32 ;
  Some (y) -> âmut@2â ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (s@6 : i32) ;
  Some (var@8) -> s@1 : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> s@5 : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@14 := move var@15 == 1: i32
]

**Context**:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@5 : i32 ;
  Some (y) -> âmut@2â ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (s@6 : i32) ;
  Some (var@8) -> s@1 : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> s@5 : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@5 : i32 ;
  Some (y) -> âmut@2â ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (s@6 : i32) ;
  Some (var@8) -> s@1 : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> s@5 : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}


- op:
move var@15

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@5 : i32 ;
  Some (y) -> âmut@2â ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (s@6 : i32) ;
  Some (var@8) -> s@1 : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}


- op:
1: i32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@13 := Â¬ move var@14;
  assert(Â¬move var@13);
  var@18 := copy y;
  var@17 := move var@18 == 0: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@5 : i32 ;
  Some (y) -> âmut@2â ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (s@6 : i32) ;
  Some (var@8) -> s@1 : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> s@7 : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@13 := Â¬ move var@14
]

**Context**:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@5 : i32 ;
  Some (y) -> âmut@2â ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (s@6 : i32) ;
  Some (var@8) -> s@1 : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> s@7 : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@5 : i32 ;
  Some (y) -> âmut@2â ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (s@6 : i32) ;
  Some (var@8) -> s@1 : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> s@7 : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}


- op:
move var@14

[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@13);
  var@18 := copy y;
  var@17 := move var@18 == 0: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@5 : i32 ;
  Some (y) -> âmut@2â ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (s@6 : i32) ;
  Some (var@8) -> s@1 : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> s@8 : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@13)
]

**Context**:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@5 : i32 ;
  Some (y) -> âmut@2â ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (s@6 : i32) ;
  Some (var@8) -> s@1 : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> s@8 : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@5 : i32 ;
  Some (y) -> âmut@2â ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (s@6 : i32) ;
  Some (var@8) -> s@1 : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> true ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}


- op:
move var@13

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@18 := copy y;
  var@17 := move var@18 == 0: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@5 : i32 ;
  Some (y) -> âmut@2â ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (s@6 : i32) ;
  Some (var@8) -> s@1 : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@18 := copy y
]

**Context**:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@5 : i32 ;
  Some (y) -> âmut@2â ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (s@6 : i32) ;
  Some (var@8) -> s@1 : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@5 : i32 ;
  Some (y) -> âmut@2â ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (s@6 : i32) ;
  Some (var@8) -> s@1 : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}


- op:
copy y

[[32mDebug[39m] end borrow: 2:
- original context:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@5 : i32 ;
  Some (y) -> âmut@2â ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> &mut@2 (s@6 : i32) ;
  Some (var@8) -> s@1 : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}

[[32mDebug[39m] give_back:
- bid: 2
- content: &mut@2 (s@6 : i32)
- context:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@5 : i32 ;
  Some (y) -> âmut@2â ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> s@1 : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}


[[32mDebug[39m] give_back_value:
- bid: 2
- value: s@6 : i32
- context:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@5 : i32 ;
  Some (y) -> âmut@2â ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> s@1 : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}


[[32mDebug[39m] 
**About to evaluate statement**: [
  var@17 := move var@18 == 0: i32;
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@5 : i32 ;
  Some (y) -> s@6 : i32 ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> s@1 : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> s@6 : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@17 := move var@18 == 0: i32
]

**Context**:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@5 : i32 ;
  Some (y) -> s@6 : i32 ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> s@1 : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> s@6 : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@5 : i32 ;
  Some (y) -> s@6 : i32 ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> s@1 : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> s@6 : i32 ;
}


- op:
move var@18

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@5 : i32 ;
  Some (y) -> s@6 : i32 ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> s@1 : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}


- op:
0: i32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@16 := Â¬ move var@17;
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@5 : i32 ;
  Some (y) -> s@6 : i32 ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> s@1 : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> s@9 : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@16 := Â¬ move var@17
]

**Context**:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@5 : i32 ;
  Some (y) -> s@6 : i32 ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> s@1 : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> s@9 : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@5 : i32 ;
  Some (y) -> s@6 : i32 ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> s@1 : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> s@9 : bool ;
  Some (var@18) -> â¥ : i32 ;
}


- op:
move var@17

[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@16);
  return
]

**Context**:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@5 : i32 ;
  Some (y) -> s@6 : i32 ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> s@1 : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> s@10 : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@16)
]

**Context**:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@5 : i32 ;
  Some (y) -> s@6 : i32 ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> s@1 : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> s@10 : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@5 : i32 ;
  Some (y) -> s@6 : i32 ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> s@1 : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> true ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}


- op:
move var@16

[[32mDebug[39m] 
**About to evaluate statement**: [
  return
]

**Context**:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@5 : i32 ;
  Some (y) -> s@6 : i32 ;
  Some (z) -> â¥ : &'_ mut (i32) ;
  Some (var@4) -> â¥ : &'_ mut (i32) ;
  Some (var@5) -> â¥ : &'_ mut (i32) ;
  Some (var@6) -> â¥ : &'_ mut (i32) ;
  Some (var@7) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> s@1 : i32 ;
  Some (var@9) -> â¥ : (i32, bool) ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : i32 ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : i32 ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : bool ;
  Some (var@18) -> â¥ : i32 ;
}



[[32mDebug[39m] test_function_symbolic: id_mut_mut
[[32mDebug[39m] 
**About to evaluate statement**: [
  var@2 := &mut *(x);
  var@0 := &mut *(var@2);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  abs@0{parents={}}{regions={0}} {
    proj_loans (s@0 : &r@0 mut (&r@1 mut (T)))
  }
  abs@1{parents={0}}{regions={1}} {
    proj_loans (s@0 : &r@0 mut (&r@1 mut (T)))
  }
  Some (var@0) -> â¥ : &'_ mut (&'_ mut (T)) ;
  Some (x) -> s@0 : &r@0 mut (&r@1 mut (T)) ;
  Some (var@2) -> â¥ : &'_ mut (&'_ mut (T)) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@2 := &mut *(x)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  abs@0{parents={}}{regions={0}} {
    proj_loans (s@0 : &r@0 mut (&r@1 mut (T)))
  }
  abs@1{parents={0}}{regions={1}} {
    proj_loans (s@0 : &r@0 mut (&r@1 mut (T)))
  }
  Some (var@0) -> â¥ : &'_ mut (&'_ mut (T)) ;
  Some (x) -> s@0 : &r@0 mut (&r@1 mut (T)) ;
  Some (var@2) -> â¥ : &'_ mut (&'_ mut (T)) ;
}



[[32mDebug[39m] expand_symbolic_value: s@0 : &r@0 mut (&r@1 mut (T))

- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  abs@0{parents={}}{regions={0}} {
    proj_loans (s@0 : &r@0 mut (&r@1 mut (T)))
  }
  abs@1{parents={0}}{regions={1}} {
    proj_loans (s@0 : &r@0 mut (&r@1 mut (T)))
  }
  Some (var@0) -> â¥ : &'_ mut (&'_ mut (T)) ;
  Some (x) -> s@0 : &r@0 mut (&r@1 mut (T)) ;
  Some (var@2) -> â¥ : &'_ mut (&'_ mut (T)) ;
}


- new context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  abs@0{parents={}}{regions={0}} {
    âmut@0, proj_loans (s@1 : &r@1 mut (T))â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_loan(0, proj_loans (s@1 : &r@1 mut (T)))
  }
  Some (var@0) -> â¥ : &'_ mut (&'_ mut (T)) ;
  Some (x) -> &mut@0 (s@1 : &r@1 mut (T)) ;
  Some (var@2) -> â¥ : &'_ mut (&'_ mut (T)) ;
}


[[32mDebug[39m] 
**About to evaluate statement**: [
  var@0 := &mut *(var@2);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  abs@0{parents={}}{regions={0}} {
    âmut@0, proj_loans (s@1 : &r@1 mut (T))â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_loan(0, proj_loans (s@1 : &r@1 mut (T)))
  }
  Some (var@0) -> â¥ : &'_ mut (&'_ mut (T)) ;
  Some (x) -> &mut@0 (âmut@1â) ;
  Some (var@2) -> &mut@1 (s@1 : &r@1 mut (T)) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@0 := &mut *(var@2)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  abs@0{parents={}}{regions={0}} {
    âmut@0, proj_loans (s@1 : &r@1 mut (T))â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_loan(0, proj_loans (s@1 : &r@1 mut (T)))
  }
  Some (var@0) -> â¥ : &'_ mut (&'_ mut (T)) ;
  Some (x) -> &mut@0 (âmut@1â) ;
  Some (var@2) -> &mut@1 (s@1 : &r@1 mut (T)) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  abs@0{parents={}}{regions={0}} {
    âmut@0, proj_loans (s@1 : &r@1 mut (T))â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_loan(0, proj_loans (s@1 : &r@1 mut (T)))
  }
  Some (var@0) -> &mut@2 (s@1 : &r@1 mut (T)) ;
  Some (x) -> &mut@0 (âmut@1â) ;
  Some (var@2) -> &mut@1 (âmut@2â) ;
}



[[32mDebug[39m] test_function_symbolic: id_mut_pair
[[32mDebug[39m] 
**About to evaluate statement**: [
  var@2 := &mut *(x);
  var@0 := &mut *(var@2);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  abs@0{parents={}}{regions={0}} {
    proj_loans (s@0 : &r@0 mut ((&r@0 mut (T), u32)))
  }
  Some (var@0) -> â¥ : &'_ mut ((&'_ mut (T), u32)) ;
  Some (x) -> s@0 : &r@0 mut ((&r@0 mut (T), u32)) ;
  Some (var@2) -> â¥ : &'_ mut ((&'_ mut (T), u32)) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@2 := &mut *(x)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  abs@0{parents={}}{regions={0}} {
    proj_loans (s@0 : &r@0 mut ((&r@0 mut (T), u32)))
  }
  Some (var@0) -> â¥ : &'_ mut ((&'_ mut (T), u32)) ;
  Some (x) -> s@0 : &r@0 mut ((&r@0 mut (T), u32)) ;
  Some (var@2) -> â¥ : &'_ mut ((&'_ mut (T), u32)) ;
}



[[32mDebug[39m] expand_symbolic_value: s@0 : &r@0 mut ((&r@0 mut (T), u32))

- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  abs@0{parents={}}{regions={0}} {
    proj_loans (s@0 : &r@0 mut ((&r@0 mut (T), u32)))
  }
  Some (var@0) -> â¥ : &'_ mut ((&'_ mut (T), u32)) ;
  Some (x) -> s@0 : &r@0 mut ((&r@0 mut (T), u32)) ;
  Some (var@2) -> â¥ : &'_ mut ((&'_ mut (T), u32)) ;
}


- new context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  abs@0{parents={}}{regions={0}} {
    âmut@0, proj_loans (s@1 : (&r@0 mut (T), u32))â
  }
  Some (var@0) -> â¥ : &'_ mut ((&'_ mut (T), u32)) ;
  Some (x) -> &mut@0 (s@1 : (&r@0 mut (T), u32)) ;
  Some (var@2) -> â¥ : &'_ mut ((&'_ mut (T), u32)) ;
}


[[32mDebug[39m] 
**About to evaluate statement**: [
  var@0 := &mut *(var@2);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  abs@0{parents={}}{regions={0}} {
    âmut@0, proj_loans (s@1 : (&r@0 mut (T), u32))â
  }
  Some (var@0) -> â¥ : &'_ mut ((&'_ mut (T), u32)) ;
  Some (x) -> &mut@0 (âmut@1â) ;
  Some (var@2) -> &mut@1 (s@1 : (&r@0 mut (T), u32)) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@0 := &mut *(var@2)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  abs@0{parents={}}{regions={0}} {
    âmut@0, proj_loans (s@1 : (&r@0 mut (T), u32))â
  }
  Some (var@0) -> â¥ : &'_ mut ((&'_ mut (T), u32)) ;
  Some (x) -> &mut@0 (âmut@1â) ;
  Some (var@2) -> &mut@1 (s@1 : (&r@0 mut (T), u32)) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  abs@0{parents={}}{regions={0}} {
    âmut@0, proj_loans (s@1 : (&r@0 mut (T), u32))â
  }
  Some (var@0) -> &mut@2 (s@1 : (&r@0 mut (T), u32)) ;
  Some (x) -> &mut@0 (âmut@1â) ;
  Some (var@2) -> &mut@1 (âmut@2â) ;
}



[[32mDebug[39m] test_function_symbolic: id_mut_pair_test1
[[32mDebug[39m] 
**About to evaluate statement**: [
  x := 0: u32;
  px := &mut x;
  var@4 := move px;
  (p).0 := move var@4;
  (p).1 := 1: u32;
  pp0 := &mut p;
  var@7 := &two-phase *(pp0);
  pp1 := move id_mut_pair<u32>(move var@7);
  y := 2: u32;
  var@10 := &mut y;
  var@9 := &mut *(var@10);
  *((pp1).0) := move var@9;
  *((pp1).1) := 3: u32;
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> â¥ : (&'_ mut (u32), u32) ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (pp1) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> â¥ : u32 ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> â¥ : &'_ mut (u32) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  x := 0: u32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> â¥ : (&'_ mut (u32), u32) ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (pp1) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> â¥ : u32 ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> â¥ : &'_ mut (u32) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> â¥ : (&'_ mut (u32), u32) ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (pp1) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> â¥ : u32 ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> â¥ : &'_ mut (u32) ;
}


- op:
0: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  px := &mut x;
  var@4 := move px;
  (p).0 := move var@4;
  (p).1 := 1: u32;
  pp0 := &mut p;
  var@7 := &two-phase *(pp0);
  pp1 := move id_mut_pair<u32>(move var@7);
  y := 2: u32;
  var@10 := &mut y;
  var@9 := &mut *(var@10);
  *((pp1).0) := move var@9;
  *((pp1).1) := 3: u32;
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: u32 ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> â¥ : (&'_ mut (u32), u32) ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (pp1) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> â¥ : u32 ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> â¥ : &'_ mut (u32) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  px := &mut x
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: u32 ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> â¥ : (&'_ mut (u32), u32) ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (pp1) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> â¥ : u32 ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> â¥ : &'_ mut (u32) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := move px;
  (p).0 := move var@4;
  (p).1 := 1: u32;
  pp0 := &mut p;
  var@7 := &two-phase *(pp0);
  pp1 := move id_mut_pair<u32>(move var@7);
  y := 2: u32;
  var@10 := &mut y;
  var@9 := &mut *(var@10);
  *((pp1).0) := move var@9;
  *((pp1).1) := 3: u32;
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@0 (0: u32) ;
  Some (p) -> â¥ : (&'_ mut (u32), u32) ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (pp1) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> â¥ : u32 ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> â¥ : &'_ mut (u32) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := move px
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@0 (0: u32) ;
  Some (p) -> â¥ : (&'_ mut (u32), u32) ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (pp1) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> â¥ : u32 ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> â¥ : &'_ mut (u32) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@0 (0: u32) ;
  Some (p) -> â¥ : (&'_ mut (u32), u32) ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (pp1) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> â¥ : u32 ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> â¥ : &'_ mut (u32) ;
}


- op:
move px

[[32mDebug[39m] 
**About to evaluate statement**: [
  (p).0 := move var@4;
  (p).1 := 1: u32;
  pp0 := &mut p;
  var@7 := &two-phase *(pp0);
  pp1 := move id_mut_pair<u32>(move var@7);
  y := 2: u32;
  var@10 := &mut y;
  var@9 := &mut *(var@10);
  *((pp1).0) := move var@9;
  *((pp1).1) := 3: u32;
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> â¥ : (&'_ mut (u32), u32) ;
  Some (var@4) -> &mut@0 (0: u32) ;
  Some (pp0) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (pp1) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> â¥ : u32 ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> â¥ : &'_ mut (u32) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  (p).0 := move var@4
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> â¥ : (&'_ mut (u32), u32) ;
  Some (var@4) -> &mut@0 (0: u32) ;
  Some (pp0) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (pp1) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> â¥ : u32 ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> â¥ : &'_ mut (u32) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> â¥ : (&'_ mut (u32), u32) ;
  Some (var@4) -> &mut@0 (0: u32) ;
  Some (pp0) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (pp1) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> â¥ : u32 ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> â¥ : &'_ mut (u32) ;
}


- op:
move var@4

[[32mDebug[39m] expand_bottom_value_from_projection:
pe: (Expressions.Field ((Expressions.ProjTuple 2), 0))
ty: (Types.Adt (Types.Tuple, [],
   [(Types.Ref (Types.Erased, (Types.Integer Types.U32), Types.Mut));
     (Types.Integer Types.U32)]
   ))
[[32mDebug[39m] 
**About to evaluate statement**: [
  (p).1 := 1: u32;
  pp0 := &mut p;
  var@7 := &two-phase *(pp0);
  pp1 := move id_mut_pair<u32>(move var@7);
  y := 2: u32;
  var@10 := &mut y;
  var@9 := &mut *(var@10);
  *((pp1).0) := move var@9;
  *((pp1).1) := 3: u32;
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> (&mut@0 (0: u32), â¥ : u32) ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (pp1) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> â¥ : u32 ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> â¥ : &'_ mut (u32) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  (p).1 := 1: u32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> (&mut@0 (0: u32), â¥ : u32) ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (pp1) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> â¥ : u32 ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> â¥ : &'_ mut (u32) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> (&mut@0 (0: u32), â¥ : u32) ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (pp1) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> â¥ : u32 ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> â¥ : &'_ mut (u32) ;
}


- op:
1: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  pp0 := &mut p;
  var@7 := &two-phase *(pp0);
  pp1 := move id_mut_pair<u32>(move var@7);
  y := 2: u32;
  var@10 := &mut y;
  var@9 := &mut *(var@10);
  *((pp1).0) := move var@9;
  *((pp1).1) := 3: u32;
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> (&mut@0 (0: u32), 1: u32) ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (pp1) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> â¥ : u32 ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> â¥ : &'_ mut (u32) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  pp0 := &mut p
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> (&mut@0 (0: u32), 1: u32) ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (pp1) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> â¥ : u32 ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> â¥ : &'_ mut (u32) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := &two-phase *(pp0);
  pp1 := move id_mut_pair<u32>(move var@7);
  y := 2: u32;
  var@10 := &mut y;
  var@9 := &mut *(var@10);
  *((pp1).0) := move var@9;
  *((pp1).1) := 3: u32;
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> âmut@1â ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> &mut@1 ((&mut@0 (0: u32), 1: u32)) ;
  Some (pp1) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> â¥ : u32 ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> â¥ : &'_ mut (u32) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := &two-phase *(pp0)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> âmut@1â ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> &mut@1 ((&mut@0 (0: u32), 1: u32)) ;
  Some (pp1) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> â¥ : u32 ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> â¥ : &'_ mut (u32) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  pp1 := move id_mut_pair<u32>(move var@7);
  y := 2: u32;
  var@10 := &mut y;
  var@9 := &mut *(var@10);
  *((pp1).0) := move var@9;
  *((pp1).1) := 3: u32;
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> âmut@1â ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> &mut@1 (@shared_loan({2}, (&mut@0 (0: u32), 1: u32))) ;
  Some (pp1) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (var@7) -> âinactivated_mut@2â ;
  Some (y) -> â¥ : u32 ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> â¥ : &'_ mut (u32) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  pp1 := move id_mut_pair<u32>(move var@7)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> âmut@1â ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> &mut@1 (@shared_loan({2}, (&mut@0 (0: u32), 1: u32))) ;
  Some (pp1) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (var@7) -> âinactivated_mut@2â ;
  Some (y) -> â¥ : u32 ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> â¥ : &'_ mut (u32) ;
}



[[32mDebug[39m] activate_inactivated_mut_borrow: resulting value:
(&mut@0 (0: u32), 1: u32)
[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> âmut@1â ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> &mut@1 (âmut@2â) ;
  Some (pp1) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (var@7) -> &mut@2 ((&mut@0 (0: u32), 1: u32)) ;
  Some (y) -> â¥ : u32 ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> â¥ : &'_ mut (u32) ;
}


- op:
move var@7

[[32mDebug[39m] 
**About to evaluate statement**: [
  y := 2: u32;
  var@10 := &mut y;
  var@9 := &mut *(var@10);
  *((pp1).0) := move var@9;
  *((pp1).1) := 3: u32;
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> âmut@1â ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> &mut@1 (âmut@2â) ;
  Some (pp1) -> s@0 : &r@0 mut ((&r@0 mut (u32), u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> â¥ : u32 ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> â¥ : &'_ mut (u32) ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 ((&mut@0 (0: u32), 1: u32)),
    proj_loans (s@0 : &r@0 mut ((&r@0 mut (u32), u32)))
  }
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  y := 2: u32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> âmut@1â ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> &mut@1 (âmut@2â) ;
  Some (pp1) -> s@0 : &r@0 mut ((&r@0 mut (u32), u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> â¥ : u32 ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> â¥ : &'_ mut (u32) ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 ((&mut@0 (0: u32), 1: u32)),
    proj_loans (s@0 : &r@0 mut ((&r@0 mut (u32), u32)))
  }
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> âmut@1â ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> &mut@1 (âmut@2â) ;
  Some (pp1) -> s@0 : &r@0 mut ((&r@0 mut (u32), u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> â¥ : u32 ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> â¥ : &'_ mut (u32) ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 ((&mut@0 (0: u32), 1: u32)),
    proj_loans (s@0 : &r@0 mut ((&r@0 mut (u32), u32)))
  }
}


- op:
2: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@10 := &mut y;
  var@9 := &mut *(var@10);
  *((pp1).0) := move var@9;
  *((pp1).1) := 3: u32;
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> âmut@1â ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> &mut@1 (âmut@2â) ;
  Some (pp1) -> s@0 : &r@0 mut ((&r@0 mut (u32), u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> 2: u32 ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> â¥ : &'_ mut (u32) ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 ((&mut@0 (0: u32), 1: u32)),
    proj_loans (s@0 : &r@0 mut ((&r@0 mut (u32), u32)))
  }
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@10 := &mut y
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> âmut@1â ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> &mut@1 (âmut@2â) ;
  Some (pp1) -> s@0 : &r@0 mut ((&r@0 mut (u32), u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> 2: u32 ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> â¥ : &'_ mut (u32) ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 ((&mut@0 (0: u32), 1: u32)),
    proj_loans (s@0 : &r@0 mut ((&r@0 mut (u32), u32)))
  }
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@9 := &mut *(var@10);
  *((pp1).0) := move var@9;
  *((pp1).1) := 3: u32;
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> âmut@1â ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> &mut@1 (âmut@2â) ;
  Some (pp1) -> s@0 : &r@0 mut ((&r@0 mut (u32), u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> âmut@3â ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> &mut@3 (2: u32) ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 ((&mut@0 (0: u32), 1: u32)),
    proj_loans (s@0 : &r@0 mut ((&r@0 mut (u32), u32)))
  }
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@9 := &mut *(var@10)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> âmut@1â ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> &mut@1 (âmut@2â) ;
  Some (pp1) -> s@0 : &r@0 mut ((&r@0 mut (u32), u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> âmut@3â ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> &mut@3 (2: u32) ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 ((&mut@0 (0: u32), 1: u32)),
    proj_loans (s@0 : &r@0 mut ((&r@0 mut (u32), u32)))
  }
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  *((pp1).0) := move var@9;
  *((pp1).1) := 3: u32;
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> âmut@1â ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> &mut@1 (âmut@2â) ;
  Some (pp1) -> s@0 : &r@0 mut ((&r@0 mut (u32), u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> âmut@3â ;
  Some (var@9) -> &mut@4 (2: u32) ;
  Some (var@10) -> &mut@3 (âmut@4â) ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 ((&mut@0 (0: u32), 1: u32)),
    proj_loans (s@0 : &r@0 mut ((&r@0 mut (u32), u32)))
  }
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  *((pp1).0) := move var@9
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> âmut@1â ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> &mut@1 (âmut@2â) ;
  Some (pp1) -> s@0 : &r@0 mut ((&r@0 mut (u32), u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> âmut@3â ;
  Some (var@9) -> &mut@4 (2: u32) ;
  Some (var@10) -> &mut@3 (âmut@4â) ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 ((&mut@0 (0: u32), 1: u32)),
    proj_loans (s@0 : &r@0 mut ((&r@0 mut (u32), u32)))
  }
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> âmut@1â ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> &mut@1 (âmut@2â) ;
  Some (pp1) -> s@0 : &r@0 mut ((&r@0 mut (u32), u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> âmut@3â ;
  Some (var@9) -> &mut@4 (2: u32) ;
  Some (var@10) -> &mut@3 (âmut@4â) ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 ((&mut@0 (0: u32), 1: u32)),
    proj_loans (s@0 : &r@0 mut ((&r@0 mut (u32), u32)))
  }
}


- op:
move var@9

[[32mDebug[39m] expand_symbolic_value: s@0 : &r@0 mut ((&r@0 mut (u32), u32))

- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> âmut@1â ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> &mut@1 (âmut@2â) ;
  Some (pp1) -> s@0 : &r@0 mut ((&r@0 mut (u32), u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> âmut@3â ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> &mut@3 (âmut@4â) ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 ((&mut@0 (0: u32), 1: u32)),
    proj_loans (s@0 : &r@0 mut ((&r@0 mut (u32), u32)))
  }
  None -> &mut@4 (2: u32) ;
}


- new context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> âmut@1â ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> &mut@1 (âmut@2â) ;
  Some (pp1) -> &mut@5 (s@1 : (&r@0 mut (u32), u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> âmut@3â ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> &mut@3 (âmut@4â) ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 ((&mut@0 (0: u32), 1: u32)),
    âmut@5, proj_loans (s@1 : (&r@0 mut (u32), u32))â
  }
  None -> &mut@4 (2: u32) ;
}


[[32mDebug[39m] expand_symbolic_value: s@1 : (&r@0 mut (u32), u32)

- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> âmut@1â ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> &mut@1 (âmut@2â) ;
  Some (pp1) -> &mut@5 (s@1 : (&r@0 mut (u32), u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> âmut@3â ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> &mut@3 (âmut@4â) ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 ((&mut@0 (0: u32), 1: u32)),
    âmut@5, proj_loans (s@1 : (&r@0 mut (u32), u32))â
  }
  None -> &mut@4 (2: u32) ;
}


- new context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> âmut@1â ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> &mut@1 (âmut@2â) ;
  Some (pp1) -> &mut@5 ((s@2 : &r@0 mut (u32), s@3 : u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> âmut@3â ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> &mut@3 (âmut@4â) ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 ((&mut@0 (0: u32), 1: u32)),
    âmut@5, (proj_loans (s@2 : &r@0 mut (u32)), proj_loans (s@3 : u32))â
  }
  None -> &mut@4 (2: u32) ;
}


[[32mDebug[39m] 
**About to evaluate statement**: [
  *((pp1).1) := 3: u32;
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> âmut@1â ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> &mut@1 (âmut@2â) ;
  Some (pp1) -> &mut@5 ((&mut@4 (2: u32), s@3 : u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> âmut@3â ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> &mut@3 (âmut@4â) ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 ((&mut@0 (0: u32), 1: u32)),
    âmut@5, (proj_loans (s@2 : &r@0 mut (u32)), proj_loans (s@3 : u32))â
  }
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  *((pp1).1) := 3: u32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> âmut@1â ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> &mut@1 (âmut@2â) ;
  Some (pp1) -> &mut@5 ((&mut@4 (2: u32), s@3 : u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> âmut@3â ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> &mut@3 (âmut@4â) ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 ((&mut@0 (0: u32), 1: u32)),
    âmut@5, (proj_loans (s@2 : &r@0 mut (u32)), proj_loans (s@3 : u32))â
  }
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> âmut@1â ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> &mut@1 (âmut@2â) ;
  Some (pp1) -> &mut@5 ((&mut@4 (2: u32), s@3 : u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> âmut@3â ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> &mut@3 (âmut@4â) ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 ((&mut@0 (0: u32), 1: u32)),
    âmut@5, (proj_loans (s@2 : &r@0 mut (u32)), proj_loans (s@3 : u32))â
  }
}


- op:
3: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (u32) ;
  Some (p) -> âmut@1â ;
  Some (var@4) -> â¥ : &'_ mut (u32) ;
  Some (pp0) -> &mut@1 (âmut@2â) ;
  Some (pp1) -> &mut@5 ((&mut@4 (2: u32), 3: u32)) ;
  Some (var@7) -> â¥ : &'_ mut ((&'_ mut (u32), u32)) ;
  Some (y) -> âmut@3â ;
  Some (var@9) -> â¥ : &'_ mut (u32) ;
  Some (var@10) -> &mut@3 (âmut@4â) ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 ((&mut@0 (0: u32), 1: u32)),
    âmut@5, (proj_loans (s@2 : &r@0 mut (u32)), proj_loans (s@3 : u32))â
  }
}



[[32mDebug[39m] test_function_symbolic: id_mut_mut_pair
[[32mDebug[39m] 
**About to evaluate statement**: [
  var@2 := &mut *(x);
  var@0 := &mut *(var@2);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  abs@0{parents={}}{regions={0}} {
    proj_loans (s@0 : &r@0 mut (&r@0 mut ((&r@0 mut (T), u32))))
  }
  Some (var@0) -> â¥ : &'_ mut (&'_ mut ((&'_ mut (T), u32))) ;
  Some (x) -> s@0 : &r@0 mut (&r@0 mut ((&r@0 mut (T), u32))) ;
  Some (var@2) -> â¥ : &'_ mut (&'_ mut ((&'_ mut (T), u32))) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@2 := &mut *(x)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  abs@0{parents={}}{regions={0}} {
    proj_loans (s@0 : &r@0 mut (&r@0 mut ((&r@0 mut (T), u32))))
  }
  Some (var@0) -> â¥ : &'_ mut (&'_ mut ((&'_ mut (T), u32))) ;
  Some (x) -> s@0 : &r@0 mut (&r@0 mut ((&r@0 mut (T), u32))) ;
  Some (var@2) -> â¥ : &'_ mut (&'_ mut ((&'_ mut (T), u32))) ;
}



[[32mDebug[39m] expand_symbolic_value: s@0 : &r@0 mut (&r@0 mut ((&r@0 mut (T), u32)))

- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  abs@0{parents={}}{regions={0}} {
    proj_loans (s@0 : &r@0 mut (&r@0 mut ((&r@0 mut (T), u32))))
  }
  Some (var@0) -> â¥ : &'_ mut (&'_ mut ((&'_ mut (T), u32))) ;
  Some (x) -> s@0 : &r@0 mut (&r@0 mut ((&r@0 mut (T), u32))) ;
  Some (var@2) -> â¥ : &'_ mut (&'_ mut ((&'_ mut (T), u32))) ;
}


- new context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  abs@0{parents={}}{regions={0}} {
    âmut@0, proj_loans (s@1 : &r@0 mut ((&r@0 mut (T), u32)))â
  }
  Some (var@0) -> â¥ : &'_ mut (&'_ mut ((&'_ mut (T), u32))) ;
  Some (x) -> &mut@0 (s@1 : &r@0 mut ((&r@0 mut (T), u32))) ;
  Some (var@2) -> â¥ : &'_ mut (&'_ mut ((&'_ mut (T), u32))) ;
}


[[32mDebug[39m] 
**About to evaluate statement**: [
  var@0 := &mut *(var@2);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  abs@0{parents={}}{regions={0}} {
    âmut@0, proj_loans (s@1 : &r@0 mut ((&r@0 mut (T), u32)))â
  }
  Some (var@0) -> â¥ : &'_ mut (&'_ mut ((&'_ mut (T), u32))) ;
  Some (x) -> &mut@0 (âmut@1â) ;
  Some (var@2) -> &mut@1 (s@1 : &r@0 mut ((&r@0 mut (T), u32))) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@0 := &mut *(var@2)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  abs@0{parents={}}{regions={0}} {
    âmut@0, proj_loans (s@1 : &r@0 mut ((&r@0 mut (T), u32)))â
  }
  Some (var@0) -> â¥ : &'_ mut (&'_ mut ((&'_ mut (T), u32))) ;
  Some (x) -> &mut@0 (âmut@1â) ;
  Some (var@2) -> &mut@1 (s@1 : &r@0 mut ((&r@0 mut (T), u32))) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  abs@0{parents={}}{regions={0}} {
    âmut@0, proj_loans (s@1 : &r@0 mut ((&r@0 mut (T), u32)))â
  }
  Some (var@0) -> &mut@2 (s@1 : &r@0 mut ((&r@0 mut (T), u32))) ;
  Some (x) -> &mut@0 (âmut@1â) ;
  Some (var@2) -> &mut@1 (âmut@2â) ;
}



[[32mDebug[39m] test_function_symbolic: id_mut_mut_mut_same
[[32mDebug[39m] 
**About to evaluate statement**: [
  var@2 := &mut *(x);
  var@0 := &mut *(var@2);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  abs@0{parents={}}{regions={0}} {
    proj_loans (s@0 : &r@0 mut (&r@0 mut (&r@0 mut (u32))))
  }
  Some (var@0) -> â¥ : &'_ mut (&'_ mut (&'_ mut (u32))) ;
  Some (x) -> s@0 : &r@0 mut (&r@0 mut (&r@0 mut (u32))) ;
  Some (var@2) -> â¥ : &'_ mut (&'_ mut (&'_ mut (u32))) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@2 := &mut *(x)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  abs@0{parents={}}{regions={0}} {
    proj_loans (s@0 : &r@0 mut (&r@0 mut (&r@0 mut (u32))))
  }
  Some (var@0) -> â¥ : &'_ mut (&'_ mut (&'_ mut (u32))) ;
  Some (x) -> s@0 : &r@0 mut (&r@0 mut (&r@0 mut (u32))) ;
  Some (var@2) -> â¥ : &'_ mut (&'_ mut (&'_ mut (u32))) ;
}



[[32mDebug[39m] expand_symbolic_value: s@0 : &r@0 mut (&r@0 mut (&r@0 mut (u32)))

- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  abs@0{parents={}}{regions={0}} {
    proj_loans (s@0 : &r@0 mut (&r@0 mut (&r@0 mut (u32))))
  }
  Some (var@0) -> â¥ : &'_ mut (&'_ mut (&'_ mut (u32))) ;
  Some (x) -> s@0 : &r@0 mut (&r@0 mut (&r@0 mut (u32))) ;
  Some (var@2) -> â¥ : &'_ mut (&'_ mut (&'_ mut (u32))) ;
}


- new context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  abs@0{parents={}}{regions={0}} {
    âmut@0, proj_loans (s@1 : &r@0 mut (&r@0 mut (u32)))â
  }
  Some (var@0) -> â¥ : &'_ mut (&'_ mut (&'_ mut (u32))) ;
  Some (x) -> &mut@0 (s@1 : &r@0 mut (&r@0 mut (u32))) ;
  Some (var@2) -> â¥ : &'_ mut (&'_ mut (&'_ mut (u32))) ;
}


[[32mDebug[39m] 
**About to evaluate statement**: [
  var@0 := &mut *(var@2);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  abs@0{parents={}}{regions={0}} {
    âmut@0, proj_loans (s@1 : &r@0 mut (&r@0 mut (u32)))â
  }
  Some (var@0) -> â¥ : &'_ mut (&'_ mut (&'_ mut (u32))) ;
  Some (x) -> &mut@0 (âmut@1â) ;
  Some (var@2) -> &mut@1 (s@1 : &r@0 mut (&r@0 mut (u32))) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@0 := &mut *(var@2)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  abs@0{parents={}}{regions={0}} {
    âmut@0, proj_loans (s@1 : &r@0 mut (&r@0 mut (u32)))â
  }
  Some (var@0) -> â¥ : &'_ mut (&'_ mut (&'_ mut (u32))) ;
  Some (x) -> &mut@0 (âmut@1â) ;
  Some (var@2) -> &mut@1 (s@1 : &r@0 mut (&r@0 mut (u32))) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  abs@0{parents={}}{regions={0}} {
    âmut@0, proj_loans (s@1 : &r@0 mut (&r@0 mut (u32)))â
  }
  Some (var@0) -> &mut@2 (s@1 : &r@0 mut (&r@0 mut (u32))) ;
  Some (x) -> &mut@0 (âmut@1â) ;
  Some (var@2) -> &mut@1 (âmut@2â) ;
}



[[32mDebug[39m] test_function_symbolic: id_borrow1
[[32mDebug[39m] 
**About to evaluate statement**: [
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  abs@0{parents={}}{regions={0}} {
    proj_loans (s@0 : &r@0 mut (&r@1 (u32))),
    proj_loans (s@1 : &r@0 (&r@0 mut (u32)))
  }
  abs@1{parents={0}}{regions={1}} {
    proj_loans (s@0 : &r@0 mut (&r@1 (u32))),
    proj_loans (s@1 : &r@0 (&r@0 mut (u32)))
  }
  Some (var@0) -> â¥ : () ;
  Some (_x) -> s@0 : &r@0 mut (&r@1 (u32)) ;
  Some (_y) -> s@1 : &r@0 (&r@0 mut (u32)) ;
}



[[32mDebug[39m] test_function_symbolic: test_static
[[32mDebug[39m] 
**About to evaluate statement**: [
  var@0 := copy x;
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : &'_ (u32) ;
  Some (x) -> s@0 : &'static (u32) ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@0 := copy x
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : &'_ (u32) ;
  Some (x) -> s@0 : &'static (u32) ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : &'_ (u32) ;
  Some (x) -> s@0 : &'static (u32) ;
}


- op:
copy x

[[32mDebug[39m] 
**About to evaluate statement**: [
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> s@0 : &'static (u32) ;
  Some (x) -> s@0 : &'static (u32) ;
}



[[32mDebug[39m] test_function_symbolic: test_char
[[32mDebug[39m] 
**About to evaluate statement**: [
  var@0 := a;
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : char ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@0 := a
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : char ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : char ;
}


- op:
a

[[32mDebug[39m] 
**About to evaluate statement**: [
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> a ;
}



[[32mDebug[39m] test_function_symbolic: test_loops
[[32mDebug[39m] 
**About to evaluate statement**: [
  x := move test_loop1(2: u32);
  var@4 := copy x;
  var@3 := move var@4 == 2: u32;
  var@2 := Â¬ move var@3;
  assert(Â¬move var@2);
  x := move test_loop2(2: u32);
  var@8 := copy x;
  var@7 := move var@8 == 1: u32;
  var@6 := Â¬ move var@7;
  assert(Â¬move var@6);
  x := move test_loop3(2: u32);
  var@12 := copy x;
  var@11 := move var@12 == 3: u32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  x := move test_loop4(20: u32);
  var@16 := copy x;
  var@15 := move var@16 == 1: u32;
  var@14 := Â¬ move var@15;
  assert(Â¬move var@14);
  x := move test_loop5(2: u32);
  var@20 := copy x;
  var@19 := move var@20 == 2: u32;
  var@18 := Â¬ move var@19;
  assert(Â¬move var@18);
  x := move test_loop6(2: u32);
  var@24 := copy x;
  var@23 := move var@24 == 2: u32;
  var@22 := Â¬ move var@23;
  assert(Â¬move var@22);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  x := move test_loop1(2: u32)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}


- op:
2: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := copy x;
  var@3 := move var@4 == 2: u32;
  var@2 := Â¬ move var@3;
  assert(Â¬move var@2);
  x := move test_loop2(2: u32);
  var@8 := copy x;
  var@7 := move var@8 == 1: u32;
  var@6 := Â¬ move var@7;
  assert(Â¬move var@6);
  x := move test_loop3(2: u32);
  var@12 := copy x;
  var@11 := move var@12 == 3: u32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  x := move test_loop4(20: u32);
  var@16 := copy x;
  var@15 := move var@16 == 1: u32;
  var@14 := Â¬ move var@15;
  assert(Â¬move var@14);
  x := move test_loop5(2: u32);
  var@20 := copy x;
  var@19 := move var@20 == 2: u32;
  var@18 := Â¬ move var@19;
  assert(Â¬move var@18);
  x := move test_loop6(2: u32);
  var@24 := copy x;
  var@23 := move var@24 == 2: u32;
  var@22 := Â¬ move var@23;
  assert(Â¬move var@22);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@4 := copy x
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}


- op:
copy x

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@3 := move var@4 == 2: u32;
  var@2 := Â¬ move var@3;
  assert(Â¬move var@2);
  x := move test_loop2(2: u32);
  var@8 := copy x;
  var@7 := move var@8 == 1: u32;
  var@6 := Â¬ move var@7;
  assert(Â¬move var@6);
  x := move test_loop3(2: u32);
  var@12 := copy x;
  var@11 := move var@12 == 3: u32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  x := move test_loop4(20: u32);
  var@16 := copy x;
  var@15 := move var@16 == 1: u32;
  var@14 := Â¬ move var@15;
  assert(Â¬move var@14);
  x := move test_loop5(2: u32);
  var@20 := copy x;
  var@19 := move var@20 == 2: u32;
  var@18 := Â¬ move var@19;
  assert(Â¬move var@18);
  x := move test_loop6(2: u32);
  var@24 := copy x;
  var@23 := move var@24 == 2: u32;
  var@22 := Â¬ move var@23;
  assert(Â¬move var@22);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> s@0 : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@3 := move var@4 == 2: u32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> s@0 : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> s@0 : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}


- op:
move var@4

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}


- op:
2: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@2 := Â¬ move var@3;
  assert(Â¬move var@2);
  x := move test_loop2(2: u32);
  var@8 := copy x;
  var@7 := move var@8 == 1: u32;
  var@6 := Â¬ move var@7;
  assert(Â¬move var@6);
  x := move test_loop3(2: u32);
  var@12 := copy x;
  var@11 := move var@12 == 3: u32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  x := move test_loop4(20: u32);
  var@16 := copy x;
  var@15 := move var@16 == 1: u32;
  var@14 := Â¬ move var@15;
  assert(Â¬move var@14);
  x := move test_loop5(2: u32);
  var@20 := copy x;
  var@19 := move var@20 == 2: u32;
  var@18 := Â¬ move var@19;
  assert(Â¬move var@18);
  x := move test_loop6(2: u32);
  var@24 := copy x;
  var@23 := move var@24 == 2: u32;
  var@22 := Â¬ move var@23;
  assert(Â¬move var@22);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> s@1 : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@2 := Â¬ move var@3
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> s@1 : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> s@1 : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}


- op:
move var@3

[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@2);
  x := move test_loop2(2: u32);
  var@8 := copy x;
  var@7 := move var@8 == 1: u32;
  var@6 := Â¬ move var@7;
  assert(Â¬move var@6);
  x := move test_loop3(2: u32);
  var@12 := copy x;
  var@11 := move var@12 == 3: u32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  x := move test_loop4(20: u32);
  var@16 := copy x;
  var@15 := move var@16 == 1: u32;
  var@14 := Â¬ move var@15;
  assert(Â¬move var@14);
  x := move test_loop5(2: u32);
  var@20 := copy x;
  var@19 := move var@20 == 2: u32;
  var@18 := Â¬ move var@19;
  assert(Â¬move var@18);
  x := move test_loop6(2: u32);
  var@24 := copy x;
  var@23 := move var@24 == 2: u32;
  var@22 := Â¬ move var@23;
  assert(Â¬move var@22);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> s@2 : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@2)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> s@2 : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> true ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}


- op:
move var@2

[[32mDebug[39m] 
**About to evaluate statement**: [
  x := move test_loop2(2: u32);
  var@8 := copy x;
  var@7 := move var@8 == 1: u32;
  var@6 := Â¬ move var@7;
  assert(Â¬move var@6);
  x := move test_loop3(2: u32);
  var@12 := copy x;
  var@11 := move var@12 == 3: u32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  x := move test_loop4(20: u32);
  var@16 := copy x;
  var@15 := move var@16 == 1: u32;
  var@14 := Â¬ move var@15;
  assert(Â¬move var@14);
  x := move test_loop5(2: u32);
  var@20 := copy x;
  var@19 := move var@20 == 2: u32;
  var@18 := Â¬ move var@19;
  assert(Â¬move var@18);
  x := move test_loop6(2: u32);
  var@24 := copy x;
  var@23 := move var@24 == 2: u32;
  var@22 := Â¬ move var@23;
  assert(Â¬move var@22);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  x := move test_loop2(2: u32)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}


- op:
2: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := copy x;
  var@7 := move var@8 == 1: u32;
  var@6 := Â¬ move var@7;
  assert(Â¬move var@6);
  x := move test_loop3(2: u32);
  var@12 := copy x;
  var@11 := move var@12 == 3: u32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  x := move test_loop4(20: u32);
  var@16 := copy x;
  var@15 := move var@16 == 1: u32;
  var@14 := Â¬ move var@15;
  assert(Â¬move var@14);
  x := move test_loop5(2: u32);
  var@20 := copy x;
  var@19 := move var@20 == 2: u32;
  var@18 := Â¬ move var@19;
  assert(Â¬move var@18);
  x := move test_loop6(2: u32);
  var@24 := copy x;
  var@23 := move var@24 == 2: u32;
  var@22 := Â¬ move var@23;
  assert(Â¬move var@22);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := copy x
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}


- op:
copy x

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := move var@8 == 1: u32;
  var@6 := Â¬ move var@7;
  assert(Â¬move var@6);
  x := move test_loop3(2: u32);
  var@12 := copy x;
  var@11 := move var@12 == 3: u32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  x := move test_loop4(20: u32);
  var@16 := copy x;
  var@15 := move var@16 == 1: u32;
  var@14 := Â¬ move var@15;
  assert(Â¬move var@14);
  x := move test_loop5(2: u32);
  var@20 := copy x;
  var@19 := move var@20 == 2: u32;
  var@18 := Â¬ move var@19;
  assert(Â¬move var@18);
  x := move test_loop6(2: u32);
  var@24 := copy x;
  var@23 := move var@24 == 2: u32;
  var@22 := Â¬ move var@23;
  assert(Â¬move var@22);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> s@3 : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := move var@8 == 1: u32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> s@3 : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> s@3 : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}


- op:
move var@8

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}


- op:
1: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@6 := Â¬ move var@7;
  assert(Â¬move var@6);
  x := move test_loop3(2: u32);
  var@12 := copy x;
  var@11 := move var@12 == 3: u32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  x := move test_loop4(20: u32);
  var@16 := copy x;
  var@15 := move var@16 == 1: u32;
  var@14 := Â¬ move var@15;
  assert(Â¬move var@14);
  x := move test_loop5(2: u32);
  var@20 := copy x;
  var@19 := move var@20 == 2: u32;
  var@18 := Â¬ move var@19;
  assert(Â¬move var@18);
  x := move test_loop6(2: u32);
  var@24 := copy x;
  var@23 := move var@24 == 2: u32;
  var@22 := Â¬ move var@23;
  assert(Â¬move var@22);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> s@4 : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@6 := Â¬ move var@7
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> s@4 : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> s@4 : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}


- op:
move var@7

[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@6);
  x := move test_loop3(2: u32);
  var@12 := copy x;
  var@11 := move var@12 == 3: u32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  x := move test_loop4(20: u32);
  var@16 := copy x;
  var@15 := move var@16 == 1: u32;
  var@14 := Â¬ move var@15;
  assert(Â¬move var@14);
  x := move test_loop5(2: u32);
  var@20 := copy x;
  var@19 := move var@20 == 2: u32;
  var@18 := Â¬ move var@19;
  assert(Â¬move var@18);
  x := move test_loop6(2: u32);
  var@24 := copy x;
  var@23 := move var@24 == 2: u32;
  var@22 := Â¬ move var@23;
  assert(Â¬move var@22);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> s@5 : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@6)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> s@5 : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> true ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}


- op:
move var@6

[[32mDebug[39m] 
**About to evaluate statement**: [
  x := move test_loop3(2: u32);
  var@12 := copy x;
  var@11 := move var@12 == 3: u32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  x := move test_loop4(20: u32);
  var@16 := copy x;
  var@15 := move var@16 == 1: u32;
  var@14 := Â¬ move var@15;
  assert(Â¬move var@14);
  x := move test_loop5(2: u32);
  var@20 := copy x;
  var@19 := move var@20 == 2: u32;
  var@18 := Â¬ move var@19;
  assert(Â¬move var@18);
  x := move test_loop6(2: u32);
  var@24 := copy x;
  var@23 := move var@24 == 2: u32;
  var@22 := Â¬ move var@23;
  assert(Â¬move var@22);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  x := move test_loop3(2: u32)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}


- op:
2: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@12 := copy x;
  var@11 := move var@12 == 3: u32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  x := move test_loop4(20: u32);
  var@16 := copy x;
  var@15 := move var@16 == 1: u32;
  var@14 := Â¬ move var@15;
  assert(Â¬move var@14);
  x := move test_loop5(2: u32);
  var@20 := copy x;
  var@19 := move var@20 == 2: u32;
  var@18 := Â¬ move var@19;
  assert(Â¬move var@18);
  x := move test_loop6(2: u32);
  var@24 := copy x;
  var@23 := move var@24 == 2: u32;
  var@22 := Â¬ move var@23;
  assert(Â¬move var@22);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> s@6 : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@12 := copy x
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> s@6 : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> s@6 : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}


- op:
copy x

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@11 := move var@12 == 3: u32;
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  x := move test_loop4(20: u32);
  var@16 := copy x;
  var@15 := move var@16 == 1: u32;
  var@14 := Â¬ move var@15;
  assert(Â¬move var@14);
  x := move test_loop5(2: u32);
  var@20 := copy x;
  var@19 := move var@20 == 2: u32;
  var@18 := Â¬ move var@19;
  assert(Â¬move var@18);
  x := move test_loop6(2: u32);
  var@24 := copy x;
  var@23 := move var@24 == 2: u32;
  var@22 := Â¬ move var@23;
  assert(Â¬move var@22);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> s@6 : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> s@6 : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@11 := move var@12 == 3: u32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> s@6 : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> s@6 : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> s@6 : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> s@6 : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}


- op:
move var@12

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> s@6 : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}


- op:
3: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@10 := Â¬ move var@11;
  assert(Â¬move var@10);
  x := move test_loop4(20: u32);
  var@16 := copy x;
  var@15 := move var@16 == 1: u32;
  var@14 := Â¬ move var@15;
  assert(Â¬move var@14);
  x := move test_loop5(2: u32);
  var@20 := copy x;
  var@19 := move var@20 == 2: u32;
  var@18 := Â¬ move var@19;
  assert(Â¬move var@18);
  x := move test_loop6(2: u32);
  var@24 := copy x;
  var@23 := move var@24 == 2: u32;
  var@22 := Â¬ move var@23;
  assert(Â¬move var@22);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> s@6 : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> s@7 : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@10 := Â¬ move var@11
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> s@6 : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> s@7 : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> s@6 : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> s@7 : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}


- op:
move var@11

[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@10);
  x := move test_loop4(20: u32);
  var@16 := copy x;
  var@15 := move var@16 == 1: u32;
  var@14 := Â¬ move var@15;
  assert(Â¬move var@14);
  x := move test_loop5(2: u32);
  var@20 := copy x;
  var@19 := move var@20 == 2: u32;
  var@18 := Â¬ move var@19;
  assert(Â¬move var@18);
  x := move test_loop6(2: u32);
  var@24 := copy x;
  var@23 := move var@24 == 2: u32;
  var@22 := Â¬ move var@23;
  assert(Â¬move var@22);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> s@6 : u32 ;
  Some (var@10) -> s@8 : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@10)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> s@6 : u32 ;
  Some (var@10) -> s@8 : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> s@6 : u32 ;
  Some (var@10) -> true ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}


- op:
move var@10

[[32mDebug[39m] 
**About to evaluate statement**: [
  x := move test_loop4(20: u32);
  var@16 := copy x;
  var@15 := move var@16 == 1: u32;
  var@14 := Â¬ move var@15;
  assert(Â¬move var@14);
  x := move test_loop5(2: u32);
  var@20 := copy x;
  var@19 := move var@20 == 2: u32;
  var@18 := Â¬ move var@19;
  assert(Â¬move var@18);
  x := move test_loop6(2: u32);
  var@24 := copy x;
  var@23 := move var@24 == 2: u32;
  var@22 := Â¬ move var@23;
  assert(Â¬move var@22);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> s@6 : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  x := move test_loop4(20: u32)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> s@6 : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> s@6 : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}


- op:
20: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@16 := copy x;
  var@15 := move var@16 == 1: u32;
  var@14 := Â¬ move var@15;
  assert(Â¬move var@14);
  x := move test_loop5(2: u32);
  var@20 := copy x;
  var@19 := move var@20 == 2: u32;
  var@18 := Â¬ move var@19;
  assert(Â¬move var@18);
  x := move test_loop6(2: u32);
  var@24 := copy x;
  var@23 := move var@24 == 2: u32;
  var@22 := Â¬ move var@23;
  assert(Â¬move var@22);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> s@6 : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> s@9 : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@16 := copy x
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> s@6 : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> s@9 : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> s@6 : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> s@9 : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}


- op:
copy x

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@15 := move var@16 == 1: u32;
  var@14 := Â¬ move var@15;
  assert(Â¬move var@14);
  x := move test_loop5(2: u32);
  var@20 := copy x;
  var@19 := move var@20 == 2: u32;
  var@18 := Â¬ move var@19;
  assert(Â¬move var@18);
  x := move test_loop6(2: u32);
  var@24 := copy x;
  var@23 := move var@24 == 2: u32;
  var@22 := Â¬ move var@23;
  assert(Â¬move var@22);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> s@6 : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> s@9 : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> s@9 : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@15 := move var@16 == 1: u32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> s@6 : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> s@9 : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> s@9 : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> s@6 : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> s@9 : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> s@9 : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}


- op:
move var@16

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> s@6 : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> s@9 : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}


- op:
1: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@14 := Â¬ move var@15;
  assert(Â¬move var@14);
  x := move test_loop5(2: u32);
  var@20 := copy x;
  var@19 := move var@20 == 2: u32;
  var@18 := Â¬ move var@19;
  assert(Â¬move var@18);
  x := move test_loop6(2: u32);
  var@24 := copy x;
  var@23 := move var@24 == 2: u32;
  var@22 := Â¬ move var@23;
  assert(Â¬move var@22);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> s@6 : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> s@9 : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> s@10 : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@14 := Â¬ move var@15
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> s@6 : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> s@9 : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> s@10 : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> s@6 : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> s@9 : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> s@10 : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}


- op:
move var@15

[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@14);
  x := move test_loop5(2: u32);
  var@20 := copy x;
  var@19 := move var@20 == 2: u32;
  var@18 := Â¬ move var@19;
  assert(Â¬move var@18);
  x := move test_loop6(2: u32);
  var@24 := copy x;
  var@23 := move var@24 == 2: u32;
  var@22 := Â¬ move var@23;
  assert(Â¬move var@22);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> s@6 : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> s@9 : u32 ;
  Some (var@14) -> s@11 : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@14)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> s@6 : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> s@9 : u32 ;
  Some (var@14) -> s@11 : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> s@6 : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> s@9 : u32 ;
  Some (var@14) -> true ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}


- op:
move var@14

[[32mDebug[39m] 
**About to evaluate statement**: [
  x := move test_loop5(2: u32);
  var@20 := copy x;
  var@19 := move var@20 == 2: u32;
  var@18 := Â¬ move var@19;
  assert(Â¬move var@18);
  x := move test_loop6(2: u32);
  var@24 := copy x;
  var@23 := move var@24 == 2: u32;
  var@22 := Â¬ move var@23;
  assert(Â¬move var@22);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> s@6 : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> s@9 : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  x := move test_loop5(2: u32)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> s@6 : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> s@9 : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> s@6 : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> s@9 : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}


- op:
2: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@20 := copy x;
  var@19 := move var@20 == 2: u32;
  var@18 := Â¬ move var@19;
  assert(Â¬move var@18);
  x := move test_loop6(2: u32);
  var@24 := copy x;
  var@23 := move var@24 == 2: u32;
  var@22 := Â¬ move var@23;
  assert(Â¬move var@22);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> s@6 : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> s@9 : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> s@12 : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@20 := copy x
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> s@6 : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> s@9 : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> s@12 : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> s@6 : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> s@9 : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> s@12 : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}


- op:
copy x

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@19 := move var@20 == 2: u32;
  var@18 := Â¬ move var@19;
  assert(Â¬move var@18);
  x := move test_loop6(2: u32);
  var@24 := copy x;
  var@23 := move var@24 == 2: u32;
  var@22 := Â¬ move var@23;
  assert(Â¬move var@22);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> s@6 : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> s@9 : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> s@12 : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> s@12 : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@19 := move var@20 == 2: u32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> s@6 : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> s@9 : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> s@12 : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> s@12 : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> s@6 : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> s@9 : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> s@12 : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> s@12 : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}


- op:
move var@20

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> s@6 : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> s@9 : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> s@12 : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}


- op:
2: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@18 := Â¬ move var@19;
  assert(Â¬move var@18);
  x := move test_loop6(2: u32);
  var@24 := copy x;
  var@23 := move var@24 == 2: u32;
  var@22 := Â¬ move var@23;
  assert(Â¬move var@22);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> s@6 : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> s@9 : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> s@12 : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> s@13 : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@18 := Â¬ move var@19
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> s@6 : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> s@9 : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> s@12 : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> s@13 : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> s@6 : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> s@9 : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> s@12 : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> s@13 : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}


- op:
move var@19

[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@18);
  x := move test_loop6(2: u32);
  var@24 := copy x;
  var@23 := move var@24 == 2: u32;
  var@22 := Â¬ move var@23;
  assert(Â¬move var@22);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> s@6 : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> s@9 : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> s@12 : u32 ;
  Some (var@18) -> s@14 : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@18)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> s@6 : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> s@9 : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> s@12 : u32 ;
  Some (var@18) -> s@14 : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> s@6 : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> s@9 : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> s@12 : u32 ;
  Some (var@18) -> true ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}


- op:
move var@18

[[32mDebug[39m] 
**About to evaluate statement**: [
  x := move test_loop6(2: u32);
  var@24 := copy x;
  var@23 := move var@24 == 2: u32;
  var@22 := Â¬ move var@23;
  assert(Â¬move var@22);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> s@6 : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> s@9 : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> s@12 : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  x := move test_loop6(2: u32)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> s@6 : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> s@9 : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> s@12 : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> s@6 : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> s@9 : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> s@12 : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> â¥ : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}


- op:
2: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@24 := copy x;
  var@23 := move var@24 == 2: u32;
  var@22 := Â¬ move var@23;
  assert(Â¬move var@22);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> s@6 : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> s@9 : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> s@12 : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> s@15 : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@24 := copy x
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> s@6 : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> s@9 : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> s@12 : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> s@15 : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> s@6 : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> s@9 : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> s@12 : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> s@15 : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}


- op:
copy x

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@23 := move var@24 == 2: u32;
  var@22 := Â¬ move var@23;
  assert(Â¬move var@22);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> s@6 : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> s@9 : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> s@12 : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> s@15 : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> s@15 : u32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@23 := move var@24 == 2: u32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> s@6 : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> s@9 : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> s@12 : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> s@15 : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> s@15 : u32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> s@6 : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> s@9 : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> s@12 : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> s@15 : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> s@15 : u32 ;
}


- op:
move var@24

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> s@6 : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> s@9 : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> s@12 : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> s@15 : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}


- op:
2: u32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@22 := Â¬ move var@23;
  assert(Â¬move var@22);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> s@6 : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> s@9 : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> s@12 : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> s@15 : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> s@16 : bool ;
  Some (var@24) -> â¥ : u32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@22 := Â¬ move var@23
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> s@6 : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> s@9 : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> s@12 : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> s@15 : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> s@16 : bool ;
  Some (var@24) -> â¥ : u32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> s@6 : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> s@9 : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> s@12 : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> s@15 : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> s@16 : bool ;
  Some (var@24) -> â¥ : u32 ;
}


- op:
move var@23

[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@22);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> s@6 : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> s@9 : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> s@12 : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> s@15 : u32 ;
  Some (var@22) -> s@17 : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@22)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> s@6 : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> s@9 : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> s@12 : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> s@15 : u32 ;
  Some (var@22) -> s@17 : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> s@6 : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> s@9 : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> s@12 : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> s@15 : u32 ;
  Some (var@22) -> true ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}


- op:
move var@22

[[32mDebug[39m] 
**About to evaluate statement**: [
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@0 : u32 ;
  Some (var@2) -> â¥ : bool ;
  Some (var@3) -> â¥ : bool ;
  Some (var@4) -> â¥ : u32 ;
  Some (x) -> s@3 : u32 ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : u32 ;
  Some (x) -> s@6 : u32 ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : u32 ;
  Some (x) -> s@9 : u32 ;
  Some (var@14) -> â¥ : bool ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : u32 ;
  Some (x) -> s@12 : u32 ;
  Some (var@18) -> â¥ : bool ;
  Some (var@19) -> â¥ : bool ;
  Some (var@20) -> â¥ : u32 ;
  Some (x) -> s@15 : u32 ;
  Some (var@22) -> â¥ : bool ;
  Some (var@23) -> â¥ : bool ;
  Some (var@24) -> â¥ : u32 ;
}



[[32mDebug[39m] test_function_symbolic: id_mut_mut_test1
[[32mDebug[39m] 
**About to evaluate statement**: [
  x := 0: i32;
  px := &mut x;
  ppx := &mut px;
  var@5 := &two-phase *(ppx);
  ppy := move id_mut_mut<i32>(move var@5);
  *(*(ppy)) := 1: i32;
  var@8 := copy *(px);
  var@7 := move var@8 == 1: i32;
  var@6 := Â¬ move var@7;
  assert(Â¬move var@6);
  var@11 := copy x;
  var@10 := move var@11 == 1: i32;
  var@9 := Â¬ move var@10;
  assert(Â¬move var@9);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  x := 0: i32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
}


- op:
0: i32

[[32mDebug[39m] 
**About to evaluate statement**: [
  px := &mut x;
  ppx := &mut px;
  var@5 := &two-phase *(ppx);
  ppy := move id_mut_mut<i32>(move var@5);
  *(*(ppy)) := 1: i32;
  var@8 := copy *(px);
  var@7 := move var@8 == 1: i32;
  var@6 := Â¬ move var@7;
  assert(Â¬move var@6);
  var@11 := copy x;
  var@10 := move var@11 == 1: i32;
  var@9 := Â¬ move var@10;
  assert(Â¬move var@9);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  px := &mut x
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  ppx := &mut px;
  var@5 := &two-phase *(ppx);
  ppy := move id_mut_mut<i32>(move var@5);
  *(*(ppy)) := 1: i32;
  var@8 := copy *(px);
  var@7 := move var@8 == 1: i32;
  var@6 := Â¬ move var@7;
  assert(Â¬move var@6);
  var@11 := copy x;
  var@10 := move var@11 == 1: i32;
  var@9 := Â¬ move var@10;
  assert(Â¬move var@9);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@0 (0: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  ppx := &mut px
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@0 (0: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := &two-phase *(ppx);
  ppy := move id_mut_mut<i32>(move var@5);
  *(*(ppy)) := 1: i32;
  var@8 := copy *(px);
  var@7 := move var@8 == 1: i32;
  var@6 := Â¬ move var@7;
  assert(Â¬move var@6);
  var@11 := copy x;
  var@10 := move var@11 == 1: i32;
  var@9 := Â¬ move var@10;
  assert(Â¬move var@9);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (&mut@0 (0: i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := &two-phase *(ppx)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (&mut@0 (0: i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  ppy := move id_mut_mut<i32>(move var@5);
  *(*(ppy)) := 1: i32;
  var@8 := copy *(px);
  var@7 := move var@8 == 1: i32;
  var@6 := Â¬ move var@7;
  assert(Â¬move var@6);
  var@11 := copy x;
  var@10 := move var@11 == 1: i32;
  var@9 := Â¬ move var@10;
  assert(Â¬move var@9);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (@shared_loan({2}, &mut@0 (0: i32))) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> âinactivated_mut@2â ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  ppy := move id_mut_mut<i32>(move var@5)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (@shared_loan({2}, &mut@0 (0: i32))) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> âinactivated_mut@2â ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
}



[[32mDebug[39m] activate_inactivated_mut_borrow: resulting value:
&mut@0 (0: i32)
[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> &mut@2 (&mut@0 (0: i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
}


- op:
move var@5

[[32mDebug[39m] 
**About to evaluate statement**: [
  *(*(ppy)) := 1: i32;
  var@8 := copy *(px);
  var@7 := move var@8 == 1: i32;
  var@6 := Â¬ move var@7;
  assert(Â¬move var@6);
  var@11 := copy x;
  var@10 := move var@11 == 1: i32;
  var@9 := Â¬ move var@10;
  assert(Â¬move var@9);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> s@0 : &r@0 mut (&r@1 mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    proj_loans (s@0 : &r@0 mut (&r@1 mut (i32)))
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    proj_loans (s@0 : &r@0 mut (&r@1 mut (i32)))
  }
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  *(*(ppy)) := 1: i32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> s@0 : &r@0 mut (&r@1 mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    proj_loans (s@0 : &r@0 mut (&r@1 mut (i32)))
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    proj_loans (s@0 : &r@0 mut (&r@1 mut (i32)))
  }
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> s@0 : &r@0 mut (&r@1 mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    proj_loans (s@0 : &r@0 mut (&r@1 mut (i32)))
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    proj_loans (s@0 : &r@0 mut (&r@1 mut (i32)))
  }
}


- op:
1: i32

[[32mDebug[39m] expand_symbolic_value: s@0 : &r@0 mut (&r@1 mut (i32))

- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> s@0 : &r@0 mut (&r@1 mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    proj_loans (s@0 : &r@0 mut (&r@1 mut (i32)))
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    proj_loans (s@0 : &r@0 mut (&r@1 mut (i32)))
  }
  None -> 1: i32 ;
}


- new context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@3 (s@1 : &r@1 mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, proj_loans (s@1 : &r@1 mut (i32))â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, proj_loans (s@1 : &r@1 mut (i32)))
  }
  None -> 1: i32 ;
}


[[32mDebug[39m] expand_symbolic_value: s@1 : &r@1 mut (i32)

- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@3 (s@1 : &r@1 mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, proj_loans (s@1 : &r@1 mut (i32))â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, proj_loans (s@1 : &r@1 mut (i32)))
  }
  None -> 1: i32 ;
}


- new context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@3 (&mut@4 (s@2 : i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, @ignored_mut_loan(4, proj_loans (s@2 : i32))â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, âmut@4, proj_loans (s@2 : i32)â)
  }
  None -> 1: i32 ;
}


[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := copy *(px);
  var@7 := move var@8 == 1: i32;
  var@6 := Â¬ move var@7;
  assert(Â¬move var@6);
  var@11 := copy x;
  var@10 := move var@11 == 1: i32;
  var@9 := Â¬ move var@10;
  assert(Â¬move var@9);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@3 (&mut@4 (1: i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, @ignored_mut_loan(4, proj_loans (s@2 : i32))â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, âmut@4, proj_loans (s@2 : i32)â)
  }
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := copy *(px)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@3 (&mut@4 (1: i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, @ignored_mut_loan(4, proj_loans (s@2 : i32))â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, âmut@4, proj_loans (s@2 : i32)â)
  }
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@3 (&mut@4 (1: i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, @ignored_mut_loan(4, proj_loans (s@2 : i32))â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, âmut@4, proj_loans (s@2 : i32)â)
  }
}


- op:
copy *(px)

[[32mDebug[39m] end borrow: 1:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@3 (&mut@4 (1: i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, @ignored_mut_loan(4, proj_loans (s@2 : i32))â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, âmut@4, proj_loans (s@2 : i32)â)
  }
}

[[32mDebug[39m] end borrow: 1: found outer borrows/abs:(InterpreterBorrowsCore.InnerLoans (InterpreterBorrowsCore.Borrow 2))
[[32mDebug[39m] end borrow: 2:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@3 (&mut@4 (1: i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, @ignored_mut_loan(4, proj_loans (s@2 : i32))â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, âmut@4, proj_loans (s@2 : i32)â)
  }
}

[[32mDebug[39m] end borrow: 2: found outer borrows/abs:(InterpreterBorrowsCore.OuterAbs 0)
[[32mDebug[39m] end_abstraction: 0
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@3 (&mut@4 (1: i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, @ignored_mut_loan(4, proj_loans (s@2 : i32))â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, âmut@4, proj_loans (s@2 : i32)â)
  }
}

[[32mDebug[39m] end_abstraction: 0
- context after parent abstractions ended:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@3 (&mut@4 (1: i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, @ignored_mut_loan(4, proj_loans (s@2 : i32))â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, âmut@4, proj_loans (s@2 : i32)â)
  }
}

[[32mDebug[39m] end borrow: 3:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@3 (&mut@4 (1: i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, @ignored_mut_loan(4, proj_loans (s@2 : i32))â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, âmut@4, proj_loans (s@2 : i32)â)
  }
}

[[32mDebug[39m] give_back:
- bid: 3
- content: &mut@3 (&mut@4 (1: i32))
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, @ignored_mut_loan(4, proj_loans (s@2 : i32))â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, âmut@4, proj_loans (s@2 : i32)â)
  }
}


[[32mDebug[39m] give_back_value:
- bid: 3
- value: &mut@4 (1: i32)
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, @ignored_mut_loan(4, proj_loans (s@2 : i32))â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, âmut@4, proj_loans (s@2 : i32)â)
  }
}


[[32mDebug[39m] end_abstraction: 0
- context after loans ended:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    @ended_mut_loan{ given_back=@ignored_mut_borrow(None, 1: i32); child=@ignored_mut_loan(4, proj_loans (s@2 : i32)) }
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@4 (1: i32); child: âmut@4, proj_loans (s@2 : i32)â}
  }
}

[[32mDebug[39m] give_back_value:
- bid: 2
- value: s@3 : &r@1 mut (i32)
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    â¥ : &r@0 mut (&r@1 mut (i32)),
    @ended_mut_loan{ given_back=@ignored_mut_borrow(None, 1: i32); child=@ignored_mut_loan(4, proj_loans (s@2 : i32)) }
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@4 (1: i32); child: âmut@4, proj_loans (s@2 : i32)â}
  }
}


[[32mDebug[39m] end_abstraction: 0
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@3 (&mut@4 (1: i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, @ignored_mut_loan(4, proj_loans (s@2 : i32))â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, âmut@4, proj_loans (s@2 : i32)â)
  }
}


- new context:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (s@3 : &r@1 mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=proj_loans (s@3 : &r@1 mut (i32)); child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@4 (1: i32); child: âmut@4, proj_loans (s@2 : i32)â}
  }
}

[[32mDebug[39m] end borrow: 1:
- original context:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (s@3 : &r@1 mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=proj_loans (s@3 : &r@1 mut (i32)); child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@4 (1: i32); child: âmut@4, proj_loans (s@2 : i32)â}
  }
}

[[32mDebug[39m] give_back:
- bid: 1
- content: &mut@1 (s@3 : &r@1 mut (i32))
- context:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=proj_loans (s@3 : &r@1 mut (i32)); child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@4 (1: i32); child: âmut@4, proj_loans (s@2 : i32)â}
  }
}


[[32mDebug[39m] give_back_value:
- bid: 1
- value: s@3 : &r@1 mut (i32)
- context:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=proj_loans (s@3 : &r@1 mut (i32)); child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@4 (1: i32); child: âmut@4, proj_loans (s@2 : i32)â}
  }
}


[[32mDebug[39m] expand_symbolic_value: s@3 : &r@1 mut (i32)

- original context:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> s@3 : &r@1 mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=proj_loans (s@3 : &r@1 mut (i32)); child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@4 (1: i32); child: âmut@4, proj_loans (s@2 : i32)â}
  }
}


- new context:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@5 (s@4 : i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=âmut@5, proj_loans (s@4 : i32)â; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@4 (1: i32); child: âmut@4, proj_loans (s@2 : i32)â}
  }
}


[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := move var@8 == 1: i32;
  var@6 := Â¬ move var@7;
  assert(Â¬move var@6);
  var@11 := copy x;
  var@10 := move var@11 == 1: i32;
  var@9 := Â¬ move var@10;
  assert(Â¬move var@9);
  return
]

**Context**:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@5 (s@4 : i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> s@4 : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=âmut@5, proj_loans (s@4 : i32)â; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@4 (1: i32); child: âmut@4, proj_loans (s@2 : i32)â}
  }
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := move var@8 == 1: i32
]

**Context**:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@5 (s@4 : i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> s@4 : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=âmut@5, proj_loans (s@4 : i32)â; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@4 (1: i32); child: âmut@4, proj_loans (s@2 : i32)â}
  }
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@5 (s@4 : i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> s@4 : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=âmut@5, proj_loans (s@4 : i32)â; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@4 (1: i32); child: âmut@4, proj_loans (s@2 : i32)â}
  }
}


- op:
move var@8

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@5 (s@4 : i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=âmut@5, proj_loans (s@4 : i32)â; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@4 (1: i32); child: âmut@4, proj_loans (s@2 : i32)â}
  }
}


- op:
1: i32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@6 := Â¬ move var@7;
  assert(Â¬move var@6);
  var@11 := copy x;
  var@10 := move var@11 == 1: i32;
  var@9 := Â¬ move var@10;
  assert(Â¬move var@9);
  return
]

**Context**:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@5 (s@4 : i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> s@5 : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=âmut@5, proj_loans (s@4 : i32)â; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@4 (1: i32); child: âmut@4, proj_loans (s@2 : i32)â}
  }
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@6 := Â¬ move var@7
]

**Context**:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@5 (s@4 : i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> s@5 : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=âmut@5, proj_loans (s@4 : i32)â; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@4 (1: i32); child: âmut@4, proj_loans (s@2 : i32)â}
  }
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@5 (s@4 : i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> s@5 : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=âmut@5, proj_loans (s@4 : i32)â; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@4 (1: i32); child: âmut@4, proj_loans (s@2 : i32)â}
  }
}


- op:
move var@7

[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@6);
  var@11 := copy x;
  var@10 := move var@11 == 1: i32;
  var@9 := Â¬ move var@10;
  assert(Â¬move var@9);
  return
]

**Context**:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@5 (s@4 : i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> s@6 : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=âmut@5, proj_loans (s@4 : i32)â; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@4 (1: i32); child: âmut@4, proj_loans (s@2 : i32)â}
  }
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@6)
]

**Context**:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@5 (s@4 : i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> s@6 : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=âmut@5, proj_loans (s@4 : i32)â; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@4 (1: i32); child: âmut@4, proj_loans (s@2 : i32)â}
  }
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@5 (s@4 : i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> true ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=âmut@5, proj_loans (s@4 : i32)â; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@4 (1: i32); child: âmut@4, proj_loans (s@2 : i32)â}
  }
}


- op:
move var@6

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@11 := copy x;
  var@10 := move var@11 == 1: i32;
  var@9 := Â¬ move var@10;
  assert(Â¬move var@9);
  return
]

**Context**:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@5 (s@4 : i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=âmut@5, proj_loans (s@4 : i32)â; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@4 (1: i32); child: âmut@4, proj_loans (s@2 : i32)â}
  }
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@11 := copy x
]

**Context**:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@5 (s@4 : i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=âmut@5, proj_loans (s@4 : i32)â; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@4 (1: i32); child: âmut@4, proj_loans (s@2 : i32)â}
  }
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@5 (s@4 : i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=âmut@5, proj_loans (s@4 : i32)â; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@4 (1: i32); child: âmut@4, proj_loans (s@2 : i32)â}
  }
}


- op:
copy x

[[32mDebug[39m] end borrow: 0:
- original context:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@5 (s@4 : i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=âmut@5, proj_loans (s@4 : i32)â; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@4 (1: i32); child: âmut@4, proj_loans (s@2 : i32)â}
  }
}

[[32mDebug[39m] end borrow: 0: found outer borrows/abs:(InterpreterBorrowsCore.OuterAbs 1)
[[32mDebug[39m] end_abstraction: 1
- original context:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@5 (s@4 : i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=âmut@5, proj_loans (s@4 : i32)â; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@4 (1: i32); child: âmut@4, proj_loans (s@2 : i32)â}
  }
}

[[32mDebug[39m] end_abstraction: 1
- context after parent abstractions ended:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@5 (s@4 : i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=âmut@5, proj_loans (s@4 : i32)â; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@4 (1: i32); child: âmut@4, proj_loans (s@2 : i32)â}
  }
}

[[32mDebug[39m] end borrow: 5:
- original context:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@5 (s@4 : i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=âmut@5, proj_loans (s@4 : i32)â; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@4 (1: i32); child: âmut@4, proj_loans (s@2 : i32)â}
  }
}

[[32mDebug[39m] give_back:
- bid: 5
- content: &mut@5 (s@4 : i32)
- context:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=âmut@5, proj_loans (s@4 : i32)â; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@4 (1: i32); child: âmut@4, proj_loans (s@2 : i32)â}
  }
}


[[32mDebug[39m] give_back_value:
- bid: 5
- value: s@4 : i32
- context:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=âmut@5, proj_loans (s@4 : i32)â; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@4 (1: i32); child: âmut@4, proj_loans (s@2 : i32)â}
  }
}


[[32mDebug[39m] end borrow: 4:
- original context:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=@ended_mut_loan{ given_back=proj_borrows (s@4 : i32 <: i32); child=proj_loans (s@4 : i32) }; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@4 (1: i32); child: âmut@4, proj_loans (s@2 : i32)â}
  }
}

[[32mDebug[39m] end borrow: 4: found outer borrows/abs:(InterpreterBorrowsCore.OuterAbs 1)
[[32mDebug[39m] end borrow: 4:
- original context:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=@ended_mut_loan{ given_back=proj_borrows (s@4 : i32 <: i32); child=proj_loans (s@4 : i32) }; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@4 (1: i32); child: âmut@4, proj_loans (s@2 : i32)â}
  }
}

[[32mDebug[39m] give_back:
- bid: 4
- content: &mut@4 (1: i32)
- context:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=@ended_mut_loan{ given_back=proj_borrows (s@4 : i32 <: i32); child=proj_loans (s@4 : i32) }; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=â¥ : &r@1 mut (i32); child: âmut@4, proj_loans (s@2 : i32)â}
  }
}


[[32mDebug[39m] end_abstraction: 1
- context after loans ended:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=@ended_mut_loan{ given_back=proj_borrows (s@4 : i32 <: i32); child=proj_loans (s@4 : i32) }; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=â¥ : &r@1 mut (i32); child: @ended_mut_loan{ given_back=1: i32; child=proj_loans (s@2 : i32) }}
  }
}

[[32mDebug[39m] give_back_value:
- bid: 0
- value: s@7 : i32
- context:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=@ended_mut_loan{ given_back=proj_borrows (s@4 : i32 <: i32); child=proj_loans (s@4 : i32) }; child=â¥ : &r@1 mut (i32)),
    @ended_ignored_mut_loan{ given_back=â¥ : &r@1 mut (i32); child: @ended_mut_loan{ given_back=1: i32; child=proj_loans (s@2 : i32) }}
  }
}


[[32mDebug[39m] end_abstraction: 1
- original context:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@5 (s@4 : i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=âmut@5, proj_loans (s@4 : i32)â; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@4 (1: i32); child: âmut@4, proj_loans (s@2 : i32)â}
  }
}


- new context:
# Ended regions: {0, 1}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@7 : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
}

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@10 := move var@11 == 1: i32;
  var@9 := Â¬ move var@10;
  assert(Â¬move var@9);
  return
]

**Context**:
# Ended regions: {0, 1}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@7 : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> s@7 : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@10 := move var@11 == 1: i32
]

**Context**:
# Ended regions: {0, 1}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@7 : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> s@7 : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {0, 1}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@7 : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> s@7 : i32 ;
}


- op:
move var@11

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {0, 1}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@7 : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
}


- op:
1: i32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@9 := Â¬ move var@10;
  assert(Â¬move var@9);
  return
]

**Context**:
# Ended regions: {0, 1}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@7 : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> s@8 : bool ;
  Some (var@11) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@9 := Â¬ move var@10
]

**Context**:
# Ended regions: {0, 1}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@7 : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> s@8 : bool ;
  Some (var@11) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {0, 1}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@7 : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> s@8 : bool ;
  Some (var@11) -> â¥ : i32 ;
}


- op:
move var@10

[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@9);
  return
]

**Context**:
# Ended regions: {0, 1}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@7 : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> s@9 : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@9)
]

**Context**:
# Ended regions: {0, 1}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@7 : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> s@9 : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {0, 1}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@7 : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> true ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
}


- op:
move var@9

[[32mDebug[39m] 
**About to evaluate statement**: [
  return
]

**Context**:
# Ended regions: {0, 1}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@7 : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@6) -> â¥ : bool ;
  Some (var@7) -> â¥ : bool ;
  Some (var@8) -> â¥ : i32 ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
}



[[32mDebug[39m] test_function_symbolic: id_mut_mut_test2
[[32mDebug[39m] 
**About to evaluate statement**: [
  x := 0: i32;
  px := &mut x;
  ppx := &mut px;
  var@5 := &two-phase *(ppx);
  ppy := move id_mut_mut<i32>(move var@5);
  *(*(ppy)) := 1: i32;
  y := 2: i32;
  py := &mut y;
  var@8 := &mut *(py);
  *(ppy) := move var@8;
  var@11 := copy *(px);
  var@10 := move var@11 == 2: i32;
  var@9 := Â¬ move var@10;
  assert(Â¬move var@9);
  *(px) := 3: i32;
  var@14 := copy x;
  var@13 := move var@14 == 1: i32;
  var@12 := Â¬ move var@13;
  assert(Â¬move var@12);
  var@17 := copy y;
  var@16 := move var@17 == 3: i32;
  var@15 := Â¬ move var@16;
  assert(Â¬move var@15);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> â¥ : i32 ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  x := 0: i32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> â¥ : i32 ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> â¥ : i32 ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
}


- op:
0: i32

[[32mDebug[39m] 
**About to evaluate statement**: [
  px := &mut x;
  ppx := &mut px;
  var@5 := &two-phase *(ppx);
  ppy := move id_mut_mut<i32>(move var@5);
  *(*(ppy)) := 1: i32;
  y := 2: i32;
  py := &mut y;
  var@8 := &mut *(py);
  *(ppy) := move var@8;
  var@11 := copy *(px);
  var@10 := move var@11 == 2: i32;
  var@9 := Â¬ move var@10;
  assert(Â¬move var@9);
  *(px) := 3: i32;
  var@14 := copy x;
  var@13 := move var@14 == 1: i32;
  var@12 := Â¬ move var@13;
  assert(Â¬move var@12);
  var@17 := copy y;
  var@16 := move var@17 == 3: i32;
  var@15 := Â¬ move var@16;
  assert(Â¬move var@15);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> â¥ : i32 ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  px := &mut x
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> â¥ : i32 ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  ppx := &mut px;
  var@5 := &two-phase *(ppx);
  ppy := move id_mut_mut<i32>(move var@5);
  *(*(ppy)) := 1: i32;
  y := 2: i32;
  py := &mut y;
  var@8 := &mut *(py);
  *(ppy) := move var@8;
  var@11 := copy *(px);
  var@10 := move var@11 == 2: i32;
  var@9 := Â¬ move var@10;
  assert(Â¬move var@9);
  *(px) := 3: i32;
  var@14 := copy x;
  var@13 := move var@14 == 1: i32;
  var@12 := Â¬ move var@13;
  assert(Â¬move var@12);
  var@17 := copy y;
  var@16 := move var@17 == 3: i32;
  var@15 := Â¬ move var@16;
  assert(Â¬move var@15);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@0 (0: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> â¥ : i32 ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  ppx := &mut px
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@0 (0: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> â¥ : i32 ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := &two-phase *(ppx);
  ppy := move id_mut_mut<i32>(move var@5);
  *(*(ppy)) := 1: i32;
  y := 2: i32;
  py := &mut y;
  var@8 := &mut *(py);
  *(ppy) := move var@8;
  var@11 := copy *(px);
  var@10 := move var@11 == 2: i32;
  var@9 := Â¬ move var@10;
  assert(Â¬move var@9);
  *(px) := 3: i32;
  var@14 := copy x;
  var@13 := move var@14 == 1: i32;
  var@12 := Â¬ move var@13;
  assert(Â¬move var@12);
  var@17 := copy y;
  var@16 := move var@17 == 3: i32;
  var@15 := Â¬ move var@16;
  assert(Â¬move var@15);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (&mut@0 (0: i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> â¥ : i32 ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := &two-phase *(ppx)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (&mut@0 (0: i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> â¥ : i32 ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  ppy := move id_mut_mut<i32>(move var@5);
  *(*(ppy)) := 1: i32;
  y := 2: i32;
  py := &mut y;
  var@8 := &mut *(py);
  *(ppy) := move var@8;
  var@11 := copy *(px);
  var@10 := move var@11 == 2: i32;
  var@9 := Â¬ move var@10;
  assert(Â¬move var@9);
  *(px) := 3: i32;
  var@14 := copy x;
  var@13 := move var@14 == 1: i32;
  var@12 := Â¬ move var@13;
  assert(Â¬move var@12);
  var@17 := copy y;
  var@16 := move var@17 == 3: i32;
  var@15 := Â¬ move var@16;
  assert(Â¬move var@15);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (@shared_loan({2}, &mut@0 (0: i32))) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> âinactivated_mut@2â ;
  Some (y) -> â¥ : i32 ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  ppy := move id_mut_mut<i32>(move var@5)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (@shared_loan({2}, &mut@0 (0: i32))) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> âinactivated_mut@2â ;
  Some (y) -> â¥ : i32 ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
}



[[32mDebug[39m] activate_inactivated_mut_borrow: resulting value:
&mut@0 (0: i32)
[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> &mut@2 (&mut@0 (0: i32)) ;
  Some (y) -> â¥ : i32 ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
}


- op:
move var@5

[[32mDebug[39m] 
**About to evaluate statement**: [
  *(*(ppy)) := 1: i32;
  y := 2: i32;
  py := &mut y;
  var@8 := &mut *(py);
  *(ppy) := move var@8;
  var@11 := copy *(px);
  var@10 := move var@11 == 2: i32;
  var@9 := Â¬ move var@10;
  assert(Â¬move var@9);
  *(px) := 3: i32;
  var@14 := copy x;
  var@13 := move var@14 == 1: i32;
  var@12 := Â¬ move var@13;
  assert(Â¬move var@12);
  var@17 := copy y;
  var@16 := move var@17 == 3: i32;
  var@15 := Â¬ move var@16;
  assert(Â¬move var@15);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> s@0 : &r@0 mut (&r@1 mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> â¥ : i32 ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    proj_loans (s@0 : &r@0 mut (&r@1 mut (i32)))
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    proj_loans (s@0 : &r@0 mut (&r@1 mut (i32)))
  }
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  *(*(ppy)) := 1: i32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> s@0 : &r@0 mut (&r@1 mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> â¥ : i32 ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    proj_loans (s@0 : &r@0 mut (&r@1 mut (i32)))
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    proj_loans (s@0 : &r@0 mut (&r@1 mut (i32)))
  }
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> s@0 : &r@0 mut (&r@1 mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> â¥ : i32 ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    proj_loans (s@0 : &r@0 mut (&r@1 mut (i32)))
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    proj_loans (s@0 : &r@0 mut (&r@1 mut (i32)))
  }
}


- op:
1: i32

[[32mDebug[39m] expand_symbolic_value: s@0 : &r@0 mut (&r@1 mut (i32))

- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> s@0 : &r@0 mut (&r@1 mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> â¥ : i32 ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    proj_loans (s@0 : &r@0 mut (&r@1 mut (i32)))
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    proj_loans (s@0 : &r@0 mut (&r@1 mut (i32)))
  }
  None -> 1: i32 ;
}


- new context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@3 (s@1 : &r@1 mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> â¥ : i32 ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, proj_loans (s@1 : &r@1 mut (i32))â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, proj_loans (s@1 : &r@1 mut (i32)))
  }
  None -> 1: i32 ;
}


[[32mDebug[39m] expand_symbolic_value: s@1 : &r@1 mut (i32)

- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@3 (s@1 : &r@1 mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> â¥ : i32 ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, proj_loans (s@1 : &r@1 mut (i32))â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, proj_loans (s@1 : &r@1 mut (i32)))
  }
  None -> 1: i32 ;
}


- new context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@3 (&mut@4 (s@2 : i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> â¥ : i32 ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, @ignored_mut_loan(4, proj_loans (s@2 : i32))â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, âmut@4, proj_loans (s@2 : i32)â)
  }
  None -> 1: i32 ;
}


[[32mDebug[39m] 
**About to evaluate statement**: [
  y := 2: i32;
  py := &mut y;
  var@8 := &mut *(py);
  *(ppy) := move var@8;
  var@11 := copy *(px);
  var@10 := move var@11 == 2: i32;
  var@9 := Â¬ move var@10;
  assert(Â¬move var@9);
  *(px) := 3: i32;
  var@14 := copy x;
  var@13 := move var@14 == 1: i32;
  var@12 := Â¬ move var@13;
  assert(Â¬move var@12);
  var@17 := copy y;
  var@16 := move var@17 == 3: i32;
  var@15 := Â¬ move var@16;
  assert(Â¬move var@15);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@3 (&mut@4 (1: i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> â¥ : i32 ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, @ignored_mut_loan(4, proj_loans (s@2 : i32))â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, âmut@4, proj_loans (s@2 : i32)â)
  }
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  y := 2: i32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@3 (&mut@4 (1: i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> â¥ : i32 ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, @ignored_mut_loan(4, proj_loans (s@2 : i32))â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, âmut@4, proj_loans (s@2 : i32)â)
  }
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@3 (&mut@4 (1: i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> â¥ : i32 ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, @ignored_mut_loan(4, proj_loans (s@2 : i32))â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, âmut@4, proj_loans (s@2 : i32)â)
  }
}


- op:
2: i32

[[32mDebug[39m] 
**About to evaluate statement**: [
  py := &mut y;
  var@8 := &mut *(py);
  *(ppy) := move var@8;
  var@11 := copy *(px);
  var@10 := move var@11 == 2: i32;
  var@9 := Â¬ move var@10;
  assert(Â¬move var@9);
  *(px) := 3: i32;
  var@14 := copy x;
  var@13 := move var@14 == 1: i32;
  var@12 := Â¬ move var@13;
  assert(Â¬move var@12);
  var@17 := copy y;
  var@16 := move var@17 == 3: i32;
  var@15 := Â¬ move var@16;
  assert(Â¬move var@15);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@3 (&mut@4 (1: i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> 2: i32 ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, @ignored_mut_loan(4, proj_loans (s@2 : i32))â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, âmut@4, proj_loans (s@2 : i32)â)
  }
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  py := &mut y
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@3 (&mut@4 (1: i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> 2: i32 ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, @ignored_mut_loan(4, proj_loans (s@2 : i32))â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, âmut@4, proj_loans (s@2 : i32)â)
  }
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := &mut *(py);
  *(ppy) := move var@8;
  var@11 := copy *(px);
  var@10 := move var@11 == 2: i32;
  var@9 := Â¬ move var@10;
  assert(Â¬move var@9);
  *(px) := 3: i32;
  var@14 := copy x;
  var@13 := move var@14 == 1: i32;
  var@12 := Â¬ move var@13;
  assert(Â¬move var@12);
  var@17 := copy y;
  var@16 := move var@17 == 3: i32;
  var@15 := Â¬ move var@16;
  assert(Â¬move var@15);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@3 (&mut@4 (1: i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (2: i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, @ignored_mut_loan(4, proj_loans (s@2 : i32))â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, âmut@4, proj_loans (s@2 : i32)â)
  }
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := &mut *(py)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@3 (&mut@4 (1: i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (2: i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, @ignored_mut_loan(4, proj_loans (s@2 : i32))â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, âmut@4, proj_loans (s@2 : i32)â)
  }
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  *(ppy) := move var@8;
  var@11 := copy *(px);
  var@10 := move var@11 == 2: i32;
  var@9 := Â¬ move var@10;
  assert(Â¬move var@9);
  *(px) := 3: i32;
  var@14 := copy x;
  var@13 := move var@14 == 1: i32;
  var@12 := Â¬ move var@13;
  assert(Â¬move var@12);
  var@17 := copy y;
  var@16 := move var@17 == 3: i32;
  var@15 := Â¬ move var@16;
  assert(Â¬move var@15);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@3 (&mut@4 (1: i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> &mut@6 (2: i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, @ignored_mut_loan(4, proj_loans (s@2 : i32))â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, âmut@4, proj_loans (s@2 : i32)â)
  }
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  *(ppy) := move var@8
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@3 (&mut@4 (1: i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> &mut@6 (2: i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, @ignored_mut_loan(4, proj_loans (s@2 : i32))â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, âmut@4, proj_loans (s@2 : i32)â)
  }
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@3 (&mut@4 (1: i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> &mut@6 (2: i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, @ignored_mut_loan(4, proj_loans (s@2 : i32))â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, âmut@4, proj_loans (s@2 : i32)â)
  }
}


- op:
move var@8

[[32mDebug[39m] end borrow: 4:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@3 (â¥ : &'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, @ignored_mut_loan(4, proj_loans (s@2 : i32))â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, âmut@4, proj_loans (s@2 : i32)â)
  }
  None -> &mut@6 (2: i32) ;
  None -> &mut@4 (1: i32) ;
}

[[32mDebug[39m] give_back:
- bid: 4
- content: &mut@4 (1: i32)
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@3 (â¥ : &'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, @ignored_mut_loan(4, proj_loans (s@2 : i32))â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, âmut@4, proj_loans (s@2 : i32)â)
  }
  None -> &mut@6 (2: i32) ;
  None -> â¥ : &'_ mut (i32) ;
}


[[32mDebug[39m] give_back_value:
- bid: 4
- value: 1: i32
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@3 (â¥ : &'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, @ignored_mut_loan(4, proj_loans (s@2 : i32))â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, âmut@4, proj_loans (s@2 : i32)â)
  }
  None -> &mut@6 (2: i32) ;
  None -> â¥ : &'_ mut (i32) ;
}


[[32mDebug[39m] 
**About to evaluate statement**: [
  var@11 := copy *(px);
  var@10 := move var@11 == 2: i32;
  var@9 := Â¬ move var@10;
  assert(Â¬move var@9);
  *(px) := 3: i32;
  var@14 := copy x;
  var@13 := move var@14 == 1: i32;
  var@12 := Â¬ move var@13;
  assert(Â¬move var@12);
  var@17 := copy y;
  var@16 := move var@17 == 3: i32;
  var@15 := Â¬ move var@16;
  assert(Â¬move var@15);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@3 (&mut@6 (2: i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, @ended_ignored_mut_loan{ given_back=1: i32; child: proj_loans (s@2 : i32)}â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, @ended_mut_loan{ given_back=1: i32; child=proj_loans (s@2 : i32) })
  }
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@11 := copy *(px)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@3 (&mut@6 (2: i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, @ended_ignored_mut_loan{ given_back=1: i32; child: proj_loans (s@2 : i32)}â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, @ended_mut_loan{ given_back=1: i32; child=proj_loans (s@2 : i32) })
  }
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@3 (&mut@6 (2: i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, @ended_ignored_mut_loan{ given_back=1: i32; child: proj_loans (s@2 : i32)}â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, @ended_mut_loan{ given_back=1: i32; child=proj_loans (s@2 : i32) })
  }
}


- op:
copy *(px)

[[32mDebug[39m] end borrow: 1:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@3 (&mut@6 (2: i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, @ended_ignored_mut_loan{ given_back=1: i32; child: proj_loans (s@2 : i32)}â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, @ended_mut_loan{ given_back=1: i32; child=proj_loans (s@2 : i32) })
  }
}

[[32mDebug[39m] end borrow: 1: found outer borrows/abs:(InterpreterBorrowsCore.InnerLoans (InterpreterBorrowsCore.Borrow 2))
[[32mDebug[39m] end borrow: 2:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@3 (&mut@6 (2: i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, @ended_ignored_mut_loan{ given_back=1: i32; child: proj_loans (s@2 : i32)}â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, @ended_mut_loan{ given_back=1: i32; child=proj_loans (s@2 : i32) })
  }
}

[[32mDebug[39m] end borrow: 2: found outer borrows/abs:(InterpreterBorrowsCore.OuterAbs 0)
[[32mDebug[39m] end_abstraction: 0
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@3 (&mut@6 (2: i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, @ended_ignored_mut_loan{ given_back=1: i32; child: proj_loans (s@2 : i32)}â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, @ended_mut_loan{ given_back=1: i32; child=proj_loans (s@2 : i32) })
  }
}

[[32mDebug[39m] end_abstraction: 0
- context after parent abstractions ended:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@3 (&mut@6 (2: i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, @ended_ignored_mut_loan{ given_back=1: i32; child: proj_loans (s@2 : i32)}â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, @ended_mut_loan{ given_back=1: i32; child=proj_loans (s@2 : i32) })
  }
}

[[32mDebug[39m] end borrow: 3:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@3 (&mut@6 (2: i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, @ended_ignored_mut_loan{ given_back=1: i32; child: proj_loans (s@2 : i32)}â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, @ended_mut_loan{ given_back=1: i32; child=proj_loans (s@2 : i32) })
  }
}

[[32mDebug[39m] give_back:
- bid: 3
- content: &mut@3 (&mut@6 (2: i32))
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, @ended_ignored_mut_loan{ given_back=1: i32; child: proj_loans (s@2 : i32)}â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, @ended_mut_loan{ given_back=1: i32; child=proj_loans (s@2 : i32) })
  }
}


[[32mDebug[39m] give_back_value:
- bid: 3
- value: &mut@6 (2: i32)
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, @ended_ignored_mut_loan{ given_back=1: i32; child: proj_loans (s@2 : i32)}â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, @ended_mut_loan{ given_back=1: i32; child=proj_loans (s@2 : i32) })
  }
}


[[32mDebug[39m] end_abstraction: 0
- context after loans ended:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    @ended_mut_loan{ given_back=@ignored_mut_borrow(None, 2: i32); child=@ended_ignored_mut_loan{ given_back=1: i32; child: proj_loans (s@2 : i32)} }
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@6 (2: i32); child: @ended_mut_loan{ given_back=1: i32; child=proj_loans (s@2 : i32) }}
  }
}

[[32mDebug[39m] give_back_value:
- bid: 2
- value: s@3 : &r@1 mut (i32)
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    â¥ : &r@0 mut (&r@1 mut (i32)),
    @ended_mut_loan{ given_back=@ignored_mut_borrow(None, 2: i32); child=@ended_ignored_mut_loan{ given_back=1: i32; child: proj_loans (s@2 : i32)} }
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@6 (2: i32); child: @ended_mut_loan{ given_back=1: i32; child=proj_loans (s@2 : i32) }}
  }
}


[[32mDebug[39m] end_abstraction: 0
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@3 (&mut@6 (2: i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, @ended_ignored_mut_loan{ given_back=1: i32; child: proj_loans (s@2 : i32)}â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, @ended_mut_loan{ given_back=1: i32; child=proj_loans (s@2 : i32) })
  }
}


- new context:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (s@3 : &r@1 mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=proj_loans (s@3 : &r@1 mut (i32)); child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@6 (2: i32); child: @ended_mut_loan{ given_back=1: i32; child=proj_loans (s@2 : i32) }}
  }
}

[[32mDebug[39m] end borrow: 1:
- original context:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (s@3 : &r@1 mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=proj_loans (s@3 : &r@1 mut (i32)); child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@6 (2: i32); child: @ended_mut_loan{ given_back=1: i32; child=proj_loans (s@2 : i32) }}
  }
}

[[32mDebug[39m] give_back:
- bid: 1
- content: &mut@1 (s@3 : &r@1 mut (i32))
- context:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=proj_loans (s@3 : &r@1 mut (i32)); child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@6 (2: i32); child: @ended_mut_loan{ given_back=1: i32; child=proj_loans (s@2 : i32) }}
  }
}


[[32mDebug[39m] give_back_value:
- bid: 1
- value: s@3 : &r@1 mut (i32)
- context:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=proj_loans (s@3 : &r@1 mut (i32)); child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@6 (2: i32); child: @ended_mut_loan{ given_back=1: i32; child=proj_loans (s@2 : i32) }}
  }
}


[[32mDebug[39m] expand_symbolic_value: s@3 : &r@1 mut (i32)

- original context:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> s@3 : &r@1 mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=proj_loans (s@3 : &r@1 mut (i32)); child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@6 (2: i32); child: @ended_mut_loan{ given_back=1: i32; child=proj_loans (s@2 : i32) }}
  }
}


- new context:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@7 (s@4 : i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=âmut@7, proj_loans (s@4 : i32)â; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@6 (2: i32); child: @ended_mut_loan{ given_back=1: i32; child=proj_loans (s@2 : i32) }}
  }
}


[[32mDebug[39m] 
**About to evaluate statement**: [
  var@10 := move var@11 == 2: i32;
  var@9 := Â¬ move var@10;
  assert(Â¬move var@9);
  *(px) := 3: i32;
  var@14 := copy x;
  var@13 := move var@14 == 1: i32;
  var@12 := Â¬ move var@13;
  assert(Â¬move var@12);
  var@17 := copy y;
  var@16 := move var@17 == 3: i32;
  var@15 := Â¬ move var@16;
  assert(Â¬move var@15);
  return
]

**Context**:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@7 (s@4 : i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> s@4 : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=âmut@7, proj_loans (s@4 : i32)â; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@6 (2: i32); child: @ended_mut_loan{ given_back=1: i32; child=proj_loans (s@2 : i32) }}
  }
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@10 := move var@11 == 2: i32
]

**Context**:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@7 (s@4 : i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> s@4 : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=âmut@7, proj_loans (s@4 : i32)â; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@6 (2: i32); child: @ended_mut_loan{ given_back=1: i32; child=proj_loans (s@2 : i32) }}
  }
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@7 (s@4 : i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> s@4 : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=âmut@7, proj_loans (s@4 : i32)â; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@6 (2: i32); child: @ended_mut_loan{ given_back=1: i32; child=proj_loans (s@2 : i32) }}
  }
}


- op:
move var@11

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@7 (s@4 : i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=âmut@7, proj_loans (s@4 : i32)â; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@6 (2: i32); child: @ended_mut_loan{ given_back=1: i32; child=proj_loans (s@2 : i32) }}
  }
}


- op:
2: i32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@9 := Â¬ move var@10;
  assert(Â¬move var@9);
  *(px) := 3: i32;
  var@14 := copy x;
  var@13 := move var@14 == 1: i32;
  var@12 := Â¬ move var@13;
  assert(Â¬move var@12);
  var@17 := copy y;
  var@16 := move var@17 == 3: i32;
  var@15 := Â¬ move var@16;
  assert(Â¬move var@15);
  return
]

**Context**:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@7 (s@4 : i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> s@5 : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=âmut@7, proj_loans (s@4 : i32)â; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@6 (2: i32); child: @ended_mut_loan{ given_back=1: i32; child=proj_loans (s@2 : i32) }}
  }
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@9 := Â¬ move var@10
]

**Context**:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@7 (s@4 : i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> s@5 : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=âmut@7, proj_loans (s@4 : i32)â; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@6 (2: i32); child: @ended_mut_loan{ given_back=1: i32; child=proj_loans (s@2 : i32) }}
  }
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@7 (s@4 : i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> s@5 : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=âmut@7, proj_loans (s@4 : i32)â; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@6 (2: i32); child: @ended_mut_loan{ given_back=1: i32; child=proj_loans (s@2 : i32) }}
  }
}


- op:
move var@10

[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@9);
  *(px) := 3: i32;
  var@14 := copy x;
  var@13 := move var@14 == 1: i32;
  var@12 := Â¬ move var@13;
  assert(Â¬move var@12);
  var@17 := copy y;
  var@16 := move var@17 == 3: i32;
  var@15 := Â¬ move var@16;
  assert(Â¬move var@15);
  return
]

**Context**:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@7 (s@4 : i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> s@6 : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=âmut@7, proj_loans (s@4 : i32)â; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@6 (2: i32); child: @ended_mut_loan{ given_back=1: i32; child=proj_loans (s@2 : i32) }}
  }
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@9)
]

**Context**:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@7 (s@4 : i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> s@6 : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=âmut@7, proj_loans (s@4 : i32)â; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@6 (2: i32); child: @ended_mut_loan{ given_back=1: i32; child=proj_loans (s@2 : i32) }}
  }
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@7 (s@4 : i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> true ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=âmut@7, proj_loans (s@4 : i32)â; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@6 (2: i32); child: @ended_mut_loan{ given_back=1: i32; child=proj_loans (s@2 : i32) }}
  }
}


- op:
move var@9

[[32mDebug[39m] 
**About to evaluate statement**: [
  *(px) := 3: i32;
  var@14 := copy x;
  var@13 := move var@14 == 1: i32;
  var@12 := Â¬ move var@13;
  assert(Â¬move var@12);
  var@17 := copy y;
  var@16 := move var@17 == 3: i32;
  var@15 := Â¬ move var@16;
  assert(Â¬move var@15);
  return
]

**Context**:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@7 (s@4 : i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=âmut@7, proj_loans (s@4 : i32)â; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@6 (2: i32); child: @ended_mut_loan{ given_back=1: i32; child=proj_loans (s@2 : i32) }}
  }
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  *(px) := 3: i32
]

**Context**:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@7 (s@4 : i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=âmut@7, proj_loans (s@4 : i32)â; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@6 (2: i32); child: @ended_mut_loan{ given_back=1: i32; child=proj_loans (s@2 : i32) }}
  }
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@7 (s@4 : i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=âmut@7, proj_loans (s@4 : i32)â; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@6 (2: i32); child: @ended_mut_loan{ given_back=1: i32; child=proj_loans (s@2 : i32) }}
  }
}


- op:
3: i32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@14 := copy x;
  var@13 := move var@14 == 1: i32;
  var@12 := Â¬ move var@13;
  assert(Â¬move var@12);
  var@17 := copy y;
  var@16 := move var@17 == 3: i32;
  var@15 := Â¬ move var@16;
  assert(Â¬move var@15);
  return
]

**Context**:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@7 (3: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=âmut@7, proj_loans (s@4 : i32)â; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@6 (2: i32); child: @ended_mut_loan{ given_back=1: i32; child=proj_loans (s@2 : i32) }}
  }
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@14 := copy x
]

**Context**:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@7 (3: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=âmut@7, proj_loans (s@4 : i32)â; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@6 (2: i32); child: @ended_mut_loan{ given_back=1: i32; child=proj_loans (s@2 : i32) }}
  }
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@7 (3: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=âmut@7, proj_loans (s@4 : i32)â; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@6 (2: i32); child: @ended_mut_loan{ given_back=1: i32; child=proj_loans (s@2 : i32) }}
  }
}


- op:
copy x

[[32mDebug[39m] end borrow: 0:
- original context:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@7 (3: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=âmut@7, proj_loans (s@4 : i32)â; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@6 (2: i32); child: @ended_mut_loan{ given_back=1: i32; child=proj_loans (s@2 : i32) }}
  }
}

[[32mDebug[39m] end borrow: 0: found outer borrows/abs:(InterpreterBorrowsCore.OuterAbs 1)
[[32mDebug[39m] end_abstraction: 1
- original context:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@7 (3: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=âmut@7, proj_loans (s@4 : i32)â; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@6 (2: i32); child: @ended_mut_loan{ given_back=1: i32; child=proj_loans (s@2 : i32) }}
  }
}

[[32mDebug[39m] end_abstraction: 1
- context after parent abstractions ended:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@7 (3: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=âmut@7, proj_loans (s@4 : i32)â; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@6 (2: i32); child: @ended_mut_loan{ given_back=1: i32; child=proj_loans (s@2 : i32) }}
  }
}

[[32mDebug[39m] end borrow: 7:
- original context:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@7 (3: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=âmut@7, proj_loans (s@4 : i32)â; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@6 (2: i32); child: @ended_mut_loan{ given_back=1: i32; child=proj_loans (s@2 : i32) }}
  }
}

[[32mDebug[39m] give_back:
- bid: 7
- content: &mut@7 (3: i32)
- context:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=âmut@7, proj_loans (s@4 : i32)â; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@6 (2: i32); child: @ended_mut_loan{ given_back=1: i32; child=proj_loans (s@2 : i32) }}
  }
}


[[32mDebug[39m] give_back_value:
- bid: 7
- value: 3: i32
- context:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=âmut@7, proj_loans (s@4 : i32)â; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@6 (2: i32); child: @ended_mut_loan{ given_back=1: i32; child=proj_loans (s@2 : i32) }}
  }
}


[[32mDebug[39m] end_abstraction: 1
- context after loans ended:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=@ended_mut_loan{ given_back=3: i32; child=proj_loans (s@4 : i32) }; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@6 (2: i32); child: @ended_mut_loan{ given_back=1: i32; child=proj_loans (s@2 : i32) }}
  }
}

[[32mDebug[39m] give_back_value:
- bid: 0
- value: s@7 : i32
- context:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=@ended_mut_loan{ given_back=3: i32; child=proj_loans (s@4 : i32) }; child=â¥ : &r@1 mut (i32)),
    @ended_ignored_mut_loan{ given_back=&mut@6 (2: i32); child: @ended_mut_loan{ given_back=1: i32; child=proj_loans (s@2 : i32) }}
  }
}


[[32mDebug[39m] give_back_value:
- bid: 6
- value: s@8 : i32
- context:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@7 : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=@ended_mut_loan{ given_back=3: i32; child=proj_loans (s@4 : i32) }; child=â¥ : &r@1 mut (i32)),
    @ended_ignored_mut_loan{ given_back=â¥ : &r@1 mut (i32); child: @ended_mut_loan{ given_back=1: i32; child=proj_loans (s@2 : i32) }}
  }
}


[[32mDebug[39m] end_abstraction: 1
- original context:
# Ended regions: {0}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@7 (3: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (âmut@6â) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=âmut@7, proj_loans (s@4 : i32)â; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@6 (2: i32); child: @ended_mut_loan{ given_back=1: i32; child=proj_loans (s@2 : i32) }}
  }
}


- new context:
# Ended regions: {0, 1}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@7 : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (s@8 : i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
}

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@13 := move var@14 == 1: i32;
  var@12 := Â¬ move var@13;
  assert(Â¬move var@12);
  var@17 := copy y;
  var@16 := move var@17 == 3: i32;
  var@15 := Â¬ move var@16;
  assert(Â¬move var@15);
  return
]

**Context**:
# Ended regions: {0, 1}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@7 : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (s@8 : i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> s@7 : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@13 := move var@14 == 1: i32
]

**Context**:
# Ended regions: {0, 1}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@7 : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (s@8 : i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> s@7 : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {0, 1}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@7 : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (s@8 : i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> s@7 : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
}


- op:
move var@14

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {0, 1}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@7 : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (s@8 : i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
}


- op:
1: i32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@12 := Â¬ move var@13;
  assert(Â¬move var@12);
  var@17 := copy y;
  var@16 := move var@17 == 3: i32;
  var@15 := Â¬ move var@16;
  assert(Â¬move var@15);
  return
]

**Context**:
# Ended regions: {0, 1}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@7 : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (s@8 : i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> s@9 : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@12 := Â¬ move var@13
]

**Context**:
# Ended regions: {0, 1}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@7 : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (s@8 : i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> s@9 : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {0, 1}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@7 : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (s@8 : i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> s@9 : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
}


- op:
move var@13

[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@12);
  var@17 := copy y;
  var@16 := move var@17 == 3: i32;
  var@15 := Â¬ move var@16;
  assert(Â¬move var@15);
  return
]

**Context**:
# Ended regions: {0, 1}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@7 : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (s@8 : i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> s@10 : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@12)
]

**Context**:
# Ended regions: {0, 1}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@7 : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (s@8 : i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> s@10 : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {0, 1}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@7 : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (s@8 : i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> true ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
}


- op:
move var@12

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@17 := copy y;
  var@16 := move var@17 == 3: i32;
  var@15 := Â¬ move var@16;
  assert(Â¬move var@15);
  return
]

**Context**:
# Ended regions: {0, 1}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@7 : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (s@8 : i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@17 := copy y
]

**Context**:
# Ended regions: {0, 1}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@7 : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (s@8 : i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {0, 1}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@7 : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (s@8 : i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
}


- op:
copy y

[[32mDebug[39m] end borrow: 5:
- original context:
# Ended regions: {0, 1}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@7 : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> &mut@5 (s@8 : i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
}

[[32mDebug[39m] give_back:
- bid: 5
- content: &mut@5 (s@8 : i32)
- context:
# Ended regions: {0, 1}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@7 : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
}


[[32mDebug[39m] give_back_value:
- bid: 5
- value: s@8 : i32
- context:
# Ended regions: {0, 1}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@7 : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> âmut@5â ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
}


[[32mDebug[39m] 
**About to evaluate statement**: [
  var@16 := move var@17 == 3: i32;
  var@15 := Â¬ move var@16;
  assert(Â¬move var@15);
  return
]

**Context**:
# Ended regions: {0, 1}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@7 : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> s@8 : i32 ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> s@8 : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@16 := move var@17 == 3: i32
]

**Context**:
# Ended regions: {0, 1}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@7 : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> s@8 : i32 ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> s@8 : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {0, 1}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@7 : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> s@8 : i32 ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> s@8 : i32 ;
}


- op:
move var@17

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {0, 1}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@7 : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> s@8 : i32 ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
}


- op:
3: i32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@15 := Â¬ move var@16;
  assert(Â¬move var@15);
  return
]

**Context**:
# Ended regions: {0, 1}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@7 : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> s@8 : i32 ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> s@11 : bool ;
  Some (var@17) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@15 := Â¬ move var@16
]

**Context**:
# Ended regions: {0, 1}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@7 : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> s@8 : i32 ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> s@11 : bool ;
  Some (var@17) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {0, 1}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@7 : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> s@8 : i32 ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> s@11 : bool ;
  Some (var@17) -> â¥ : i32 ;
}


- op:
move var@16

[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@15);
  return
]

**Context**:
# Ended regions: {0, 1}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@7 : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> s@8 : i32 ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> s@12 : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@15)
]

**Context**:
# Ended regions: {0, 1}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@7 : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> s@8 : i32 ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> s@12 : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {0, 1}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@7 : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> s@8 : i32 ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> true ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
}


- op:
move var@15

[[32mDebug[39m] 
**About to evaluate statement**: [
  return
]

**Context**:
# Ended regions: {0, 1}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@7 : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (y) -> s@8 : i32 ;
  Some (py) -> â¥ : &'_ mut (i32) ;
  Some (var@8) -> â¥ : &'_ mut (i32) ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : bool ;
  Some (var@11) -> â¥ : i32 ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : bool ;
  Some (var@14) -> â¥ : i32 ;
  Some (var@15) -> â¥ : bool ;
  Some (var@16) -> â¥ : bool ;
  Some (var@17) -> â¥ : i32 ;
}



[[32mDebug[39m] test_function_symbolic: id_mut_mut_test3
[[32mDebug[39m] 
**About to evaluate statement**: [
  x := 0: i32;
  px := &mut x;
  ppx := &mut px;
  var@5 := &two-phase *(ppx);
  ppy := move id_mut_mut<i32>(move var@5);
  *(*(ppy)) := 1: i32;
  var@7 := &two-phase *(ppy);
  ppz := move id_mut_mut<i32>(move var@7);
  *(*(ppz)) := 2: i32;
  var@10 := copy *(px);
  var@9 := move var@10 == 2: i32;
  var@8 := Â¬ move var@9;
  assert(Â¬move var@8);
  var@13 := copy x;
  var@12 := move var@13 == 2: i32;
  var@11 := Â¬ move var@12;
  assert(Â¬move var@11);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  x := 0: i32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> â¥ : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
}


- op:
0: i32

[[32mDebug[39m] 
**About to evaluate statement**: [
  px := &mut x;
  ppx := &mut px;
  var@5 := &two-phase *(ppx);
  ppy := move id_mut_mut<i32>(move var@5);
  *(*(ppy)) := 1: i32;
  var@7 := &two-phase *(ppy);
  ppz := move id_mut_mut<i32>(move var@7);
  *(*(ppz)) := 2: i32;
  var@10 := copy *(px);
  var@9 := move var@10 == 2: i32;
  var@8 := Â¬ move var@9;
  assert(Â¬move var@8);
  var@13 := copy x;
  var@12 := move var@13 == 2: i32;
  var@11 := Â¬ move var@12;
  assert(Â¬move var@11);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  px := &mut x
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> 0: i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  ppx := &mut px;
  var@5 := &two-phase *(ppx);
  ppy := move id_mut_mut<i32>(move var@5);
  *(*(ppy)) := 1: i32;
  var@7 := &two-phase *(ppy);
  ppz := move id_mut_mut<i32>(move var@7);
  *(*(ppz)) := 2: i32;
  var@10 := copy *(px);
  var@9 := move var@10 == 2: i32;
  var@8 := Â¬ move var@9;
  assert(Â¬move var@8);
  var@13 := copy x;
  var@12 := move var@13 == 2: i32;
  var@11 := Â¬ move var@12;
  assert(Â¬move var@11);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@0 (0: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  ppx := &mut px
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@0 (0: i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := &two-phase *(ppx);
  ppy := move id_mut_mut<i32>(move var@5);
  *(*(ppy)) := 1: i32;
  var@7 := &two-phase *(ppy);
  ppz := move id_mut_mut<i32>(move var@7);
  *(*(ppz)) := 2: i32;
  var@10 := copy *(px);
  var@9 := move var@10 == 2: i32;
  var@8 := Â¬ move var@9;
  assert(Â¬move var@8);
  var@13 := copy x;
  var@12 := move var@13 == 2: i32;
  var@11 := Â¬ move var@12;
  assert(Â¬move var@11);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (&mut@0 (0: i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@5 := &two-phase *(ppx)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (&mut@0 (0: i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  ppy := move id_mut_mut<i32>(move var@5);
  *(*(ppy)) := 1: i32;
  var@7 := &two-phase *(ppy);
  ppz := move id_mut_mut<i32>(move var@7);
  *(*(ppz)) := 2: i32;
  var@10 := copy *(px);
  var@9 := move var@10 == 2: i32;
  var@8 := Â¬ move var@9;
  assert(Â¬move var@8);
  var@13 := copy x;
  var@12 := move var@13 == 2: i32;
  var@11 := Â¬ move var@12;
  assert(Â¬move var@11);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (@shared_loan({2}, &mut@0 (0: i32))) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> âinactivated_mut@2â ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  ppy := move id_mut_mut<i32>(move var@5)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (@shared_loan({2}, &mut@0 (0: i32))) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> âinactivated_mut@2â ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
}



[[32mDebug[39m] activate_inactivated_mut_borrow: resulting value:
&mut@0 (0: i32)
[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> &mut@2 (&mut@0 (0: i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
}


- op:
move var@5

[[32mDebug[39m] 
**About to evaluate statement**: [
  *(*(ppy)) := 1: i32;
  var@7 := &two-phase *(ppy);
  ppz := move id_mut_mut<i32>(move var@7);
  *(*(ppz)) := 2: i32;
  var@10 := copy *(px);
  var@9 := move var@10 == 2: i32;
  var@8 := Â¬ move var@9;
  assert(Â¬move var@8);
  var@13 := copy x;
  var@12 := move var@13 == 2: i32;
  var@11 := Â¬ move var@12;
  assert(Â¬move var@11);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> s@0 : &r@0 mut (&r@1 mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    proj_loans (s@0 : &r@0 mut (&r@1 mut (i32)))
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    proj_loans (s@0 : &r@0 mut (&r@1 mut (i32)))
  }
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  *(*(ppy)) := 1: i32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> s@0 : &r@0 mut (&r@1 mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    proj_loans (s@0 : &r@0 mut (&r@1 mut (i32)))
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    proj_loans (s@0 : &r@0 mut (&r@1 mut (i32)))
  }
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> s@0 : &r@0 mut (&r@1 mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    proj_loans (s@0 : &r@0 mut (&r@1 mut (i32)))
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    proj_loans (s@0 : &r@0 mut (&r@1 mut (i32)))
  }
}


- op:
1: i32

[[32mDebug[39m] expand_symbolic_value: s@0 : &r@0 mut (&r@1 mut (i32))

- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> s@0 : &r@0 mut (&r@1 mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    proj_loans (s@0 : &r@0 mut (&r@1 mut (i32)))
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    proj_loans (s@0 : &r@0 mut (&r@1 mut (i32)))
  }
  None -> 1: i32 ;
}


- new context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@3 (s@1 : &r@1 mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, proj_loans (s@1 : &r@1 mut (i32))â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, proj_loans (s@1 : &r@1 mut (i32)))
  }
  None -> 1: i32 ;
}


[[32mDebug[39m] expand_symbolic_value: s@1 : &r@1 mut (i32)

- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@3 (s@1 : &r@1 mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, proj_loans (s@1 : &r@1 mut (i32))â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, proj_loans (s@1 : &r@1 mut (i32)))
  }
  None -> 1: i32 ;
}


- new context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@3 (&mut@4 (s@2 : i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, @ignored_mut_loan(4, proj_loans (s@2 : i32))â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, âmut@4, proj_loans (s@2 : i32)â)
  }
  None -> 1: i32 ;
}


[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := &two-phase *(ppy);
  ppz := move id_mut_mut<i32>(move var@7);
  *(*(ppz)) := 2: i32;
  var@10 := copy *(px);
  var@9 := move var@10 == 2: i32;
  var@8 := Â¬ move var@9;
  assert(Â¬move var@8);
  var@13 := copy x;
  var@12 := move var@13 == 2: i32;
  var@11 := Â¬ move var@12;
  assert(Â¬move var@11);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@3 (&mut@4 (1: i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, @ignored_mut_loan(4, proj_loans (s@2 : i32))â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, âmut@4, proj_loans (s@2 : i32)â)
  }
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@7 := &two-phase *(ppy)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@3 (&mut@4 (1: i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, @ignored_mut_loan(4, proj_loans (s@2 : i32))â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, âmut@4, proj_loans (s@2 : i32)â)
  }
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  ppz := move id_mut_mut<i32>(move var@7);
  *(*(ppz)) := 2: i32;
  var@10 := copy *(px);
  var@9 := move var@10 == 2: i32;
  var@8 := Â¬ move var@9;
  assert(Â¬move var@8);
  var@13 := copy x;
  var@12 := move var@13 == 2: i32;
  var@11 := Â¬ move var@12;
  assert(Â¬move var@11);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@3 (@shared_loan({5}, &mut@4 (1: i32))) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> âinactivated_mut@5â ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, @ignored_mut_loan(4, proj_loans (s@2 : i32))â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, âmut@4, proj_loans (s@2 : i32)â)
  }
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  ppz := move id_mut_mut<i32>(move var@7)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@3 (@shared_loan({5}, &mut@4 (1: i32))) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> âinactivated_mut@5â ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, @ignored_mut_loan(4, proj_loans (s@2 : i32))â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, âmut@4, proj_loans (s@2 : i32)â)
  }
}



[[32mDebug[39m] activate_inactivated_mut_borrow: resulting value:
&mut@4 (1: i32)
[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@3 (âmut@5â) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> &mut@5 (&mut@4 (1: i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, @ignored_mut_loan(4, proj_loans (s@2 : i32))â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, âmut@4, proj_loans (s@2 : i32)â)
  }
}


- op:
move var@7

[[32mDebug[39m] 
**About to evaluate statement**: [
  *(*(ppz)) := 2: i32;
  var@10 := copy *(px);
  var@9 := move var@10 == 2: i32;
  var@8 := Â¬ move var@9;
  assert(Â¬move var@8);
  var@13 := copy x;
  var@12 := move var@13 == 2: i32;
  var@11 := Â¬ move var@12;
  assert(Â¬move var@11);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@3 (âmut@5â) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> s@3 : &r@2 mut (&r@3 mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, @ignored_mut_loan(4, proj_loans (s@2 : i32))â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, âmut@4, proj_loans (s@2 : i32)â)
  }
  abs@2{parents={}}{regions={2}} {
    &mut@5 (@ignored_mut_borrow(None, 1: i32)),
    proj_loans (s@3 : &r@2 mut (&r@3 mut (i32)))
  }
  abs@3{parents={2}}{regions={3}} {
    @ignored_mut_borrow(Some (5), &mut@4 (1: i32)),
    proj_loans (s@3 : &r@2 mut (&r@3 mut (i32)))
  }
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  *(*(ppz)) := 2: i32
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@3 (âmut@5â) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> s@3 : &r@2 mut (&r@3 mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, @ignored_mut_loan(4, proj_loans (s@2 : i32))â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, âmut@4, proj_loans (s@2 : i32)â)
  }
  abs@2{parents={}}{regions={2}} {
    &mut@5 (@ignored_mut_borrow(None, 1: i32)),
    proj_loans (s@3 : &r@2 mut (&r@3 mut (i32)))
  }
  abs@3{parents={2}}{regions={3}} {
    @ignored_mut_borrow(Some (5), &mut@4 (1: i32)),
    proj_loans (s@3 : &r@2 mut (&r@3 mut (i32)))
  }
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@3 (âmut@5â) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> s@3 : &r@2 mut (&r@3 mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, @ignored_mut_loan(4, proj_loans (s@2 : i32))â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, âmut@4, proj_loans (s@2 : i32)â)
  }
  abs@2{parents={}}{regions={2}} {
    &mut@5 (@ignored_mut_borrow(None, 1: i32)),
    proj_loans (s@3 : &r@2 mut (&r@3 mut (i32)))
  }
  abs@3{parents={2}}{regions={3}} {
    @ignored_mut_borrow(Some (5), &mut@4 (1: i32)),
    proj_loans (s@3 : &r@2 mut (&r@3 mut (i32)))
  }
}


- op:
2: i32

[[32mDebug[39m] expand_symbolic_value: s@3 : &r@2 mut (&r@3 mut (i32))

- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@3 (âmut@5â) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> s@3 : &r@2 mut (&r@3 mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, @ignored_mut_loan(4, proj_loans (s@2 : i32))â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, âmut@4, proj_loans (s@2 : i32)â)
  }
  abs@2{parents={}}{regions={2}} {
    &mut@5 (@ignored_mut_borrow(None, 1: i32)),
    proj_loans (s@3 : &r@2 mut (&r@3 mut (i32)))
  }
  abs@3{parents={2}}{regions={3}} {
    @ignored_mut_borrow(Some (5), &mut@4 (1: i32)),
    proj_loans (s@3 : &r@2 mut (&r@3 mut (i32)))
  }
  None -> 2: i32 ;
}


- new context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@3 (âmut@5â) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> &mut@6 (s@4 : &r@3 mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, @ignored_mut_loan(4, proj_loans (s@2 : i32))â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, âmut@4, proj_loans (s@2 : i32)â)
  }
  abs@2{parents={}}{regions={2}} {
    &mut@5 (@ignored_mut_borrow(None, 1: i32)),
    âmut@6, proj_loans (s@4 : &r@3 mut (i32))â
  }
  abs@3{parents={2}}{regions={3}} {
    @ignored_mut_borrow(Some (5), &mut@4 (1: i32)),
    @ignored_mut_loan(6, proj_loans (s@4 : &r@3 mut (i32)))
  }
  None -> 2: i32 ;
}


[[32mDebug[39m] expand_symbolic_value: s@4 : &r@3 mut (i32)

- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@3 (âmut@5â) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> &mut@6 (s@4 : &r@3 mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, @ignored_mut_loan(4, proj_loans (s@2 : i32))â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, âmut@4, proj_loans (s@2 : i32)â)
  }
  abs@2{parents={}}{regions={2}} {
    &mut@5 (@ignored_mut_borrow(None, 1: i32)),
    âmut@6, proj_loans (s@4 : &r@3 mut (i32))â
  }
  abs@3{parents={2}}{regions={3}} {
    @ignored_mut_borrow(Some (5), &mut@4 (1: i32)),
    @ignored_mut_loan(6, proj_loans (s@4 : &r@3 mut (i32)))
  }
  None -> 2: i32 ;
}


- new context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@3 (âmut@5â) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> &mut@6 (&mut@7 (s@5 : i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, @ignored_mut_loan(4, proj_loans (s@2 : i32))â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, âmut@4, proj_loans (s@2 : i32)â)
  }
  abs@2{parents={}}{regions={2}} {
    &mut@5 (@ignored_mut_borrow(None, 1: i32)),
    âmut@6, @ignored_mut_loan(7, proj_loans (s@5 : i32))â
  }
  abs@3{parents={2}}{regions={3}} {
    @ignored_mut_borrow(Some (5), &mut@4 (1: i32)),
    @ignored_mut_loan(6, âmut@7, proj_loans (s@5 : i32)â)
  }
  None -> 2: i32 ;
}


[[32mDebug[39m] 
**About to evaluate statement**: [
  var@10 := copy *(px);
  var@9 := move var@10 == 2: i32;
  var@8 := Â¬ move var@9;
  assert(Â¬move var@8);
  var@13 := copy x;
  var@12 := move var@13 == 2: i32;
  var@11 := Â¬ move var@12;
  assert(Â¬move var@11);
  return
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@3 (âmut@5â) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> &mut@6 (&mut@7 (2: i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, @ignored_mut_loan(4, proj_loans (s@2 : i32))â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, âmut@4, proj_loans (s@2 : i32)â)
  }
  abs@2{parents={}}{regions={2}} {
    &mut@5 (@ignored_mut_borrow(None, 1: i32)),
    âmut@6, @ignored_mut_loan(7, proj_loans (s@5 : i32))â
  }
  abs@3{parents={2}}{regions={3}} {
    @ignored_mut_borrow(Some (5), &mut@4 (1: i32)),
    @ignored_mut_loan(6, âmut@7, proj_loans (s@5 : i32)â)
  }
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@10 := copy *(px)
]

**Context**:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@3 (âmut@5â) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> &mut@6 (&mut@7 (2: i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, @ignored_mut_loan(4, proj_loans (s@2 : i32))â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, âmut@4, proj_loans (s@2 : i32)â)
  }
  abs@2{parents={}}{regions={2}} {
    &mut@5 (@ignored_mut_borrow(None, 1: i32)),
    âmut@6, @ignored_mut_loan(7, proj_loans (s@5 : i32))â
  }
  abs@3{parents={2}}{regions={3}} {
    @ignored_mut_borrow(Some (5), &mut@4 (1: i32)),
    @ignored_mut_loan(6, âmut@7, proj_loans (s@5 : i32)â)
  }
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@3 (âmut@5â) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> &mut@6 (&mut@7 (2: i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, @ignored_mut_loan(4, proj_loans (s@2 : i32))â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, âmut@4, proj_loans (s@2 : i32)â)
  }
  abs@2{parents={}}{regions={2}} {
    &mut@5 (@ignored_mut_borrow(None, 1: i32)),
    âmut@6, @ignored_mut_loan(7, proj_loans (s@5 : i32))â
  }
  abs@3{parents={2}}{regions={3}} {
    @ignored_mut_borrow(Some (5), &mut@4 (1: i32)),
    @ignored_mut_loan(6, âmut@7, proj_loans (s@5 : i32)â)
  }
}


- op:
copy *(px)

[[32mDebug[39m] end borrow: 1:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@3 (âmut@5â) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> &mut@6 (&mut@7 (2: i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, @ignored_mut_loan(4, proj_loans (s@2 : i32))â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, âmut@4, proj_loans (s@2 : i32)â)
  }
  abs@2{parents={}}{regions={2}} {
    &mut@5 (@ignored_mut_borrow(None, 1: i32)),
    âmut@6, @ignored_mut_loan(7, proj_loans (s@5 : i32))â
  }
  abs@3{parents={2}}{regions={3}} {
    @ignored_mut_borrow(Some (5), &mut@4 (1: i32)),
    @ignored_mut_loan(6, âmut@7, proj_loans (s@5 : i32)â)
  }
}

[[32mDebug[39m] end borrow: 1: found outer borrows/abs:(InterpreterBorrowsCore.InnerLoans (InterpreterBorrowsCore.Borrow 2))
[[32mDebug[39m] end borrow: 2:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@3 (âmut@5â) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> &mut@6 (&mut@7 (2: i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, @ignored_mut_loan(4, proj_loans (s@2 : i32))â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, âmut@4, proj_loans (s@2 : i32)â)
  }
  abs@2{parents={}}{regions={2}} {
    &mut@5 (@ignored_mut_borrow(None, 1: i32)),
    âmut@6, @ignored_mut_loan(7, proj_loans (s@5 : i32))â
  }
  abs@3{parents={2}}{regions={3}} {
    @ignored_mut_borrow(Some (5), &mut@4 (1: i32)),
    @ignored_mut_loan(6, âmut@7, proj_loans (s@5 : i32)â)
  }
}

[[32mDebug[39m] end borrow: 2: found outer borrows/abs:(InterpreterBorrowsCore.OuterAbs 0)
[[32mDebug[39m] end_abstraction: 0
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@3 (âmut@5â) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> &mut@6 (&mut@7 (2: i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, @ignored_mut_loan(4, proj_loans (s@2 : i32))â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, âmut@4, proj_loans (s@2 : i32)â)
  }
  abs@2{parents={}}{regions={2}} {
    &mut@5 (@ignored_mut_borrow(None, 1: i32)),
    âmut@6, @ignored_mut_loan(7, proj_loans (s@5 : i32))â
  }
  abs@3{parents={2}}{regions={3}} {
    @ignored_mut_borrow(Some (5), &mut@4 (1: i32)),
    @ignored_mut_loan(6, âmut@7, proj_loans (s@5 : i32)â)
  }
}

[[32mDebug[39m] end_abstraction: 0
- context after parent abstractions ended:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@3 (âmut@5â) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> &mut@6 (&mut@7 (2: i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, @ignored_mut_loan(4, proj_loans (s@2 : i32))â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, âmut@4, proj_loans (s@2 : i32)â)
  }
  abs@2{parents={}}{regions={2}} {
    &mut@5 (@ignored_mut_borrow(None, 1: i32)),
    âmut@6, @ignored_mut_loan(7, proj_loans (s@5 : i32))â
  }
  abs@3{parents={2}}{regions={3}} {
    @ignored_mut_borrow(Some (5), &mut@4 (1: i32)),
    @ignored_mut_loan(6, âmut@7, proj_loans (s@5 : i32)â)
  }
}

[[32mDebug[39m] end borrow: 3:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@3 (âmut@5â) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> &mut@6 (&mut@7 (2: i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, @ignored_mut_loan(4, proj_loans (s@2 : i32))â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, âmut@4, proj_loans (s@2 : i32)â)
  }
  abs@2{parents={}}{regions={2}} {
    &mut@5 (@ignored_mut_borrow(None, 1: i32)),
    âmut@6, @ignored_mut_loan(7, proj_loans (s@5 : i32))â
  }
  abs@3{parents={2}}{regions={3}} {
    @ignored_mut_borrow(Some (5), &mut@4 (1: i32)),
    @ignored_mut_loan(6, âmut@7, proj_loans (s@5 : i32)â)
  }
}

[[32mDebug[39m] end borrow: 3: found outer borrows/abs:(InterpreterBorrowsCore.InnerLoans (InterpreterBorrowsCore.Borrow 5))
[[32mDebug[39m] end borrow: 5:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@3 (âmut@5â) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> &mut@6 (&mut@7 (2: i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, @ignored_mut_loan(4, proj_loans (s@2 : i32))â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, âmut@4, proj_loans (s@2 : i32)â)
  }
  abs@2{parents={}}{regions={2}} {
    &mut@5 (@ignored_mut_borrow(None, 1: i32)),
    âmut@6, @ignored_mut_loan(7, proj_loans (s@5 : i32))â
  }
  abs@3{parents={2}}{regions={3}} {
    @ignored_mut_borrow(Some (5), &mut@4 (1: i32)),
    @ignored_mut_loan(6, âmut@7, proj_loans (s@5 : i32)â)
  }
}

[[32mDebug[39m] end borrow: 5: found outer borrows/abs:(InterpreterBorrowsCore.OuterAbs 2)
[[32mDebug[39m] end_abstraction: 2
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@3 (âmut@5â) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> &mut@6 (&mut@7 (2: i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, @ignored_mut_loan(4, proj_loans (s@2 : i32))â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, âmut@4, proj_loans (s@2 : i32)â)
  }
  abs@2{parents={}}{regions={2}} {
    &mut@5 (@ignored_mut_borrow(None, 1: i32)),
    âmut@6, @ignored_mut_loan(7, proj_loans (s@5 : i32))â
  }
  abs@3{parents={2}}{regions={3}} {
    @ignored_mut_borrow(Some (5), &mut@4 (1: i32)),
    @ignored_mut_loan(6, âmut@7, proj_loans (s@5 : i32)â)
  }
}

[[32mDebug[39m] end_abstraction: 2
- context after parent abstractions ended:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@3 (âmut@5â) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> &mut@6 (&mut@7 (2: i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, @ignored_mut_loan(4, proj_loans (s@2 : i32))â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, âmut@4, proj_loans (s@2 : i32)â)
  }
  abs@2{parents={}}{regions={2}} {
    &mut@5 (@ignored_mut_borrow(None, 1: i32)),
    âmut@6, @ignored_mut_loan(7, proj_loans (s@5 : i32))â
  }
  abs@3{parents={2}}{regions={3}} {
    @ignored_mut_borrow(Some (5), &mut@4 (1: i32)),
    @ignored_mut_loan(6, âmut@7, proj_loans (s@5 : i32)â)
  }
}

[[32mDebug[39m] end borrow: 6:
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@3 (âmut@5â) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> &mut@6 (&mut@7 (2: i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, @ignored_mut_loan(4, proj_loans (s@2 : i32))â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, âmut@4, proj_loans (s@2 : i32)â)
  }
  abs@2{parents={}}{regions={2}} {
    &mut@5 (@ignored_mut_borrow(None, 1: i32)),
    âmut@6, @ignored_mut_loan(7, proj_loans (s@5 : i32))â
  }
  abs@3{parents={2}}{regions={3}} {
    @ignored_mut_borrow(Some (5), &mut@4 (1: i32)),
    @ignored_mut_loan(6, âmut@7, proj_loans (s@5 : i32)â)
  }
}

[[32mDebug[39m] give_back:
- bid: 6
- content: &mut@6 (&mut@7 (2: i32))
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@3 (âmut@5â) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, @ignored_mut_loan(4, proj_loans (s@2 : i32))â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, âmut@4, proj_loans (s@2 : i32)â)
  }
  abs@2{parents={}}{regions={2}} {
    &mut@5 (@ignored_mut_borrow(None, 1: i32)),
    âmut@6, @ignored_mut_loan(7, proj_loans (s@5 : i32))â
  }
  abs@3{parents={2}}{regions={3}} {
    @ignored_mut_borrow(Some (5), &mut@4 (1: i32)),
    @ignored_mut_loan(6, âmut@7, proj_loans (s@5 : i32)â)
  }
}


[[32mDebug[39m] give_back_value:
- bid: 6
- value: &mut@7 (2: i32)
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@3 (âmut@5â) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, @ignored_mut_loan(4, proj_loans (s@2 : i32))â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, âmut@4, proj_loans (s@2 : i32)â)
  }
  abs@2{parents={}}{regions={2}} {
    &mut@5 (@ignored_mut_borrow(None, 1: i32)),
    âmut@6, @ignored_mut_loan(7, proj_loans (s@5 : i32))â
  }
  abs@3{parents={2}}{regions={3}} {
    @ignored_mut_borrow(Some (5), &mut@4 (1: i32)),
    @ignored_mut_loan(6, âmut@7, proj_loans (s@5 : i32)â)
  }
}


[[32mDebug[39m] end_abstraction: 2
- context after loans ended:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@3 (âmut@5â) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, @ignored_mut_loan(4, proj_loans (s@2 : i32))â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, âmut@4, proj_loans (s@2 : i32)â)
  }
  abs@2{parents={}}{regions={2}} {
    &mut@5 (@ignored_mut_borrow(None, 1: i32)),
    @ended_mut_loan{ given_back=@ignored_mut_borrow(None, 2: i32); child=@ignored_mut_loan(7, proj_loans (s@5 : i32)) }
  }
  abs@3{parents={2}}{regions={3}} {
    @ignored_mut_borrow(Some (5), &mut@4 (1: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@7 (2: i32); child: âmut@7, proj_loans (s@5 : i32)â}
  }
}

[[32mDebug[39m] give_back_value:
- bid: 5
- value: s@6 : &r@3 mut (i32)
- context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@3 (âmut@5â) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, @ignored_mut_loan(4, proj_loans (s@2 : i32))â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, âmut@4, proj_loans (s@2 : i32)â)
  }
  abs@2{parents={}}{regions={2}} {
    â¥ : &r@2 mut (&r@3 mut (i32)),
    @ended_mut_loan{ given_back=@ignored_mut_borrow(None, 2: i32); child=@ignored_mut_loan(7, proj_loans (s@5 : i32)) }
  }
  abs@3{parents={2}}{regions={3}} {
    @ignored_mut_borrow(Some (5), &mut@4 (1: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@7 (2: i32); child: âmut@7, proj_loans (s@5 : i32)â}
  }
}


[[32mDebug[39m] end_abstraction: 2
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@3 (âmut@5â) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> &mut@6 (&mut@7 (2: i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, @ignored_mut_loan(4, proj_loans (s@2 : i32))â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, âmut@4, proj_loans (s@2 : i32)â)
  }
  abs@2{parents={}}{regions={2}} {
    &mut@5 (@ignored_mut_borrow(None, 1: i32)),
    âmut@6, @ignored_mut_loan(7, proj_loans (s@5 : i32))â
  }
  abs@3{parents={2}}{regions={3}} {
    @ignored_mut_borrow(Some (5), &mut@4 (1: i32)),
    @ignored_mut_loan(6, âmut@7, proj_loans (s@5 : i32)â)
  }
}


- new context:
# Ended regions: {2}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@3 (s@6 : &r@3 mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, @ignored_mut_loan(4, proj_loans (s@2 : i32))â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, âmut@4, proj_loans (s@2 : i32)â)
  }
  abs@3{parents={}}{regions={3}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=proj_loans (s@6 : &r@3 mut (i32)); child=&mut@4 (1: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@7 (2: i32); child: âmut@7, proj_loans (s@5 : i32)â}
  }
}

[[32mDebug[39m] end borrow: 3:
- original context:
# Ended regions: {2}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@3 (s@6 : &r@3 mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, @ignored_mut_loan(4, proj_loans (s@2 : i32))â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, âmut@4, proj_loans (s@2 : i32)â)
  }
  abs@3{parents={}}{regions={3}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=proj_loans (s@6 : &r@3 mut (i32)); child=&mut@4 (1: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@7 (2: i32); child: âmut@7, proj_loans (s@5 : i32)â}
  }
}

[[32mDebug[39m] give_back:
- bid: 3
- content: &mut@3 (s@6 : &r@3 mut (i32))
- context:
# Ended regions: {2}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, @ignored_mut_loan(4, proj_loans (s@2 : i32))â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, âmut@4, proj_loans (s@2 : i32)â)
  }
  abs@3{parents={}}{regions={3}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=proj_loans (s@6 : &r@3 mut (i32)); child=&mut@4 (1: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@7 (2: i32); child: âmut@7, proj_loans (s@5 : i32)â}
  }
}


[[32mDebug[39m] give_back_value:
- bid: 3
- value: s@6 : &r@3 mut (i32)
- context:
# Ended regions: {2}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, @ignored_mut_loan(4, proj_loans (s@2 : i32))â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, âmut@4, proj_loans (s@2 : i32)â)
  }
  abs@3{parents={}}{regions={3}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=proj_loans (s@6 : &r@3 mut (i32)); child=&mut@4 (1: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@7 (2: i32); child: âmut@7, proj_loans (s@5 : i32)â}
  }
}


[[32mDebug[39m] end_abstraction: 0
- context after loans ended:
# Ended regions: {2}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    @ended_mut_loan{ given_back=proj_borrows (s@6 : &r@3 mut (i32) <: &r@1 mut (i32)); child=@ignored_mut_loan(4, proj_loans (s@2 : i32)) }
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=proj_borrows (s@6 : &r@3 mut (i32) <: &r@1 mut (i32)); child: âmut@4, proj_loans (s@2 : i32)â}
  }
  abs@3{parents={}}{regions={3}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=proj_loans (s@6 : &r@3 mut (i32)); child=&mut@4 (1: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@7 (2: i32); child: âmut@7, proj_loans (s@5 : i32)â}
  }
}

[[32mDebug[39m] give_back_value:
- bid: 2
- value: s@7 : &r@1 mut (i32)
- context:
# Ended regions: {2}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    â¥ : &r@0 mut (&r@1 mut (i32)),
    @ended_mut_loan{ given_back=proj_borrows (s@6 : &r@3 mut (i32) <: &r@1 mut (i32)); child=@ignored_mut_loan(4, proj_loans (s@2 : i32)) }
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=proj_borrows (s@6 : &r@3 mut (i32) <: &r@1 mut (i32)); child: âmut@4, proj_loans (s@2 : i32)â}
  }
  abs@3{parents={}}{regions={3}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=proj_loans (s@6 : &r@3 mut (i32)); child=&mut@4 (1: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@7 (2: i32); child: âmut@7, proj_loans (s@5 : i32)â}
  }
}


[[32mDebug[39m] end_abstraction: 0
- original context:
# Ended regions: {}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (âmut@2â) ;
  Some (ppy) -> &mut@3 (âmut@5â) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> &mut@6 (&mut@7 (2: i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@0{parents={}}{regions={0}} {
    &mut@2 (@ignored_mut_borrow(None, 0: i32)),
    âmut@3, @ignored_mut_loan(4, proj_loans (s@2 : i32))â
  }
  abs@1{parents={0}}{regions={1}} {
    @ignored_mut_borrow(Some (2), &mut@0 (0: i32)),
    @ignored_mut_loan(3, âmut@4, proj_loans (s@2 : i32)â)
  }
  abs@2{parents={}}{regions={2}} {
    &mut@5 (@ignored_mut_borrow(None, 1: i32)),
    âmut@6, @ignored_mut_loan(7, proj_loans (s@5 : i32))â
  }
  abs@3{parents={2}}{regions={3}} {
    @ignored_mut_borrow(Some (5), &mut@4 (1: i32)),
    @ignored_mut_loan(6, âmut@7, proj_loans (s@5 : i32)â)
  }
}


- new context:
# Ended regions: {0, 2}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (s@7 : &r@1 mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=proj_loans (s@7 : &r@1 mut (i32)); child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=proj_borrows (s@6 : &r@3 mut (i32) <: &r@1 mut (i32)); child: âmut@4, proj_loans (s@2 : i32)â}
  }
  abs@3{parents={}}{regions={3}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=proj_loans (s@6 : &r@3 mut (i32)); child=&mut@4 (1: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@7 (2: i32); child: âmut@7, proj_loans (s@5 : i32)â}
  }
}

[[32mDebug[39m] end borrow: 1:
- original context:
# Ended regions: {0, 2}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> &mut@1 (s@7 : &r@1 mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=proj_loans (s@7 : &r@1 mut (i32)); child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=proj_borrows (s@6 : &r@3 mut (i32) <: &r@1 mut (i32)); child: âmut@4, proj_loans (s@2 : i32)â}
  }
  abs@3{parents={}}{regions={3}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=proj_loans (s@6 : &r@3 mut (i32)); child=&mut@4 (1: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@7 (2: i32); child: âmut@7, proj_loans (s@5 : i32)â}
  }
}

[[32mDebug[39m] give_back:
- bid: 1
- content: &mut@1 (s@7 : &r@1 mut (i32))
- context:
# Ended regions: {0, 2}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=proj_loans (s@7 : &r@1 mut (i32)); child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=proj_borrows (s@6 : &r@3 mut (i32) <: &r@1 mut (i32)); child: âmut@4, proj_loans (s@2 : i32)â}
  }
  abs@3{parents={}}{regions={3}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=proj_loans (s@6 : &r@3 mut (i32)); child=&mut@4 (1: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@7 (2: i32); child: âmut@7, proj_loans (s@5 : i32)â}
  }
}


[[32mDebug[39m] give_back_value:
- bid: 1
- value: s@7 : &r@1 mut (i32)
- context:
# Ended regions: {0, 2}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> âmut@1â ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=proj_loans (s@7 : &r@1 mut (i32)); child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=proj_borrows (s@6 : &r@3 mut (i32) <: &r@1 mut (i32)); child: âmut@4, proj_loans (s@2 : i32)â}
  }
  abs@3{parents={}}{regions={3}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=proj_loans (s@6 : &r@3 mut (i32)); child=&mut@4 (1: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@7 (2: i32); child: âmut@7, proj_loans (s@5 : i32)â}
  }
}


[[32mDebug[39m] expand_symbolic_value: s@7 : &r@1 mut (i32)

- original context:
# Ended regions: {0, 2}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> s@7 : &r@1 mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=proj_loans (s@7 : &r@1 mut (i32)); child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=proj_borrows (s@6 : &r@3 mut (i32) <: &r@1 mut (i32)); child: âmut@4, proj_loans (s@2 : i32)â}
  }
  abs@3{parents={}}{regions={3}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=proj_loans (s@6 : &r@3 mut (i32)); child=&mut@4 (1: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@7 (2: i32); child: âmut@7, proj_loans (s@5 : i32)â}
  }
}


- new context:
# Ended regions: {0, 2}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@8 (s@8 : i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=âmut@8, proj_loans (s@8 : i32)â; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=proj_borrows (s@6 : &r@3 mut (i32) <: &r@1 mut (i32)); child: âmut@4, proj_loans (s@2 : i32)â}
  }
  abs@3{parents={}}{regions={3}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=proj_loans (s@6 : &r@3 mut (i32)); child=&mut@4 (1: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@7 (2: i32); child: âmut@7, proj_loans (s@5 : i32)â}
  }
}


[[32mDebug[39m] 
**About to evaluate statement**: [
  var@9 := move var@10 == 2: i32;
  var@8 := Â¬ move var@9;
  assert(Â¬move var@8);
  var@13 := copy x;
  var@12 := move var@13 == 2: i32;
  var@11 := Â¬ move var@12;
  assert(Â¬move var@11);
  return
]

**Context**:
# Ended regions: {0, 2}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@8 (s@8 : i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> s@8 : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=âmut@8, proj_loans (s@8 : i32)â; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=proj_borrows (s@6 : &r@3 mut (i32) <: &r@1 mut (i32)); child: âmut@4, proj_loans (s@2 : i32)â}
  }
  abs@3{parents={}}{regions={3}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=proj_loans (s@6 : &r@3 mut (i32)); child=&mut@4 (1: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@7 (2: i32); child: âmut@7, proj_loans (s@5 : i32)â}
  }
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@9 := move var@10 == 2: i32
]

**Context**:
# Ended regions: {0, 2}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@8 (s@8 : i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> s@8 : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=âmut@8, proj_loans (s@8 : i32)â; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=proj_borrows (s@6 : &r@3 mut (i32) <: &r@1 mut (i32)); child: âmut@4, proj_loans (s@2 : i32)â}
  }
  abs@3{parents={}}{regions={3}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=proj_loans (s@6 : &r@3 mut (i32)); child=&mut@4 (1: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@7 (2: i32); child: âmut@7, proj_loans (s@5 : i32)â}
  }
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {0, 2}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@8 (s@8 : i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> s@8 : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=âmut@8, proj_loans (s@8 : i32)â; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=proj_borrows (s@6 : &r@3 mut (i32) <: &r@1 mut (i32)); child: âmut@4, proj_loans (s@2 : i32)â}
  }
  abs@3{parents={}}{regions={3}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=proj_loans (s@6 : &r@3 mut (i32)); child=&mut@4 (1: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@7 (2: i32); child: âmut@7, proj_loans (s@5 : i32)â}
  }
}


- op:
move var@10

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {0, 2}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@8 (s@8 : i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=âmut@8, proj_loans (s@8 : i32)â; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=proj_borrows (s@6 : &r@3 mut (i32) <: &r@1 mut (i32)); child: âmut@4, proj_loans (s@2 : i32)â}
  }
  abs@3{parents={}}{regions={3}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=proj_loans (s@6 : &r@3 mut (i32)); child=&mut@4 (1: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@7 (2: i32); child: âmut@7, proj_loans (s@5 : i32)â}
  }
}


- op:
2: i32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := Â¬ move var@9;
  assert(Â¬move var@8);
  var@13 := copy x;
  var@12 := move var@13 == 2: i32;
  var@11 := Â¬ move var@12;
  assert(Â¬move var@11);
  return
]

**Context**:
# Ended regions: {0, 2}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@8 (s@8 : i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> s@9 : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=âmut@8, proj_loans (s@8 : i32)â; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=proj_borrows (s@6 : &r@3 mut (i32) <: &r@1 mut (i32)); child: âmut@4, proj_loans (s@2 : i32)â}
  }
  abs@3{parents={}}{regions={3}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=proj_loans (s@6 : &r@3 mut (i32)); child=&mut@4 (1: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@7 (2: i32); child: âmut@7, proj_loans (s@5 : i32)â}
  }
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@8 := Â¬ move var@9
]

**Context**:
# Ended regions: {0, 2}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@8 (s@8 : i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> s@9 : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=âmut@8, proj_loans (s@8 : i32)â; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=proj_borrows (s@6 : &r@3 mut (i32) <: &r@1 mut (i32)); child: âmut@4, proj_loans (s@2 : i32)â}
  }
  abs@3{parents={}}{regions={3}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=proj_loans (s@6 : &r@3 mut (i32)); child=&mut@4 (1: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@7 (2: i32); child: âmut@7, proj_loans (s@5 : i32)â}
  }
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {0, 2}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@8 (s@8 : i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> s@9 : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=âmut@8, proj_loans (s@8 : i32)â; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=proj_borrows (s@6 : &r@3 mut (i32) <: &r@1 mut (i32)); child: âmut@4, proj_loans (s@2 : i32)â}
  }
  abs@3{parents={}}{regions={3}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=proj_loans (s@6 : &r@3 mut (i32)); child=&mut@4 (1: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@7 (2: i32); child: âmut@7, proj_loans (s@5 : i32)â}
  }
}


- op:
move var@9

[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@8);
  var@13 := copy x;
  var@12 := move var@13 == 2: i32;
  var@11 := Â¬ move var@12;
  assert(Â¬move var@11);
  return
]

**Context**:
# Ended regions: {0, 2}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@8 (s@8 : i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> s@10 : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=âmut@8, proj_loans (s@8 : i32)â; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=proj_borrows (s@6 : &r@3 mut (i32) <: &r@1 mut (i32)); child: âmut@4, proj_loans (s@2 : i32)â}
  }
  abs@3{parents={}}{regions={3}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=proj_loans (s@6 : &r@3 mut (i32)); child=&mut@4 (1: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@7 (2: i32); child: âmut@7, proj_loans (s@5 : i32)â}
  }
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@8)
]

**Context**:
# Ended regions: {0, 2}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@8 (s@8 : i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> s@10 : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=âmut@8, proj_loans (s@8 : i32)â; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=proj_borrows (s@6 : &r@3 mut (i32) <: &r@1 mut (i32)); child: âmut@4, proj_loans (s@2 : i32)â}
  }
  abs@3{parents={}}{regions={3}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=proj_loans (s@6 : &r@3 mut (i32)); child=&mut@4 (1: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@7 (2: i32); child: âmut@7, proj_loans (s@5 : i32)â}
  }
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {0, 2}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@8 (s@8 : i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> true ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=âmut@8, proj_loans (s@8 : i32)â; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=proj_borrows (s@6 : &r@3 mut (i32) <: &r@1 mut (i32)); child: âmut@4, proj_loans (s@2 : i32)â}
  }
  abs@3{parents={}}{regions={3}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=proj_loans (s@6 : &r@3 mut (i32)); child=&mut@4 (1: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@7 (2: i32); child: âmut@7, proj_loans (s@5 : i32)â}
  }
}


- op:
move var@8

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@13 := copy x;
  var@12 := move var@13 == 2: i32;
  var@11 := Â¬ move var@12;
  assert(Â¬move var@11);
  return
]

**Context**:
# Ended regions: {0, 2}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@8 (s@8 : i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=âmut@8, proj_loans (s@8 : i32)â; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=proj_borrows (s@6 : &r@3 mut (i32) <: &r@1 mut (i32)); child: âmut@4, proj_loans (s@2 : i32)â}
  }
  abs@3{parents={}}{regions={3}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=proj_loans (s@6 : &r@3 mut (i32)); child=&mut@4 (1: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@7 (2: i32); child: âmut@7, proj_loans (s@5 : i32)â}
  }
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@13 := copy x
]

**Context**:
# Ended regions: {0, 2}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@8 (s@8 : i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=âmut@8, proj_loans (s@8 : i32)â; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=proj_borrows (s@6 : &r@3 mut (i32) <: &r@1 mut (i32)); child: âmut@4, proj_loans (s@2 : i32)â}
  }
  abs@3{parents={}}{regions={3}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=proj_loans (s@6 : &r@3 mut (i32)); child=&mut@4 (1: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@7 (2: i32); child: âmut@7, proj_loans (s@5 : i32)â}
  }
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {0, 2}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@8 (s@8 : i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=âmut@8, proj_loans (s@8 : i32)â; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=proj_borrows (s@6 : &r@3 mut (i32) <: &r@1 mut (i32)); child: âmut@4, proj_loans (s@2 : i32)â}
  }
  abs@3{parents={}}{regions={3}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=proj_loans (s@6 : &r@3 mut (i32)); child=&mut@4 (1: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@7 (2: i32); child: âmut@7, proj_loans (s@5 : i32)â}
  }
}


- op:
copy x

[[32mDebug[39m] end borrow: 0:
- original context:
# Ended regions: {0, 2}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@8 (s@8 : i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=âmut@8, proj_loans (s@8 : i32)â; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=proj_borrows (s@6 : &r@3 mut (i32) <: &r@1 mut (i32)); child: âmut@4, proj_loans (s@2 : i32)â}
  }
  abs@3{parents={}}{regions={3}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=proj_loans (s@6 : &r@3 mut (i32)); child=&mut@4 (1: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@7 (2: i32); child: âmut@7, proj_loans (s@5 : i32)â}
  }
}

[[32mDebug[39m] end borrow: 0: found outer borrows/abs:(InterpreterBorrowsCore.OuterAbs 1)
[[32mDebug[39m] end_abstraction: 1
- original context:
# Ended regions: {0, 2}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@8 (s@8 : i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=âmut@8, proj_loans (s@8 : i32)â; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=proj_borrows (s@6 : &r@3 mut (i32) <: &r@1 mut (i32)); child: âmut@4, proj_loans (s@2 : i32)â}
  }
  abs@3{parents={}}{regions={3}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=proj_loans (s@6 : &r@3 mut (i32)); child=&mut@4 (1: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@7 (2: i32); child: âmut@7, proj_loans (s@5 : i32)â}
  }
}

[[32mDebug[39m] end_abstraction: 1
- context after parent abstractions ended:
# Ended regions: {0, 2}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@8 (s@8 : i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=âmut@8, proj_loans (s@8 : i32)â; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=proj_borrows (s@6 : &r@3 mut (i32) <: &r@1 mut (i32)); child: âmut@4, proj_loans (s@2 : i32)â}
  }
  abs@3{parents={}}{regions={3}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=proj_loans (s@6 : &r@3 mut (i32)); child=&mut@4 (1: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@7 (2: i32); child: âmut@7, proj_loans (s@5 : i32)â}
  }
}

[[32mDebug[39m] end borrow: 8:
- original context:
# Ended regions: {0, 2}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@8 (s@8 : i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=âmut@8, proj_loans (s@8 : i32)â; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=proj_borrows (s@6 : &r@3 mut (i32) <: &r@1 mut (i32)); child: âmut@4, proj_loans (s@2 : i32)â}
  }
  abs@3{parents={}}{regions={3}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=proj_loans (s@6 : &r@3 mut (i32)); child=&mut@4 (1: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@7 (2: i32); child: âmut@7, proj_loans (s@5 : i32)â}
  }
}

[[32mDebug[39m] give_back:
- bid: 8
- content: &mut@8 (s@8 : i32)
- context:
# Ended regions: {0, 2}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=âmut@8, proj_loans (s@8 : i32)â; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=proj_borrows (s@6 : &r@3 mut (i32) <: &r@1 mut (i32)); child: âmut@4, proj_loans (s@2 : i32)â}
  }
  abs@3{parents={}}{regions={3}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=proj_loans (s@6 : &r@3 mut (i32)); child=&mut@4 (1: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@7 (2: i32); child: âmut@7, proj_loans (s@5 : i32)â}
  }
}


[[32mDebug[39m] give_back_value:
- bid: 8
- value: s@8 : i32
- context:
# Ended regions: {0, 2}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=âmut@8, proj_loans (s@8 : i32)â; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=proj_borrows (s@6 : &r@3 mut (i32) <: &r@1 mut (i32)); child: âmut@4, proj_loans (s@2 : i32)â}
  }
  abs@3{parents={}}{regions={3}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=proj_loans (s@6 : &r@3 mut (i32)); child=&mut@4 (1: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@7 (2: i32); child: âmut@7, proj_loans (s@5 : i32)â}
  }
}


[[32mDebug[39m] end borrow: 4:
- original context:
# Ended regions: {0, 2}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=@ended_mut_loan{ given_back=proj_borrows (s@8 : i32 <: i32); child=proj_loans (s@8 : i32) }; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=proj_borrows (s@6 : &r@3 mut (i32) <: &r@1 mut (i32)); child: âmut@4, proj_loans (s@2 : i32)â}
  }
  abs@3{parents={}}{regions={3}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=proj_loans (s@6 : &r@3 mut (i32)); child=&mut@4 (1: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@7 (2: i32); child: âmut@7, proj_loans (s@5 : i32)â}
  }
}

[[32mDebug[39m] end borrow: 4: found outer borrows/abs:(InterpreterBorrowsCore.OuterAbs 3)
[[32mDebug[39m] end_abstraction: 3
- original context:
# Ended regions: {0, 2}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=@ended_mut_loan{ given_back=proj_borrows (s@8 : i32 <: i32); child=proj_loans (s@8 : i32) }; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=proj_borrows (s@6 : &r@3 mut (i32) <: &r@1 mut (i32)); child: âmut@4, proj_loans (s@2 : i32)â}
  }
  abs@3{parents={}}{regions={3}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=proj_loans (s@6 : &r@3 mut (i32)); child=&mut@4 (1: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@7 (2: i32); child: âmut@7, proj_loans (s@5 : i32)â}
  }
}

[[32mDebug[39m] end_abstraction: 3
- context after parent abstractions ended:
# Ended regions: {0, 2}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=@ended_mut_loan{ given_back=proj_borrows (s@8 : i32 <: i32); child=proj_loans (s@8 : i32) }; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=proj_borrows (s@6 : &r@3 mut (i32) <: &r@1 mut (i32)); child: âmut@4, proj_loans (s@2 : i32)â}
  }
  abs@3{parents={}}{regions={3}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=proj_loans (s@6 : &r@3 mut (i32)); child=&mut@4 (1: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@7 (2: i32); child: âmut@7, proj_loans (s@5 : i32)â}
  }
}

[[32mDebug[39m] end borrow: 7:
- original context:
# Ended regions: {0, 2}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=@ended_mut_loan{ given_back=proj_borrows (s@8 : i32 <: i32); child=proj_loans (s@8 : i32) }; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=proj_borrows (s@6 : &r@3 mut (i32) <: &r@1 mut (i32)); child: âmut@4, proj_loans (s@2 : i32)â}
  }
  abs@3{parents={}}{regions={3}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=proj_loans (s@6 : &r@3 mut (i32)); child=&mut@4 (1: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@7 (2: i32); child: âmut@7, proj_loans (s@5 : i32)â}
  }
}

[[32mDebug[39m] end borrow: 7: found outer borrows/abs:(InterpreterBorrowsCore.OuterAbs 3)
[[32mDebug[39m] end borrow: 7:
- original context:
# Ended regions: {0, 2}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=@ended_mut_loan{ given_back=proj_borrows (s@8 : i32 <: i32); child=proj_loans (s@8 : i32) }; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=proj_borrows (s@6 : &r@3 mut (i32) <: &r@1 mut (i32)); child: âmut@4, proj_loans (s@2 : i32)â}
  }
  abs@3{parents={}}{regions={3}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=proj_loans (s@6 : &r@3 mut (i32)); child=&mut@4 (1: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@7 (2: i32); child: âmut@7, proj_loans (s@5 : i32)â}
  }
}

[[32mDebug[39m] give_back:
- bid: 7
- content: &mut@7 (2: i32)
- context:
# Ended regions: {0, 2}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=@ended_mut_loan{ given_back=proj_borrows (s@8 : i32 <: i32); child=proj_loans (s@8 : i32) }; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=proj_borrows (s@6 : &r@3 mut (i32) <: &r@1 mut (i32)); child: âmut@4, proj_loans (s@2 : i32)â}
  }
  abs@3{parents={}}{regions={3}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=proj_loans (s@6 : &r@3 mut (i32)); child=&mut@4 (1: i32)),
    @ended_ignored_mut_loan{ given_back=â¥ : &r@3 mut (i32); child: âmut@7, proj_loans (s@5 : i32)â}
  }
}


[[32mDebug[39m] end_abstraction: 3
- context after loans ended:
# Ended regions: {0, 2}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=@ended_mut_loan{ given_back=proj_borrows (s@8 : i32 <: i32); child=proj_loans (s@8 : i32) }; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=proj_borrows (s@6 : &r@3 mut (i32) <: &r@1 mut (i32)); child: âmut@4, proj_loans (s@2 : i32)â}
  }
  abs@3{parents={}}{regions={3}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=proj_loans (s@6 : &r@3 mut (i32)); child=&mut@4 (1: i32)),
    @ended_ignored_mut_loan{ given_back=â¥ : &r@3 mut (i32); child: @ended_mut_loan{ given_back=2: i32; child=proj_loans (s@5 : i32) }}
  }
}

[[32mDebug[39m] give_back_value:
- bid: 4
- value: s@11 : i32
- context:
# Ended regions: {0, 2}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=@ended_mut_loan{ given_back=proj_borrows (s@8 : i32 <: i32); child=proj_loans (s@8 : i32) }; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=proj_borrows (s@6 : &r@3 mut (i32) <: &r@1 mut (i32)); child: âmut@4, proj_loans (s@2 : i32)â}
  }
  abs@3{parents={}}{regions={3}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=proj_loans (s@6 : &r@3 mut (i32)); child=â¥ : &r@3 mut (i32)),
    @ended_ignored_mut_loan{ given_back=â¥ : &r@3 mut (i32); child: @ended_mut_loan{ given_back=2: i32; child=proj_loans (s@5 : i32) }}
  }
}


[[32mDebug[39m] end_abstraction: 3
- original context:
# Ended regions: {0, 2}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=@ended_mut_loan{ given_back=proj_borrows (s@8 : i32 <: i32); child=proj_loans (s@8 : i32) }; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=proj_borrows (s@6 : &r@3 mut (i32) <: &r@1 mut (i32)); child: âmut@4, proj_loans (s@2 : i32)â}
  }
  abs@3{parents={}}{regions={3}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=proj_loans (s@6 : &r@3 mut (i32)); child=&mut@4 (1: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@7 (2: i32); child: âmut@7, proj_loans (s@5 : i32)â}
  }
}


- new context:
# Ended regions: {0, 2, 3}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=@ended_mut_loan{ given_back=proj_borrows (s@8 : i32 <: i32); child=proj_loans (s@8 : i32) }; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=proj_borrows (s@6 : &r@3 mut (i32) <: &r@1 mut (i32)); child: @ended_mut_loan{ given_back=proj_borrows (s@11 : i32 <: i32); child=proj_loans (s@2 : i32) }}
  }
}

[[32mDebug[39m] end_abstraction: 1
- context after loans ended:
# Ended regions: {0, 2, 3}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=@ended_mut_loan{ given_back=proj_borrows (s@8 : i32 <: i32); child=proj_loans (s@8 : i32) }; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=proj_borrows (s@6 : &r@3 mut (i32) <: &r@1 mut (i32)); child: @ended_mut_loan{ given_back=proj_borrows (s@11 : i32 <: i32); child=proj_loans (s@2 : i32) }}
  }
}

[[32mDebug[39m] give_back_value:
- bid: 0
- value: s@12 : i32
- context:
# Ended regions: {0, 2, 3}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=@ended_mut_loan{ given_back=proj_borrows (s@8 : i32 <: i32); child=proj_loans (s@8 : i32) }; child=â¥ : &r@1 mut (i32)),
    @ended_ignored_mut_loan{ given_back=proj_borrows (s@6 : &r@3 mut (i32) <: &r@1 mut (i32)); child: @ended_mut_loan{ given_back=proj_borrows (s@11 : i32 <: i32); child=proj_loans (s@2 : i32) }}
  }
}


[[32mDebug[39m] end_abstraction: 1
- original context:
# Ended regions: {0, 2}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> âmut@0â ;
  Some (px) -> &mut@8 (s@8 : i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
  abs@1{parents={}}{regions={1}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=âmut@8, proj_loans (s@8 : i32)â; child=&mut@0 (0: i32)),
    @ended_ignored_mut_loan{ given_back=proj_borrows (s@6 : &r@3 mut (i32) <: &r@1 mut (i32)); child: âmut@4, proj_loans (s@2 : i32)â}
  }
  abs@3{parents={}}{regions={3}} {
    @ended_ignored_mut_borrow{ given_back_loans_proj=proj_loans (s@6 : &r@3 mut (i32)); child=&mut@4 (1: i32)),
    @ended_ignored_mut_loan{ given_back=&mut@7 (2: i32); child: âmut@7, proj_loans (s@5 : i32)â}
  }
}


- new context:
# Ended regions: {0, 1, 2, 3}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@12 : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
}

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@12 := move var@13 == 2: i32;
  var@11 := Â¬ move var@12;
  assert(Â¬move var@11);
  return
]

**Context**:
# Ended regions: {0, 1, 2, 3}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@12 : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> s@12 : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@12 := move var@13 == 2: i32
]

**Context**:
# Ended regions: {0, 1, 2, 3}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@12 : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> s@12 : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {0, 1, 2, 3}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@12 : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> s@12 : i32 ;
}


- op:
move var@13

[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {0, 1, 2, 3}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@12 : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
}


- op:
2: i32

[[32mDebug[39m] 
**About to evaluate statement**: [
  var@11 := Â¬ move var@12;
  assert(Â¬move var@11);
  return
]

**Context**:
# Ended regions: {0, 1, 2, 3}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@12 : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> s@13 : bool ;
  Some (var@13) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  var@11 := Â¬ move var@12
]

**Context**:
# Ended regions: {0, 1, 2, 3}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@12 : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> s@13 : bool ;
  Some (var@13) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {0, 1, 2, 3}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@12 : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> s@13 : bool ;
  Some (var@13) -> â¥ : i32 ;
}


- op:
move var@12

[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@11);
  return
]

**Context**:
# Ended regions: {0, 1, 2, 3}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@12 : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> s@14 : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
}



[[32mDebug[39m] 
**About to evaluate statement**: [
  assert(Â¬move var@11)
]

**Context**:
# Ended regions: {0, 1, 2, 3}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@12 : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> s@14 : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
}



[[32mDebug[39m] eval_operand:
- ctx:
# Ended regions: {0, 1, 2, 3}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@12 : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> true ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
}


- op:
move var@11

[[32mDebug[39m] 
**About to evaluate statement**: [
  return
]

**Context**:
# Ended regions: {0, 1, 2, 3}
# 1 frame(s)

# Frame 0:
{
  Some (var@0) -> â¥ : () ;
  Some (x) -> s@12 : i32 ;
  Some (px) -> â¥ : &'_ mut (i32) ;
  Some (ppx) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppy) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@5) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (ppz) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@7) -> â¥ : &'_ mut (&'_ mut (i32)) ;
  Some (var@8) -> â¥ : bool ;
  Some (var@9) -> â¥ : bool ;
  Some (var@10) -> â¥ : i32 ;
  Some (var@11) -> â¥ : bool ;
  Some (var@12) -> â¥ : bool ;
  Some (var@13) -> â¥ : i32 ;
}




(** THIS FILE WAS AUTOMATICALLY GENERATED BY AENEAS *)
(** [blanket_impl] *)
module BlanketImpl
open Primitives

#set-options "--z3rlimit 50 --fuel 1 --ifuel 1"

(** Trait declaration: [blanket_impl::Trait1]
    Source: 'tests/src/blanket_impl.rs', lines 3:0-3:15 *)
type trait1_t (self : Type0) = unit

(** Trait declaration: [blanket_impl::Trait2]
    Source: 'tests/src/blanket_impl.rs', lines 4:0-6:1 *)
noeq type trait2_t (self : Type0) = { foo : result unit; }

(** [blanket_impl::{blanket_impl::Trait2 for T}::foo]:
    Source: 'tests/src/blanket_impl.rs', lines 5:4-5:15 *)
let trait2_Blanket_foo (#t : Type0) (trait1Inst : trait1_t t) : result unit =
  Ok ()

(** Trait implementation: [blanket_impl::{blanket_impl::Trait2 for T}]
    Source: 'tests/src/blanket_impl.rs', lines 9:0-9:31 *)
let trait2_Blanket (#t : Type0) (trait1Inst : trait1_t t) : trait2_t t = {
  foo = trait2_Blanket_foo trait1Inst;
}

(** [blanket_impl::Trait2::foo]:
    Source: 'tests/src/blanket_impl.rs', lines 5:4-5:15 *)
let trait2_foo_default (self : Type0) : result unit =
  Ok ()


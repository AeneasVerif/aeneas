(** THIS FILE WAS AUTOMATICALLY GENERATED BY AENEAS *)
(** [issue_270_loop_list] *)
module Issue270LoopList
open Primitives

#set-options "--z3rlimit 50 --fuel 1 --ifuel 1"

(** [issue_270_loop_list::List]
    Source: 'tests/src/issue-270-loop-list.rs', lines 2:0-5:1 *)
type list_t (t : Type0) =
| List_Cons : t -> list_t t -> list_t t
| List_Nil : list_t t

(** [issue_270_loop_list::foo]: loop 0:
    Source: 'tests/src/issue-270-loop-list.rs', lines 10:8-12:9 *)
let rec foo_loop (t : list_t (list_t u8)) : result unit =
  begin match t with | List_Cons _ tt -> foo_loop tt | List_Nil -> Ok () end

(** [issue_270_loop_list::foo]:
    Source: 'tests/src/issue-270-loop-list.rs', lines 7:0-14:1 *)
let foo (v : list_t (list_t u8)) : result unit =
  begin match v with | List_Cons _ t -> foo_loop t | List_Nil -> Ok () end


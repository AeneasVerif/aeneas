(** THIS FILE WAS AUTOMATICALLY GENERATED BY AENEAS *)
(** [external]: external function declarations *)
module External.FunsExternal
open Primitives
include External.Types

#set-options "--z3rlimit 50 --fuel 1 --ifuel 1"

(** [core::cell::{core::cell::Cell<T>}#10::get]:
    Source: '/rustc/library/core/src/cell.rs', lines 540:4-540:32
    Name pattern: core::cell::{core::cell::Cell<@T>}::get *)
val core_cell_Cell_get
  (#t : Type0) (markerCopyInst : core_marker_Copy_t t) :
  core_cell_Cell_t t -> state -> result (state & t)

(** [core::cell::{core::cell::Cell<T>}#11::get_mut]:
    Source: '/rustc/library/core/src/cell.rs', lines 619:4-619:45
    Name pattern: core::cell::{core::cell::Cell<@T>}::get_mut *)
val core_cell_Cell_get_mut
  (#t : Type0) :
  core_cell_Cell_t t -> state -> result (state & (t & (t -> state -> result
    (state & (core_cell_Cell_t t)))))

(** [core::clone::Clone::clone_from]:
    Source: '/rustc/library/core/src/clone.rs', lines 174:4-174:43
    Name pattern: core::clone::Clone::clone_from *)
val core_clone_Clone_clone_from
  (#self : Type0) (self_clause : core_clone_Clone self) :
  self -> self -> state -> result (state & self)


(** THIS FILE WAS AUTOMATICALLY GENERATED BY AENEAS *)
(** [hashmap]: templates for the decreases clauses *)
module Hashmap.Clauses.Template
open Primitives
open Hashmap.Types

#set-options "--z3rlimit 50 --fuel 1 --ifuel 1"

(** [hashmap::{hashmap::HashMap<T>}::allocate_slots]: decreases clause
    Source: 'tests/src/hashmap.rs', lines 69:8-72:9 *)
unfold
let hashMap_allocate_slots_loop_decreases (#t : Type0)
  (slots : alloc_vec_Vec (aList_t t)) (n : usize) : nat =
  admit ()

(** [hashmap::{hashmap::HashMap<T>}::clear]: decreases clause
    Source: 'tests/src/hashmap.rs', lines 105:8-108:9 *)
unfold
let hashMap_clear_loop_decreases (#t : Type0)
  (slots : alloc_vec_Vec (aList_t t)) (i : usize) : nat =
  admit ()

(** [hashmap::{hashmap::HashMap<T>}::insert_in_list]: decreases clause
    Source: 'tests/src/hashmap.rs', lines 1:0-134:9 *)
unfold
let hashMap_insert_in_list_loop_decreases (#t : Type0) (key : usize)
  (value : t) (ls : aList_t t) : nat =
  admit ()

(** [hashmap::{hashmap::HashMap<T>}::move_elements_from_list]: decreases clause
    Source: 'tests/src/hashmap.rs', lines 200:12-207:17 *)
unfold
let hashMap_move_elements_from_list_loop_decreases (#t : Type0)
  (ntable : hashMap_t t) (ls : aList_t t) : nat =
  admit ()

(** [hashmap::{hashmap::HashMap<T>}::move_elements]: decreases clause
    Source: 'tests/src/hashmap.rs', lines 186:8-193:9 *)
unfold
let hashMap_move_elements_loop_decreases (#t : Type0) (ntable : hashMap_t t)
  (slots : alloc_vec_Vec (aList_t t)) (i : usize) : nat =
  admit ()

(** [hashmap::{hashmap::HashMap<T>}::contains_key_in_list]: decreases clause
    Source: 'tests/src/hashmap.rs', lines 1:0-232:9 *)
unfold
let hashMap_contains_key_in_list_loop_decreases (#t : Type0) (key : usize)
  (ls : aList_t t) : nat =
  admit ()

(** [hashmap::{hashmap::HashMap<T>}::get_in_list]: decreases clause
    Source: 'tests/src/hashmap.rs', lines 239:8-247:5 *)
unfold
let hashMap_get_in_list_loop_decreases (#t : Type0) (key : usize)
  (ls : aList_t t) : nat =
  admit ()

(** [hashmap::{hashmap::HashMap<T>}::get_mut_in_list]: decreases clause
    Source: 'tests/src/hashmap.rs', lines 256:8-264:5 *)
unfold
let hashMap_get_mut_in_list_loop_decreases (#t : Type0) (ls : aList_t t)
  (key : usize) : nat =
  admit ()

(** [hashmap::{hashmap::HashMap<T>}::remove_from_list]: decreases clause
    Source: 'tests/src/hashmap.rs', lines 1:0-298:17 *)
unfold
let hashMap_remove_from_list_loop_decreases (#t : Type0) (key : usize)
  (ls : aList_t t) : nat =
  admit ()


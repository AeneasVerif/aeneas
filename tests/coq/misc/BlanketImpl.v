(** THIS FILE WAS AUTOMATICALLY GENERATED BY AENEAS *)
(** [blanket_impl] *)
Require Import Primitives.
Import Primitives.
Require Import Coq.ZArith.ZArith.
Require Import List.
Import ListNotations.
Local Open Scope Primitives_scope.
Module BlanketImpl.

(** Trait declaration: [core::iter::traits::iterator::Iterator]
    Source: '/rustc/library/core/src/iter/traits/iterator.rs', lines 39:0-39:18
    Name pattern: core::iter::traits::iterator::Iterator *)
Record core_iter_traits_iterator_Iterator_t (Self : Type) (Self_Item : Type)
  := mkcore_iter_traits_iterator_Iterator_t {
  core_iter_traits_iterator_Iterator_t_next : Self -> result ((option
    Self_Item) * Self);
}.

Arguments mkcore_iter_traits_iterator_Iterator_t { _ } { _ }.
Arguments core_iter_traits_iterator_Iterator_t_next { _ } { _ } _.

(** [core::iter::traits::collect::{core::iter::traits::collect::IntoIterator<Clause1_Item, I> for I}#1::into_iter]:
    Source: '/rustc/library/core/src/iter/traits/collect.rs', lines 356:4-356:27
    Name pattern: core::iter::traits::collect::{core::iter::traits::collect::IntoIterator<@I, @Clause1_Item, @I>}::into_iter *)
Axiom core_iter_traits_collect_IntoIterator_into_iter :
  forall{I : Type} {Clause1_Item : Type} (iteratorIteratorInst :
        core_iter_traits_iterator_Iterator_t I Clause1_Item),
        I -> result I
.

(** Trait declaration: [core::cmp::PartialEq]
    Source: '/rustc/library/core/src/cmp.rs', lines 248:0-248:39
    Name pattern: core::cmp::PartialEq *)
Record core_cmp_PartialEq_t (Self : Type) (Rhs : Type)
  := mkcore_cmp_PartialEq_t {
  core_cmp_PartialEq_t_eq : Self -> Rhs -> result bool;
}.

Arguments mkcore_cmp_PartialEq_t { _ } { _ }.
Arguments core_cmp_PartialEq_t_eq { _ } { _ } _.

(** [core::cmp::Ordering]
    Source: '/rustc/library/core/src/cmp.rs', lines 387:0-387:17
    Name pattern: core::cmp::Ordering *)
Inductive core_cmp_Ordering_t :=
| Core_cmp_Ordering_Less : core_cmp_Ordering_t
| Core_cmp_Ordering_Equal : core_cmp_Ordering_t
| Core_cmp_Ordering_Greater : core_cmp_Ordering_t
.

(** Trait declaration: [core::cmp::PartialOrd]
    Source: '/rustc/library/core/src/cmp.rs', lines 1293:0-1293:56
    Name pattern: core::cmp::PartialOrd *)
Record core_cmp_PartialOrd_t (Self : Type) (Rhs : Type)
  := mkcore_cmp_PartialOrd_t {
  core_cmp_PartialOrd_tcore_cmp_PartialOrd_t_PartialEqInst :
    core_cmp_PartialEq_t Self Rhs;
  core_cmp_PartialOrd_t_partial_cmp : Self -> Rhs -> result (option
    core_cmp_Ordering_t);
}.

Arguments mkcore_cmp_PartialOrd_t { _ } { _ }.
Arguments core_cmp_PartialOrd_tcore_cmp_PartialOrd_t_PartialEqInst { _ } { _ }
  _.
Arguments core_cmp_PartialOrd_t_partial_cmp { _ } { _ } _.

(** Trait declaration: [core::iter::range::Step]
    Source: '/rustc/library/core/src/iter/range.rs', lines 24:0-24:42
    Name pattern: core::iter::range::Step *)
Record core_iter_range_Step_t (Self : Type) := mkcore_iter_range_Step_t {
  core_iter_range_Step_tcore_iter_range_Step_t_cloneCloneInst :
    core_clone_Clone Self;
  core_iter_range_Step_tcore_iter_range_Step_t_cmpPartialOrdInst :
    core_cmp_PartialOrd_t Self Self;
  core_iter_range_Step_t_steps_between : Self -> Self -> result (option usize);
  core_iter_range_Step_t_forward_checked : Self -> usize -> result (option
    Self);
  core_iter_range_Step_t_backward_checked : Self -> usize -> result (option
    Self);
}.

Arguments mkcore_iter_range_Step_t { _ }.
Arguments core_iter_range_Step_tcore_iter_range_Step_t_cloneCloneInst { _ } _.
Arguments core_iter_range_Step_tcore_iter_range_Step_t_cmpPartialOrdInst { _ }
  _.
Arguments core_iter_range_Step_t_steps_between { _ } _.
Arguments core_iter_range_Step_t_forward_checked { _ } _.
Arguments core_iter_range_Step_t_backward_checked { _ } _.

(** [core::iter::range::{core::iter::traits::iterator::Iterator<A> for core::ops::range::Range<A>}#6::next]:
    Source: '/rustc/library/core/src/iter/range.rs', lines 842:4-842:35
    Name pattern: core::iter::range::{core::iter::traits::iterator::Iterator<core::ops::range::Range<@A>, @A>}::next *)
Axiom core_iter_range_IteratorcoreopsrangeRangeA_next :
  forall{A : Type} (stepInst : core_iter_range_Step_t A),
        core_ops_range_Range A -> result ((option A) * (core_ops_range_Range
          A))
.

(** Trait implementation: [core::iter::range::{core::iter::traits::iterator::Iterator<A> for core::ops::range::Range<A>}#6]
    Source: '/rustc/library/core/src/iter/range.rs', lines 838:0-838:40
    Name pattern: core::iter::traits::iterator::Iterator<core::ops::range::Range<@A>, @A> *)
Definition core_iter_traits_iterator_IteratorcoreopsrangeRangeA {A : Type}
  (stepInst : core_iter_range_Step_t A) : core_iter_traits_iterator_Iterator_t
  (core_ops_range_Range A) A := {|
  core_iter_traits_iterator_Iterator_t_next :=
    core_iter_range_IteratorcoreopsrangeRangeA_next stepInst;
|}.

(** [core::cmp::impls::{core::cmp::PartialEq<i32> for i32}#30::eq]:
    Source: '/rustc/library/core/src/cmp.rs', lines 1636:16-1636:48
    Name pattern: core::cmp::impls::{core::cmp::PartialEq<i32, i32>}::eq *)
Axiom core_cmp_impls_PartialEqI32I32_eq : i32 -> i32 -> result bool.

(** [core::cmp::impls::{core::cmp::PartialOrd<i32> for i32}#76::partial_cmp]:
    Source: '/rustc/library/core/src/cmp.rs', lines 1716:16-1716:69
    Name pattern: core::cmp::impls::{core::cmp::PartialOrd<i32, i32>}::partial_cmp *)
Axiom core_cmp_impls_PartialOrdI32I32_partial_cmp
  : i32 -> i32 -> result (option core_cmp_Ordering_t)
.

(** [core::iter::range::{core::iter::range::Step for i32}#40::steps_between]:
    Source: '/rustc/library/core/src/iter/range.rs', lines 297:16-297:75
    Name pattern: core::iter::range::{core::iter::range::Step<i32>}::steps_between *)
Axiom core_iter_range_StepI32_steps_between
  : i32 -> i32 -> result (option usize)
.

(** [core::iter::range::{core::iter::range::Step for i32}#40::forward_checked]:
    Source: '/rustc/library/core/src/iter/range.rs', lines 311:16-311:73
    Name pattern: core::iter::range::{core::iter::range::Step<i32>}::forward_checked *)
Axiom core_iter_range_StepI32_forward_checked
  : i32 -> usize -> result (option i32)
.

(** [core::iter::range::{core::iter::range::Step for i32}#40::backward_checked]:
    Source: '/rustc/library/core/src/iter/range.rs', lines 332:16-332:74
    Name pattern: core::iter::range::{core::iter::range::Step<i32>}::backward_checked *)
Axiom core_iter_range_StepI32_backward_checked
  : i32 -> usize -> result (option i32)
.

(** Trait implementation: [core::iter::range::{core::iter::range::Step for i32}#40]
    Source: '/rustc/library/core/src/iter/range.rs', lines 292:12-292:37
    Name pattern: core::iter::range::Step<i32> *)
Definition core_iter_range_StepI32 : core_iter_range_Step_t i32 := {|
  core_iter_range_Step_tcore_iter_range_Step_t_cloneCloneInst :=
    core_clone_CloneI32;
  core_iter_range_Step_tcore_iter_range_Step_t_cmpPartialOrdInst :=
    core_cmp_PartialOrdI32;
  core_iter_range_Step_t_steps_between :=
    core_iter_range_StepI32_steps_between;
  core_iter_range_Step_t_forward_checked :=
    core_iter_range_StepI32_forward_checked;
  core_iter_range_Step_t_backward_checked :=
    core_iter_range_StepI32_backward_checked;
|}.

(** [blanket_impl::main]:
    Source: 'tests/src/blanket_impl.rs', lines 2:0-5:1 *)
Definition main : result unit :=
  _ <-
    core_iter_traits_collect_IntoIterator_into_iter
      (core_iter_traits_iterator_IteratorcoreopsrangeRangeA
      core_iter_range_StepI32)
      {|
        core_ops_range_Range_start := 0%i32; core_ops_range_Range_end_ := 1%i32
      |};
  Ok tt
.

(** Trait declaration: [core::iter::traits::collect::IntoIterator]
    Source: '/rustc/library/core/src/iter/traits/collect.rs', lines 318:0-318:22
    Name pattern: core::iter::traits::collect::IntoIterator *)
Record core_iter_traits_collect_IntoIterator_t (Self : Type) (Self_Item : Type)
  (Self_IntoIter : Type) := mkcore_iter_traits_collect_IntoIterator_t {
  core_iter_traits_collect_IntoIterator_tcore_iter_traits_collect_IntoIterator_t_iteratorIteratorInst
    : core_iter_traits_iterator_Iterator_t Self_IntoIter Self_Item;
  core_iter_traits_collect_IntoIterator_t_into_iter : Self -> result
    Self_IntoIter;
}.

Arguments mkcore_iter_traits_collect_IntoIterator_t { _ } { _ } { _ }.
Arguments
  core_iter_traits_collect_IntoIterator_tcore_iter_traits_collect_IntoIterator_t_iteratorIteratorInst
  { _ } { _ } { _ } _.
Arguments core_iter_traits_collect_IntoIterator_t_into_iter { _ } { _ } { _ }
  _.

(** Trait implementation: [core::iter::traits::collect::{core::iter::traits::collect::IntoIterator<Clause1_Item, I> for I}#1]
    Source: '/rustc/library/core/src/iter/traits/collect.rs', lines 351:0-351:36
    Name pattern: core::iter::traits::collect::IntoIterator<@I, @Clause1_Item, @I> *)
Definition core_iter_traits_collect_IntoIterator_blanket {I : Type}
  {Clause1_Item : Type} (iteratorIteratorInst :
  core_iter_traits_iterator_Iterator_t I Clause1_Item) :
  core_iter_traits_collect_IntoIterator_t I Clause1_Item I := {|
  core_iter_traits_collect_IntoIterator_tcore_iter_traits_collect_IntoIterator_t_iteratorIteratorInst
    := iteratorIteratorInst;
  core_iter_traits_collect_IntoIterator_t_into_iter :=
    core_iter_traits_collect_IntoIterator_into_iter iteratorIteratorInst;
|}.

(** Trait declaration: [core::cmp::Eq]
    Source: '/rustc/library/core/src/cmp.rs', lines 334:0-334:29
    Name pattern: core::cmp::Eq *)
Record core_cmp_Eq_t (Self : Type) := mkcore_cmp_Eq_t {
  core_cmp_Eq_tcore_cmp_Eq_t_PartialEqInst : core_cmp_PartialEq_t Self Self;
}.

Arguments mkcore_cmp_Eq_t { _ }.
Arguments core_cmp_Eq_tcore_cmp_Eq_t_PartialEqInst { _ } _.

(** Trait declaration: [core::cmp::Ord]
    Source: '/rustc/library/core/src/cmp.rs', lines 946:0-946:36
    Name pattern: core::cmp::Ord *)
Record core_cmp_Ord_t (Self : Type) := mkcore_cmp_Ord_t {
  core_cmp_Ord_tcore_cmp_Ord_t_EqInst : core_cmp_Eq_t Self;
  core_cmp_Ord_tcore_cmp_Ord_t_PartialOrdInst : core_cmp_PartialOrd_t Self
    Self;
  core_cmp_Ord_t_cmp : Self -> Self -> result core_cmp_Ordering_t;
}.

Arguments mkcore_cmp_Ord_t { _ }.
Arguments core_cmp_Ord_tcore_cmp_Ord_t_EqInst { _ } _.
Arguments core_cmp_Ord_tcore_cmp_Ord_t_PartialOrdInst { _ } _.
Arguments core_cmp_Ord_t_cmp { _ } _.

(** Trait declaration: [core::iter::adapters::zip::TrustedRandomAccessNoCoerce]
    Source: '/rustc/library/core/src/iter/adapters/zip.rs', lines 593:0-593:51
    Name pattern: core::iter::adapters::zip::TrustedRandomAccessNoCoerce *)
Record core_iter_adapters_zip_TrustedRandomAccessNoCoerce_t (Self : Type)
  := mkcore_iter_adapters_zip_TrustedRandomAccessNoCoerce_t {
  core_iter_adapters_zip_TrustedRandomAccessNoCoerce_tcore_iter_adapters_zip_TrustedRandomAccessNoCoerce_t_MAY_HAVE_SIDE_EFFECT
    : bool;
}.

Arguments mkcore_iter_adapters_zip_TrustedRandomAccessNoCoerce_t { _ }.
Arguments
  core_iter_adapters_zip_TrustedRandomAccessNoCoerce_tcore_iter_adapters_zip_TrustedRandomAccessNoCoerce_t_MAY_HAVE_SIDE_EFFECT
  { _ } _.

(** Trait declaration: [core::ops::function::FnOnce]
    Source: '/rustc/library/core/src/ops/function.rs', lines 242:0-242:29
    Name pattern: core::ops::function::FnOnce *)
Record core_ops_function_FnOnce_t (Self : Type) (Args : Type) (Self_Output :
  Type) := mkcore_ops_function_FnOnce_t {
  core_ops_function_FnOnce_t_call_once : Self -> Args -> result Self_Output;
}.

Arguments mkcore_ops_function_FnOnce_t { _ } { _ } { _ }.
Arguments core_ops_function_FnOnce_t_call_once { _ } { _ } { _ } _.

(** Trait declaration: [core::ops::function::FnMut]
    Source: '/rustc/library/core/src/ops/function.rs', lines 163:0-163:42
    Name pattern: core::ops::function::FnMut *)
Record core_ops_function_FnMut_t (Self : Type) (Args : Type)
  (Self_Clause0_Output : Type) := mkcore_ops_function_FnMut_t {
  core_ops_function_FnMut_tcore_ops_function_FnMut_t_FnOnceInst :
    core_ops_function_FnOnce_t Self Args Self_Clause0_Output;
  core_ops_function_FnMut_t_call_mut : Self -> Args -> result
    (Self_Clause0_Output * Self);
}.

Arguments mkcore_ops_function_FnMut_t { _ } { _ } { _ }.
Arguments core_ops_function_FnMut_tcore_ops_function_FnMut_t_FnOnceInst { _ }
  { _ } { _ } _.
Arguments core_ops_function_FnMut_t_call_mut { _ } { _ } { _ } _.

(** Trait declaration: [core::iter::traits::collect::FromIterator]
    Source: '/rustc/library/core/src/iter/traits/collect.rs', lines 134:0-134:32
    Name pattern: core::iter::traits::collect::FromIterator *)
Record core_iter_traits_collect_FromIterator_t (Self : Type) (A : Type)
  := mkcore_iter_traits_collect_FromIterator_t {
  core_iter_traits_collect_FromIterator_t_from_iter : forall {T : Type}
    {Clause1_IntoIter : Type} (intoIteratorInst :
    core_iter_traits_collect_IntoIterator_t T A Clause1_IntoIter), T -> result
    Self;
}.

Arguments mkcore_iter_traits_collect_FromIterator_t { _ } { _ }.
Arguments core_iter_traits_collect_FromIterator_t_from_iter { _ } { _ } _ { _ }
  { _ }.

(** Trait declaration: [core::ops::try_trait::FromResidual]
    Source: '/rustc/library/core/src/ops/try_trait.rs', lines 307:0-307:51
    Name pattern: core::ops::try_trait::FromResidual *)
Record core_ops_try_trait_FromResidual_t (Self : Type) (R : Type)
  := mkcore_ops_try_trait_FromResidual_t {
  core_ops_try_trait_FromResidual_t_from_residual : R -> result Self;
}.

Arguments mkcore_ops_try_trait_FromResidual_t { _ } { _ }.
Arguments core_ops_try_trait_FromResidual_t_from_residual { _ } { _ } _.

(** [core::ops::control_flow::ControlFlow]
    Source: '/rustc/library/core/src/ops/control_flow.rs', lines 85:0-85:31
    Name pattern: core::ops::control_flow::ControlFlow *)
Inductive core_ops_control_flow_ControlFlow_t (B : Type) (C : Type) :=
| Core_ops_control_flow_ControlFlow_Continue :
  C ->
  core_ops_control_flow_ControlFlow_t B C
| Core_ops_control_flow_ControlFlow_Break :
  B ->
  core_ops_control_flow_ControlFlow_t B C
.

Arguments Core_ops_control_flow_ControlFlow_Continue { _ } { _ }.
Arguments Core_ops_control_flow_ControlFlow_Break { _ } { _ }.

(** Trait declaration: [core::ops::try_trait::Try]
    Source: '/rustc/library/core/src/ops/try_trait.rs', lines 131:0-131:27
    Name pattern: core::ops::try_trait::Try *)
Record core_ops_try_trait_Try_t (Self : Type) (Self_Output : Type)
  (Self_Residual : Type) := mkcore_ops_try_trait_Try_t {
  core_ops_try_trait_Try_tcore_ops_try_trait_Try_t_FromResidualInst :
    core_ops_try_trait_FromResidual_t Self Self_Residual;
  core_ops_try_trait_Try_t_from_output : Self_Output -> result Self;
  core_ops_try_trait_Try_t_branch : Self -> result
    (core_ops_control_flow_ControlFlow_t Self_Residual Self_Output);
}.

Arguments mkcore_ops_try_trait_Try_t { _ } { _ } { _ }.
Arguments core_ops_try_trait_Try_tcore_ops_try_trait_Try_t_FromResidualInst
  { _ } { _ } { _ } _.
Arguments core_ops_try_trait_Try_t_from_output { _ } { _ } { _ } _.
Arguments core_ops_try_trait_Try_t_branch { _ } { _ } { _ } _.

(** Trait declaration: [core::ops::try_trait::Residual]
    Source: '/rustc/library/core/src/ops/try_trait.rs', lines 359:0-359:21
    Name pattern: core::ops::try_trait::Residual *)
Record core_ops_try_trait_Residual_t (Self : Type) (O1 : Type) (Self_TryType :
  Type) := mkcore_ops_try_trait_Residual_t {
  core_ops_try_trait_Residual_tcore_ops_try_trait_Residual_t_TryInst :
    core_ops_try_trait_Try_t Self_TryType O1 Self;
}.

Arguments mkcore_ops_try_trait_Residual_t { _ } { _ } { _ }.
Arguments core_ops_try_trait_Residual_tcore_ops_try_trait_Residual_t_TryInst
  { _ } { _ } { _ } _.

(** Trait declaration: [core::iter::traits::collect::Extend]
    Source: '/rustc/library/core/src/iter/traits/collect.rs', lines 431:0-431:19
    Name pattern: core::iter::traits::collect::Extend *)
Record core_iter_traits_collect_Extend_t (Self : Type) (A : Type)
  := mkcore_iter_traits_collect_Extend_t {
  core_iter_traits_collect_Extend_t_extend : forall {T : Type}
    {Clause1_IntoIter : Type} (intoIteratorInst :
    core_iter_traits_collect_IntoIterator_t T A Clause1_IntoIter), Self -> T ->
    result Self;
}.

Arguments mkcore_iter_traits_collect_Extend_t { _ } { _ }.
Arguments core_iter_traits_collect_Extend_t_extend { _ } { _ } _ { _ } { _ }.

(** Trait declaration: [core::default::Default]
    Source: '/rustc/library/core/src/default.rs', lines 107:0-107:24
    Name pattern: core::default::Default *)
Record core_default_Default_t (Self : Type) := mkcore_default_Default_t {
  core_default_Default_t_default : result Self;
}.

Arguments mkcore_default_Default_t { _ }.
Arguments core_default_Default_t_default { _ } _.

(** Trait declaration: [core::iter::traits::double_ended::DoubleEndedIterator]
    Source: '/rustc/library/core/src/iter/traits/double_ended.rs', lines 41:0-41:39
    Name pattern: core::iter::traits::double_ended::DoubleEndedIterator *)
Record core_iter_traits_double_ended_DoubleEndedIterator_t (Self : Type)
  (Self_Clause0_Item : Type)
  := mkcore_iter_traits_double_ended_DoubleEndedIterator_t {
  core_iter_traits_double_ended_DoubleEndedIterator_tcore_iter_traits_double_ended_DoubleEndedIterator_t_iteratorIteratorInst
    : core_iter_traits_iterator_Iterator_t Self Self_Clause0_Item;
  core_iter_traits_double_ended_DoubleEndedIterator_t_next_back : Self ->
    result ((option Self_Clause0_Item) * Self);
}.

Arguments mkcore_iter_traits_double_ended_DoubleEndedIterator_t { _ } { _ }.
Arguments
  core_iter_traits_double_ended_DoubleEndedIterator_tcore_iter_traits_double_ended_DoubleEndedIterator_t_iteratorIteratorInst
  { _ } { _ } _.
Arguments core_iter_traits_double_ended_DoubleEndedIterator_t_next_back { _ }
  { _ } _.

(** Trait declaration: [core::iter::traits::exact_size::ExactSizeIterator]
    Source: '/rustc/library/core/src/iter/traits/exact_size.rs', lines 86:0-86:37
    Name pattern: core::iter::traits::exact_size::ExactSizeIterator *)
Record core_iter_traits_exact_size_ExactSizeIterator_t (Self : Type)
  (Self_Clause0_Item : Type)
  := mkcore_iter_traits_exact_size_ExactSizeIterator_t {
  core_iter_traits_exact_size_ExactSizeIterator_tcore_iter_traits_exact_size_ExactSizeIterator_t_iteratorIteratorInst
    : core_iter_traits_iterator_Iterator_t Self Self_Clause0_Item;
}.

Arguments mkcore_iter_traits_exact_size_ExactSizeIterator_t { _ } { _ }.
Arguments
  core_iter_traits_exact_size_ExactSizeIterator_tcore_iter_traits_exact_size_ExactSizeIterator_t_iteratorIteratorInst
  { _ } { _ } _.

(** Trait declaration: [core::iter::traits::accum::Sum]
    Source: '/rustc/library/core/src/iter/traits/accum.rs', lines 17:0-17:30
    Name pattern: core::iter::traits::accum::Sum *)
Record core_iter_traits_accum_Sum_t (Self : Type) (A : Type)
  := mkcore_iter_traits_accum_Sum_t {
  core_iter_traits_accum_Sum_t_sum : forall {I : Type} (iteratorIteratorInst :
    core_iter_traits_iterator_Iterator_t I A), I -> result Self;
}.

Arguments mkcore_iter_traits_accum_Sum_t { _ } { _ }.
Arguments core_iter_traits_accum_Sum_t_sum { _ } { _ } _ { _ }.

(** Trait declaration: [core::iter::traits::accum::Product]
    Source: '/rustc/library/core/src/iter/traits/accum.rs', lines 38:0-38:34
    Name pattern: core::iter::traits::accum::Product *)
Record core_iter_traits_accum_Product_t (Self : Type) (A : Type)
  := mkcore_iter_traits_accum_Product_t {
  core_iter_traits_accum_Product_t_product : forall {I : Type}
    (iteratorIteratorInst : core_iter_traits_iterator_Iterator_t I A), I ->
    result Self;
}.

Arguments mkcore_iter_traits_accum_Product_t { _ } { _ }.
Arguments core_iter_traits_accum_Product_t_product { _ } { _ } _ { _ }.

End BlanketImpl.

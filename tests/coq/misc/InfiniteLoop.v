(** THIS FILE WAS AUTOMATICALLY GENERATED BY AENEAS *)
(** [infinite_loop] *)
Require Import Primitives.
Import Primitives.
Require Import Coq.ZArith.ZArith.
Require Import List.
Import ListNotations.
Local Open Scope Primitives_scope.
Module InfiniteLoop.

(** [infinite_loop::bar]:
    Source: 'tests/src/infinite-loop.rs', lines 4:0-4:11 *)
Definition bar : result unit :=
  Ok tt.

(** [infinite_loop::foo]: loop 0:
    Source: 'tests/src/infinite-loop.rs', lines 8:8-8:13 *)
Fixpoint foo_loop (n : nat) : result unit :=
  match n with | O => Fail_ OutOfFuel | S n1 => _ <- bar; foo_loop n1 end
.

(** [infinite_loop::foo]:
    Source: 'tests/src/infinite-loop.rs', lines 6:0-10:1 *)
Definition foo (n : nat) : result unit :=
  foo_loop n.

End InfiniteLoop.

(** THIS FILE WAS AUTOMATICALLY GENERATED BY AENEAS *)
(** [betree]: type definitions *)
Require Import Primitives.
Import Primitives.
Require Import Coq.ZArith.ZArith.
Require Import List.
Import ListNotations.
Local Open Scope Primitives_scope.
Require Import Betree_TypesExternal.
Include Betree_TypesExternal.
Module Betree_Types.

(** [betree::betree::List]
    Source: 'src/betree.rs', lines 17:0-20:1 *)
Inductive betree_List_t (T : Type) :=
| Betree_List_Cons : T -> betree_List_t T -> betree_List_t T
| Betree_List_Nil : betree_List_t T
.

Arguments Betree_List_Cons { _ }.
Arguments Betree_List_Nil { _ }.

(** [betree::betree::UpsertFunState]
    Source: 'src/betree.rs', lines 63:0-66:1 *)
Inductive betree_UpsertFunState_t :=
| Betree_UpsertFunState_Add : u64 -> betree_UpsertFunState_t
| Betree_UpsertFunState_Sub : u64 -> betree_UpsertFunState_t
.

(** [betree::betree::Message]
    Source: 'src/betree.rs', lines 69:0-117:1 *)
Inductive betree_Message_t :=
| Betree_Message_Insert : u64 -> betree_Message_t
| Betree_Message_Delete : betree_Message_t
| Betree_Message_Upsert : betree_UpsertFunState_t -> betree_Message_t
.

(** [betree::betree::Leaf]
    Source: 'src/betree.rs', lines 167:0-171:1 *)
Record betree_Leaf_t :=
mkbetree_Leaf_t {
  betree_Leaf_id : u64; betree_Leaf_size : u64;
}
.

(** [betree::betree::Internal]
    Source: 'src/betree.rs', lines 156:0-161:1 *)
Inductive betree_Internal_t :=
| mkbetree_Internal_t :
  u64 ->
  u64 ->
  betree_Node_t ->
  betree_Node_t ->
  betree_Internal_t

(** [betree::betree::Node]
    Source: 'src/betree.rs', lines 179:0-184:1 *)
with betree_Node_t :=
| Betree_Node_Internal : betree_Internal_t -> betree_Node_t
| Betree_Node_Leaf : betree_Leaf_t -> betree_Node_t
.

Definition betree_Internal_id (x : betree_Internal_t) :=
  match x with | mkbetree_Internal_t x1 _ _ _ => x1 end
.

Notation "x2 .(betree_Internal_id)" := (betree_Internal_id x2) (at level 9).

Definition betree_Internal_pivot (x : betree_Internal_t) :=
  match x with | mkbetree_Internal_t _ x1 _ _ => x1 end
.

Notation "x2 .(betree_Internal_pivot)" := (betree_Internal_pivot x2)
  (at level 9)
.

Definition betree_Internal_left (x : betree_Internal_t) :=
  match x with | mkbetree_Internal_t _ _ x1 _ => x1 end
.

Notation "x2 .(betree_Internal_left)" := (betree_Internal_left x2) (at level 9)
.

Definition betree_Internal_right (x : betree_Internal_t) :=
  match x with | mkbetree_Internal_t _ _ _ x1 => x1 end
.

Notation "x2 .(betree_Internal_right)" := (betree_Internal_right x2)
  (at level 9)
.

(** [betree::betree::Params]
    Source: 'src/betree.rs', lines 187:0-199:1 *)
Record betree_Params_t :=
mkbetree_Params_t {
  betree_Params_min_flush_size : u64; betree_Params_split_size : u64;
}
.

(** [betree::betree::NodeIdCounter]
    Source: 'src/betree.rs', lines 201:0-203:1 *)
Record betree_NodeIdCounter_t :=
mkbetree_NodeIdCounter_t {
  betree_NodeIdCounter_next_node_id : u64;
}
.

(** [betree::betree::BeTree]
    Source: 'src/betree.rs', lines 218:0-225:1 *)
Record betree_BeTree_t :=
mkbetree_BeTree_t {
  betree_BeTree_params : betree_Params_t;
  betree_BeTree_node_id_cnt : betree_NodeIdCounter_t;
  betree_BeTree_root : betree_Node_t;
}
.

End Betree_Types.

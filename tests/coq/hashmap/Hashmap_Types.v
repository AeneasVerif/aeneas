(** THIS FILE WAS AUTOMATICALLY GENERATED BY AENEAS *)
(** [hashmap]: type definitions *)
Require Import Primitives.
Import Primitives.
Require Import Coq.ZArith.ZArith.
Require Import List.
Import ListNotations.
Local Open Scope Primitives_scope.
Require Import Hashmap_TypesExternal.
Include Hashmap_TypesExternal.
Module Hashmap_Types.

(** [hashmap::AList]
    Source: 'tests/src/hashmap.rs', lines 30:0-30:17 *)
Inductive AList_t (T : Type) :=
| AList_Cons : usize -> T -> AList_t T -> AList_t T
| AList_Nil : AList_t T
.

Arguments AList_Cons { _ }.
Arguments AList_Nil { _ }.

(** [hashmap::HashMap]
    Source: 'tests/src/hashmap.rs', lines 46:0-46:21 *)
Record HashMap_t (T : Type) :=
mkHashMap_t {
  hashMap_num_entries : usize;
  hashMap_max_load_factor : (usize * usize);
  hashMap_max_load : usize;
  hashMap_slots : alloc_vec_Vec (AList_t T);
}
.

Arguments mkHashMap_t { _ }.
Arguments hashMap_num_entries { _ }.
Arguments hashMap_max_load_factor { _ }.
Arguments hashMap_max_load { _ }.
Arguments hashMap_slots { _ }.

End Hashmap_Types.

(** THIS FILE WAS AUTOMATICALLY GENERATED BY AENEAS *)
(** [hashmap_main]: type definitions *)
Require Import Primitives.
Import Primitives.
Require Import Coq.ZArith.ZArith.
Require Import List.
Import ListNotations.
Local Open Scope Primitives_scope.
Module HashmapMain_Types.

(** [hashmap_main::hashmap::List] *)
Inductive hashmap_List_t (T : Type) :=
| Hashmap_List_Cons : usize -> T -> hashmap_List_t T -> hashmap_List_t T
| Hashmap_List_Nil : hashmap_List_t T
.

Arguments Hashmap_List_Cons {T} _ _ _.
Arguments Hashmap_List_Nil {T}.

(** [hashmap_main::hashmap::HashMap] *)
Record hashmap_HashMap_t (T : Type) :=
mkhashmap_HashMap_t {
  hashmap_HashMap_num_entries : usize;
  hashmap_HashMap_max_load_factor : (usize * usize);
  hashmap_HashMap_max_load : usize;
  hashmap_HashMap_slots : alloc_vec_Vec (hashmap_List_t T);
}
.

Arguments mkhashmap_HashMap_t {T} _ _ _ _.
Arguments hashmap_HashMap_num_entries {T}.
Arguments hashmap_HashMap_max_load_factor {T}.
Arguments hashmap_HashMap_max_load {T}.
Arguments hashmap_HashMap_slots {T}.

(** The state type used in the state-error monad *)
Axiom state : Type.

End HashmapMain_Types .

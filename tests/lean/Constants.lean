-- THIS FILE WAS AUTOMATICALLY GENERATED BY AENEAS
-- [constants]
import Aeneas
open Aeneas.Std Result Error
set_option linter.dupNamespace false
set_option linter.hashCommand false
set_option linter.unusedVariables false

namespace constants

/- [constants::X0]
   Source: 'tests/src/constants.rs', lines 8:0-8:22 -/
@[global_simps] def X0_body : Result U32 := ok 0#u32
@[global_simps, irreducible] def X0 : U32 := eval_global X0_body

/- [constants::X1]
   Source: 'tests/src/constants.rs', lines 10:0-10:29 -/
@[global_simps] def X1_body : Result U32 := ok core.num.U32.MAX
@[global_simps, irreducible] def X1 : U32 := eval_global X1_body

/- [constants::X2]
   Source: 'tests/src/constants.rs', lines 13:0-16:2 -/
@[global_simps] def X2_body : Result U32 := ok 3#u32
@[global_simps, irreducible] def X2 : U32 := eval_global X2_body

/- [constants::incr]:
   Source: 'tests/src/constants.rs', lines 20:0-22:1 -/
def incr (n : U32) : Result U32 :=
  n + 1#u32

/- [constants::X3]
   Source: 'tests/src/constants.rs', lines 18:0-18:29 -/
@[global_simps] def X3_body : Result U32 := incr 32#u32
@[global_simps, irreducible] def X3 : U32 := eval_global X3_body

/- [constants::mk_pair0]:
   Source: 'tests/src/constants.rs', lines 26:0-28:1 -/
def mk_pair0 (x : U32) (y : U32) : Result (U32 × U32) :=
  ok (x, y)

/- [constants::Pair]
   Source: 'tests/src/constants.rs', lines 39:0-42:1 -/
structure Pair (T1 : Type) (T2 : Type) where
  x : T1
  y : T2

/- [constants::mk_pair1]:
   Source: 'tests/src/constants.rs', lines 30:0-32:1 -/
def mk_pair1 (x : U32) (y : U32) : Result (Pair U32 U32) :=
  ok { x, y }

/- [constants::P0]
   Source: 'tests/src/constants.rs', lines 34:0-34:42 -/
@[global_simps] def P0_body : Result (U32 × U32) := mk_pair0 0#u32 1#u32
@[global_simps, irreducible] def P0 : (U32 × U32) := eval_global P0_body

/- [constants::P1]
   Source: 'tests/src/constants.rs', lines 35:0-35:46 -/
@[global_simps] def P1_body : Result (Pair U32 U32) := mk_pair1 0#u32 1#u32
@[global_simps, irreducible] def P1 : Pair U32 U32 := eval_global P1_body

/- [constants::P2]
   Source: 'tests/src/constants.rs', lines 36:0-36:34 -/
@[global_simps] def P2_body : Result (U32 × U32) := ok (0#u32, 1#u32)
@[global_simps, irreducible] def P2 : (U32 × U32) := eval_global P2_body

/- [constants::P3]
   Source: 'tests/src/constants.rs', lines 37:0-37:51 -/
@[global_simps]
def P3_body : Result (Pair U32 U32) := ok { x := 0#u32, y := 1#u32 }
@[global_simps, irreducible] def P3 : Pair U32 U32 := eval_global P3_body

/- [constants::Wrap]
   Source: 'tests/src/constants.rs', lines 52:0-54:1 -/
structure Wrap (T : Type) where
  value : T

/- [constants::{constants::Wrap<T>}::new]:
   Source: 'tests/src/constants.rs', lines 57:4-59:5 -/
def Wrap.new {T : Type} (value : T) : Result (Wrap T) :=
  ok { value }

/- [constants::Y]
   Source: 'tests/src/constants.rs', lines 44:0-44:38 -/
@[global_simps] def Y_body : Result (Wrap I32) := Wrap.new 2#i32
@[global_simps, irreducible] def Y : Wrap I32 := eval_global Y_body

/- [constants::unwrap_y]:
   Source: 'tests/src/constants.rs', lines 46:0-48:1 -/
def unwrap_y : Result I32 :=
  ok Y.value

/- [constants::YVAL]
   Source: 'tests/src/constants.rs', lines 50:0-50:33 -/
@[global_simps] def YVAL_body : Result I32 := unwrap_y
@[global_simps, irreducible] def YVAL : I32 := eval_global YVAL_body

/- [constants::get_z1::Z1]
   Source: 'tests/src/constants.rs', lines 65:4-65:22 -/
@[global_simps] def get_z1.Z1_body : Result I32 := ok 3#i32
@[global_simps, irreducible] def get_z1.Z1 : I32 := eval_global get_z1.Z1_body

/- [constants::get_z1]:
   Source: 'tests/src/constants.rs', lines 64:0-67:1 -/
def get_z1 : Result I32 :=
  ok get_z1.Z1

/- [constants::add]:
   Source: 'tests/src/constants.rs', lines 69:0-71:1 -/
def add (a : I32) (b : I32) : Result I32 :=
  a + b

/- [constants::Q1]
   Source: 'tests/src/constants.rs', lines 77:0-77:22 -/
@[global_simps] def Q1_body : Result I32 := ok 5#i32
@[global_simps, irreducible] def Q1 : I32 := eval_global Q1_body

/- [constants::Q2]
   Source: 'tests/src/constants.rs', lines 78:0-78:23 -/
@[global_simps] def Q2_body : Result I32 := ok Q1
@[global_simps, irreducible] def Q2 : I32 := eval_global Q2_body

/- [constants::Q3]
   Source: 'tests/src/constants.rs', lines 79:0-79:31 -/
@[global_simps] def Q3_body : Result I32 := add Q2 3#i32
@[global_simps, irreducible] def Q3 : I32 := eval_global Q3_body

/- [constants::get_z2]:
   Source: 'tests/src/constants.rs', lines 73:0-75:1 -/
def get_z2 : Result I32 :=
  do
  let i ← get_z1
  let i1 ← add i Q3
  add Q1 i1

/- [constants::S1]
   Source: 'tests/src/constants.rs', lines 83:0-83:23 -/
@[global_simps] def S1_body : Result U32 := ok 6#u32
@[global_simps, irreducible] def S1 : U32 := eval_global S1_body

/- [constants::S2]
   Source: 'tests/src/constants.rs', lines 84:0-84:30 -/
@[global_simps] def S2_body : Result U32 := incr S1
@[global_simps, irreducible] def S2 : U32 := eval_global S2_body

/- [constants::S3]
   Source: 'tests/src/constants.rs', lines 85:0-85:35 -/
@[global_simps] def S3_body : Result (Pair U32 U32) := ok P3
@[global_simps, irreducible] def S3 : Pair U32 U32 := eval_global S3_body

/- [constants::S4]
   Source: 'tests/src/constants.rs', lines 86:0-86:47 -/
@[global_simps] def S4_body : Result (Pair U32 U32) := mk_pair1 7#u32 8#u32
@[global_simps, irreducible] def S4 : Pair U32 U32 := eval_global S4_body

/- [constants::V]
   Source: 'tests/src/constants.rs', lines 89:0-91:1 -/
structure V (T : Type) (N : Usize) where
  x : Array T N

/- [constants::{constants::V<T, N>}#1::LEN]
   Source: 'tests/src/constants.rs', lines 94:4-94:29 -/
@[global_simps] def V.LEN_body (T : Type) (N : Usize) : Result Usize := ok N
@[global_simps, irreducible]
def V.LEN (T : Type) (N : Usize) : Usize := eval_global (V.LEN_body T N)

/- [constants::use_v]:
   Source: 'tests/src/constants.rs', lines 97:0-99:1 -/
def use_v (T : Type) (N : Usize) : Result Usize :=
  ok (V.LEN T N)

end constants

-- THIS FILE WAS AUTOMATICALLY GENERATED BY AENEAS
-- [loops_nested]
import Aeneas
open Aeneas.Std Result Error
set_option linter.dupNamespace false
set_option linter.hashCommand false
set_option linter.unusedVariables false

namespace loops_nested

/- [loops_nested::iter]: loop 1:
   Source: 'tests/src/loops-nested.rs', lines 7:8-9:9 -/
def iter_loop1 (n : U32) (j : U32) : Result Unit :=
  if j < n
  then do
       let j1 ← j + 1#u32
       iter_loop1 n j1
  else ok ()
partial_fixpoint

/- [loops_nested::iter]: loop 0:
   Source: 'tests/src/loops-nested.rs', lines 5:4-11:5 -/
def iter_loop0 (m : U32) (n : U32) (i : U32) : Result Unit :=
  if i < m
  then do
       iter_loop1 n 0#u32
       let i1 ← i + 1#u32
       iter_loop0 m n i1
  else ok ()
partial_fixpoint

/- [loops_nested::iter]:
   Source: 'tests/src/loops-nested.rs', lines 3:0-12:1 -/
@[reducible] def iter (m : U32) (n : U32) : Result Unit :=
               iter_loop0 m n 0#u32

/- [loops_nested::sum]: loop 1:
   Source: 'tests/src/loops-nested.rs', lines 19:8-22:9 -/
def sum_loop1 (n : U32) (s : U32) (j : U32) : Result U32 :=
  if j < n
  then do
       let s1 ← s + 1#u32
       let j1 ← j + 1#u32
       sum_loop1 n s1 j1
  else ok s
partial_fixpoint

/- [loops_nested::sum]: loop 0:
   Source: 'tests/src/loops-nested.rs', lines 17:4-24:5 -/
def sum_loop0 (m : U32) (n : U32) (s : U32) (i : U32) : Result U32 :=
  if i < m
  then
    do
    let s1 ← sum_loop1 n s 0#u32
    let i1 ← i + 1#u32
    sum_loop0 m n s1 i1
  else ok s
partial_fixpoint

/- [loops_nested::sum]:
   Source: 'tests/src/loops-nested.rs', lines 14:0-26:1 -/
@[reducible]
def sum (m : U32) (n : U32) : Result U32 :=
  sum_loop0 m n 0#u32 0#u32

end loops_nested

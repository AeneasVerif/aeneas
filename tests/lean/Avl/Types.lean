-- THIS FILE WAS AUTOMATICALLY GENERATED BY AENEAS
-- [avl]: type definitions
import Base
open Primitives
set_option linter.dupNamespace false
set_option linter.hashCommand false
set_option linter.unusedVariables false

namespace avl

/- [avl::Ordering]
   Source: 'tests/src/avl.rs', lines 29:0-29:17 -/
inductive Ordering :=
| Less : Ordering
| Equal : Ordering
| Greater : Ordering

/- Trait declaration: [avl::Ord]
   Source: 'tests/src/avl.rs', lines 35:0-35:13 -/
structure Ord (Self : Type) where
  cmp : Self → Self → Result Ordering

/- Trait declaration: [core::marker::Copy]
   Source: '/rustc/library/core/src/marker.rs', lines 403:0-403:21
   Name pattern: core::marker::Copy -/
structure core.marker.Copy (Self : Type) where
  cloneCloneInst : core.clone.Clone Self

/- [avl::Node]
   Source: 'tests/src/avl.rs', lines 39:0-39:14 -/
inductive Node (T : Type) :=
| mk : T → Option (Node T) → Option (Node T) → Usize → Node T

@[simp, reducible]
def Node.value {T : Type} (x : Node T) :=
  match x with | Node.mk x1 _ _ _ => x1

@[simp, reducible]
def Node.left {T : Type} (x : Node T) :=
  match x with | Node.mk _ x1 _ _ => x1

@[simp, reducible]
def Node.right {T : Type} (x : Node T) :=
  match x with | Node.mk _ _ x1 _ => x1

@[simp, reducible]
def Node.height {T : Type} (x : Node T) :=
  match x with | Node.mk _ _ _ x1 => x1

/- [avl::Tree]
   Source: 'tests/src/avl.rs', lines 46:0-46:18 -/
structure Tree (T : Type) where
  root : Option (Node T)

end avl

-- THIS FILE WAS AUTOMATICALLY GENERATED BY AENEAS
-- [traits]
import Aeneas
open Aeneas.Std
set_option linter.dupNamespace false
set_option linter.hashCommand false
set_option linter.unusedVariables false

namespace traits

/- Trait declaration: [traits::BoolTrait]
   Source: 'tests/src/traits.rs', lines 3:0-11:1 -/
structure BoolTrait (Self : Type) where
  get_bool : Self → Result Bool
  ret_true : Self → Result Bool

/- [traits::{traits::BoolTrait for bool}::get_bool]:
   Source: 'tests/src/traits.rs', lines 14:4-16:5 -/
def BoolTraitBool.get_bool (self : Bool) : Result Bool :=
  Result.ok self

/- [traits::{traits::BoolTrait for bool}::ret_true]:
   Source: 'tests/src/traits.rs', lines 8:4-10:5 -/
def BoolTraitBool.ret_true (self : Bool) : Result Bool :=
  Result.ok true

/- Trait implementation: [traits::{traits::BoolTrait for bool}]
   Source: 'tests/src/traits.rs', lines 13:0-17:1 -/
@[reducible]
def BoolTraitBool : BoolTrait Bool := {
  get_bool := BoolTraitBool.get_bool
  ret_true := BoolTraitBool.ret_true
}

/- [traits::test_bool_trait_bool]:
   Source: 'tests/src/traits.rs', lines 19:0-21:1 -/
def test_bool_trait_bool (x : Bool) : Result Bool :=
  do
  let b ← BoolTraitBool.get_bool x
  if b
  then BoolTraitBool.ret_true x
  else Result.ok false

/- [traits::{traits::BoolTrait for core::option::Option<T>}#1::get_bool]:
   Source: 'tests/src/traits.rs', lines 25:4-30:5 -/
def BoolTraitOption.get_bool {T : Type} (self : Option T) : Result Bool :=
  match self with
  | none => Result.ok false
  | some _ => Result.ok true

/- [traits::{traits::BoolTrait for core::option::Option<T>}#1::ret_true]:
   Source: 'tests/src/traits.rs', lines 8:4-10:5 -/
def BoolTraitOption.ret_true {T : Type} (self : Option T) : Result Bool :=
  Result.ok true

/- Trait implementation: [traits::{traits::BoolTrait for core::option::Option<T>}#1]
   Source: 'tests/src/traits.rs', lines 24:0-31:1 -/
@[reducible]
def BoolTraitOption (T : Type) : BoolTrait (Option T) := {
  get_bool := BoolTraitOption.get_bool
  ret_true := BoolTraitOption.ret_true
}

/- [traits::test_bool_trait_option]:
   Source: 'tests/src/traits.rs', lines 33:0-35:1 -/
def test_bool_trait_option {T : Type} (x : Option T) : Result Bool :=
  do
  let b ← BoolTraitOption.get_bool x
  if b
  then BoolTraitOption.ret_true x
  else Result.ok false

/- [traits::test_bool_trait]:
   Source: 'tests/src/traits.rs', lines 37:0-39:1 -/
def test_bool_trait
  {T : Type} (BoolTraitInst : BoolTrait T) (x : T) : Result Bool :=
  BoolTraitInst.get_bool x

/- Trait declaration: [traits::ToU64]
   Source: 'tests/src/traits.rs', lines 41:0-43:1 -/
structure ToU64 (Self : Type) where
  to_u64 : Self → Result U64

/- [traits::{traits::ToU64 for u64}#2::to_u64]:
   Source: 'tests/src/traits.rs', lines 46:4-48:5 -/
def ToU64U64.to_u64 (self : U64) : Result U64 :=
  Result.ok self

/- Trait implementation: [traits::{traits::ToU64 for u64}#2]
   Source: 'tests/src/traits.rs', lines 45:0-49:1 -/
@[reducible]
def ToU64U64 : ToU64 U64 := {
  to_u64 := ToU64U64.to_u64
}

/- [traits::{traits::ToU64 for (A, A)}#3::to_u64]:
   Source: 'tests/src/traits.rs', lines 52:4-54:5 -/
def ToU64Pair.to_u64
  {A : Type} (ToU64Inst : ToU64 A) (self : (A × A)) : Result U64 :=
  do
  let (t, t1) := self
  let i ← ToU64Inst.to_u64 t
  let i1 ← ToU64Inst.to_u64 t1
  i + i1

/- Trait implementation: [traits::{traits::ToU64 for (A, A)}#3]
   Source: 'tests/src/traits.rs', lines 51:0-55:1 -/
@[reducible]
def ToU64Pair {A : Type} (ToU64Inst : ToU64 A) : ToU64 (A × A) := {
  to_u64 := ToU64Pair.to_u64 ToU64Inst
}

/- [traits::f]:
   Source: 'tests/src/traits.rs', lines 57:0-59:1 -/
def f {T : Type} (ToU64Inst : ToU64 T) (x : (T × T)) : Result U64 :=
  ToU64Pair.to_u64 ToU64Inst x

/- [traits::g]:
   Source: 'tests/src/traits.rs', lines 61:0-66:1 -/
def g
  {T : Type} (ToU64PairInst : ToU64 (T × T)) (x : (T × T)) : Result U64 :=
  ToU64PairInst.to_u64 x

/- [traits::h0]:
   Source: 'tests/src/traits.rs', lines 68:0-70:1 -/
def h0 (x : U64) : Result U64 :=
  ToU64U64.to_u64 x

/- [traits::Wrapper]
   Source: 'tests/src/traits.rs', lines 72:0-74:1 -/
structure Wrapper (T : Type) where
  x : T

/- [traits::{traits::ToU64 for traits::Wrapper<T>}#4::to_u64]:
   Source: 'tests/src/traits.rs', lines 77:4-79:5 -/
def ToU64traitsWrapper.to_u64
  {T : Type} (ToU64Inst : ToU64 T) (self : Wrapper T) : Result U64 :=
  ToU64Inst.to_u64 self.x

/- Trait implementation: [traits::{traits::ToU64 for traits::Wrapper<T>}#4]
   Source: 'tests/src/traits.rs', lines 76:0-80:1 -/
@[reducible]
def ToU64traitsWrapper {T : Type} (ToU64Inst : ToU64 T) : ToU64 (Wrapper T)
  := {
  to_u64 := ToU64traitsWrapper.to_u64 ToU64Inst
}

/- [traits::h1]:
   Source: 'tests/src/traits.rs', lines 82:0-84:1 -/
def h1 (x : Wrapper U64) : Result U64 :=
  ToU64traitsWrapper.to_u64 ToU64U64 x

/- [traits::h2]:
   Source: 'tests/src/traits.rs', lines 86:0-88:1 -/
def h2 {T : Type} (ToU64Inst : ToU64 T) (x : Wrapper T) : Result U64 :=
  ToU64traitsWrapper.to_u64 ToU64Inst x

/- Trait declaration: [traits::ToType]
   Source: 'tests/src/traits.rs', lines 90:0-92:1 -/
structure ToType (Self : Type) (T : Type) where
  to_type : Self → Result T

/- [traits::{traits::ToType<bool> for u64}#5::to_type]:
   Source: 'tests/src/traits.rs', lines 95:4-97:5 -/
def ToTypeU64Bool.to_type (self : U64) : Result Bool :=
  Result.ok (self > 0#u64)

/- Trait implementation: [traits::{traits::ToType<bool> for u64}#5]
   Source: 'tests/src/traits.rs', lines 94:0-98:1 -/
@[reducible]
def ToTypeU64Bool : ToType U64 Bool := {
  to_type := ToTypeU64Bool.to_type
}

/- Trait declaration: [traits::OfType]
   Source: 'tests/src/traits.rs', lines 100:0-104:1 -/
structure OfType (Self : Type) where
  of_type : forall {T : Type} (ToTypeInst : ToType T Self), T → Result Self

/- [traits::h3]:
   Source: 'tests/src/traits.rs', lines 106:0-108:1 -/
def h3
  {T1 : Type} {T2 : Type} (OfTypeInst : OfType T1) (ToTypeInst : ToType T2 T1)
  (y : T2) :
  Result T1
  :=
  OfTypeInst.of_type ToTypeInst y

/- Trait declaration: [traits::OfTypeBis]
   Source: 'tests/src/traits.rs', lines 111:0-118:1 -/
structure OfTypeBis (Self : Type) (T : Type) where
  ToTypeInst : ToType T Self
  of_type : T → Result Self

/- [traits::h4]:
   Source: 'tests/src/traits.rs', lines 120:0-122:1 -/
def h4
  {T1 : Type} {T2 : Type} (OfTypeBisInst : OfTypeBis T1 T2) (ToTypeInst :
  ToType T2 T1) (y : T2) :
  Result T1
  :=
  OfTypeBisInst.of_type y

/- [traits::TestType]
   Source: 'tests/src/traits.rs', lines 124:0-124:26 -/
@[reducible] def TestType (T : Type) := T

/- [traits::{traits::TestType<T>}#6::test::TestType1]
   Source: 'tests/src/traits.rs', lines 129:8-129:30 -/
@[reducible] def TestType.test.TestType1 := U64

/- [traits::{traits::TestType<T>}#6::test::{traits::{traits::TestType<T>}#6::test::TestTrait for traits::{traits::TestType<T>}#6::test::TestType1}::test]:
   Source: 'tests/src/traits.rs', lines 141:12-143:13 -/
def TestType.test.TestTraittraitsTestTypetestTestType1.test
  (self : TestType.test.TestType1) : Result Bool :=
  Result.ok (self > 1#u64)

/- [traits::{traits::TestType<T>}#6::test]:
   Source: 'tests/src/traits.rs', lines 128:4-149:5 -/
def TestType.test
  {T : Type} (ToU64Inst : ToU64 T) (self : TestType T) (x : T) : Result Bool :=
  do
  let x1 ← ToU64Inst.to_u64 x
  if x1 > 0#u64
  then TestType.test.TestTraittraitsTestTypetestTestType1.test 0#u64
  else Result.ok false

/- [traits::BoolWrapper]
   Source: 'tests/src/traits.rs', lines 152:0-152:33 -/
@[reducible] def BoolWrapper := Bool

/- [traits::{traits::ToType<T> for traits::BoolWrapper}#7::to_type]:
   Source: 'tests/src/traits.rs', lines 158:4-160:5 -/
def ToTypetraitsBoolWrapperT.to_type
  {T : Type} (ToTypeBoolTInst : ToType Bool T) (self : BoolWrapper) :
  Result T
  :=
  ToTypeBoolTInst.to_type self

/- Trait implementation: [traits::{traits::ToType<T> for traits::BoolWrapper}#7]
   Source: 'tests/src/traits.rs', lines 154:0-161:1 -/
@[reducible]
def ToTypetraitsBoolWrapperT {T : Type} (ToTypeBoolTInst : ToType Bool T) :
  ToType BoolWrapper T := {
  to_type := ToTypetraitsBoolWrapperT.to_type ToTypeBoolTInst
}

/- [traits::WithConstTy::LEN2]
   Source: 'tests/src/traits.rs', lines 166:4-166:27 -/
def WithConstTy.LEN2_default_body (Self : Type) (LEN : Usize) : Result Usize :=
  Result.ok 32#usize
def WithConstTy.LEN2_default (Self : Type) (LEN : Usize) : Usize :=
  eval_global (WithConstTy.LEN2_default_body Self LEN)

/- Trait declaration: [traits::WithConstTy]
   Source: 'tests/src/traits.rs', lines 163:0-174:1 -/
structure WithConstTy (Self : Type) (LEN : Usize) where
  LEN1 : Usize
  LEN2 : Usize
  V : Type
  W : Type
  ToU64traitsWithConstTyWInst : ToU64 W
  f : W → Array U8 LEN → Result W

/- [traits::{traits::WithConstTy<32: usize> for bool}#8::LEN1]
   Source: 'tests/src/traits.rs', lines 177:4-177:27 -/
def WithConstTyBool32.LEN1_body : Result Usize := Result.ok 12#usize
def WithConstTyBool32.LEN1 : Usize := eval_global WithConstTyBool32.LEN1_body

/- [traits::{traits::WithConstTy<32: usize> for bool}#8::f]:
   Source: 'tests/src/traits.rs', lines 182:4-182:42 -/
def WithConstTyBool32.f (i : U64) (a : Array U8 32#usize) : Result U64 :=
  Result.ok i

/- Trait implementation: [traits::{traits::WithConstTy<32: usize> for bool}#8]
   Source: 'tests/src/traits.rs', lines 176:0-183:1 -/
@[reducible]
def WithConstTyBool32 : WithConstTy Bool 32#usize := {
  LEN1 := WithConstTyBool32.LEN1
  LEN2 := WithConstTy.LEN2_default Bool 32#usize
  V := U8
  W := U64
  ToU64traitsWithConstTyWInst := ToU64U64
  f := WithConstTyBool32.f
}

/- [traits::use_with_const_ty1]:
   Source: 'tests/src/traits.rs', lines 185:0-187:1 -/
def use_with_const_ty1
  {H : Type} {LEN : Usize} (WithConstTyInst : WithConstTy H LEN) :
  Result Usize
  :=
  Result.ok WithConstTyInst.LEN1

/- [traits::use_with_const_ty2]:
   Source: 'tests/src/traits.rs', lines 189:0-189:76 -/
def use_with_const_ty2
  {H : Type} {LEN : Usize} (WithConstTyInst : WithConstTy H LEN)
  (w : WithConstTyInst.W) :
  Result Unit
  :=
  Result.ok ()

/- [traits::use_with_const_ty3]:
   Source: 'tests/src/traits.rs', lines 191:0-193:1 -/
def use_with_const_ty3
  {H : Type} {LEN : Usize} (WithConstTyInst : WithConstTy H LEN)
  (x : WithConstTyInst.W) :
  Result U64
  :=
  WithConstTyInst.ToU64traitsWithConstTyWInst.to_u64 x

/- [traits::test_where1]:
   Source: 'tests/src/traits.rs', lines 195:0-195:43 -/
def test_where1 {T : Type} (_x : T) : Result Unit :=
  Result.ok ()

/- [traits::test_where2]:
   Source: 'tests/src/traits.rs', lines 196:0-196:60 -/
def test_where2
  {T : Type} (WithConstTyT32Inst : WithConstTy T 32#usize) (_x : U32) :
  Result Unit
  :=
  Result.ok ()

/- Trait declaration: [traits::ParentTrait0]
   Source: 'tests/src/traits.rs', lines 202:0-206:1 -/
structure ParentTrait0 (Self : Type) where
  W : Type
  get_name : Self → Result String
  get_w : Self → Result W

/- Trait declaration: [traits::ParentTrait1]
   Source: 'tests/src/traits.rs', lines 207:0-207:25 -/
structure ParentTrait1 (Self : Type) where

/- Trait declaration: [traits::ChildTrait]
   Source: 'tests/src/traits.rs', lines 208:0-208:52 -/
structure ChildTrait (Self : Type) where
  ParentTrait0Inst : ParentTrait0 Self
  ParentTrait1Inst : ParentTrait1 Self

/- [traits::test_child_trait1]:
   Source: 'tests/src/traits.rs', lines 211:0-213:1 -/
def test_child_trait1
  {T : Type} (ChildTraitInst : ChildTrait T) (x : T) : Result String :=
  ChildTraitInst.ParentTrait0Inst.get_name x

/- [traits::test_child_trait2]:
   Source: 'tests/src/traits.rs', lines 215:0-217:1 -/
def test_child_trait2
  {T : Type} (ChildTraitInst : ChildTrait T) (x : T) :
  Result ChildTraitInst.ParentTrait0Inst.W
  :=
  ChildTraitInst.ParentTrait0Inst.get_w x

/- [traits::order1]:
   Source: 'tests/src/traits.rs', lines 221:0-221:62 -/
def order1
  {T : Type} {U : Type} (ParentTrait0Inst : ParentTrait0 T) (ParentTrait0Inst1
  : ParentTrait0 U) :
  Result Unit
  :=
  Result.ok ()

/- Trait declaration: [traits::ChildTrait1]
   Source: 'tests/src/traits.rs', lines 224:0-224:38 -/
structure ChildTrait1 (Self : Type) where
  ParentTrait1Inst : ParentTrait1 Self

/- Trait implementation: [traits::{traits::ParentTrait1 for usize}#9]
   Source: 'tests/src/traits.rs', lines 226:0-226:30 -/
@[reducible]
def ParentTrait1Usize : ParentTrait1 Usize := {
}

/- Trait implementation: [traits::{traits::ChildTrait1 for usize}#10]
   Source: 'tests/src/traits.rs', lines 227:0-227:29 -/
@[reducible]
def ChildTrait1Usize : ChildTrait1 Usize := {
  ParentTrait1Inst := ParentTrait1Usize
}

/- Trait declaration: [traits::Iterator]
   Source: 'tests/src/traits.rs', lines 231:0-233:1 -/
structure Iterator (Self : Type) where
  Item : Type

/- Trait declaration: [traits::IntoIterator]
   Source: 'tests/src/traits.rs', lines 235:0-241:1 -/
structure IntoIterator (Self : Type) where
  Item : Type
  IntoIter : Type
  IteratortraitsIntoIteratorIntoIterInst : Iterator IntoIter
  into_iter : Self → Result IntoIter

/- Trait declaration: [traits::FromResidual]
   Source: 'tests/src/traits.rs', lines 252:0-252:24 -/
structure FromResidual (Self : Type) (T : Type) where

/- Trait declaration: [traits::Try]
   Source: 'tests/src/traits.rs', lines 248:0-250:1 -/
structure Try (Self : Type) where
  Residual : Type
  FromResidualSelftraitsTryResidualInst : FromResidual Self Residual

/- Trait declaration: [traits::WithTarget]
   Source: 'tests/src/traits.rs', lines 254:0-256:1 -/
structure WithTarget (Self : Type) where
  Target : Type

/- Trait declaration: [traits::ParentTrait2]
   Source: 'tests/src/traits.rs', lines 258:0-260:1 -/
structure ParentTrait2 (Self : Type) where
  U : Type
  WithTargettraitsParentTrait2UInst : WithTarget U

/- Trait declaration: [traits::ChildTrait2]
   Source: 'tests/src/traits.rs', lines 262:0-264:1 -/
structure ChildTrait2 (Self : Type) where
  ParentTrait2Inst : ParentTrait2 Self
  convert : ParentTrait2Inst.U → Result
    ParentTrait2Inst.WithTargettraitsParentTrait2UInst.Target

/- Trait implementation: [traits::{traits::WithTarget for u32}#11]
   Source: 'tests/src/traits.rs', lines 266:0-268:1 -/
@[reducible]
def WithTargetU32 : WithTarget U32 := {
  Target := U32
}

/- Trait implementation: [traits::{traits::ParentTrait2 for u32}#12]
   Source: 'tests/src/traits.rs', lines 270:0-272:1 -/
@[reducible]
def ParentTrait2U32 : ParentTrait2 U32 := {
  U := U32
  WithTargettraitsParentTrait2UInst := WithTargetU32
}

/- [traits::{traits::ChildTrait2 for u32}#13::convert]:
   Source: 'tests/src/traits.rs', lines 275:4-277:5 -/
def ChildTrait2U32.convert (x : U32) : Result U32 :=
  Result.ok x

/- Trait implementation: [traits::{traits::ChildTrait2 for u32}#13]
   Source: 'tests/src/traits.rs', lines 274:0-278:1 -/
@[reducible]
def ChildTrait2U32 : ChildTrait2 U32 := {
  ParentTrait2Inst := ParentTrait2U32
  convert := ChildTrait2U32.convert
}

/- Trait declaration: [traits::CFnOnce]
   Source: 'tests/src/traits.rs', lines 288:0-292:1 -/
structure CFnOnce (Self : Type) (Args : Type) where
  Output : Type
  call_once : Self → Args → Result Output

/- Trait declaration: [traits::CFnMut]
   Source: 'tests/src/traits.rs', lines 294:0-296:1 -/
structure CFnMut (Self : Type) (Args : Type) where
  CFnOnceInst : CFnOnce Self Args
  call_mut : Self → Args → Result (CFnOnceInst.Output × Self)

/- Trait declaration: [traits::CFn]
   Source: 'tests/src/traits.rs', lines 298:0-300:1 -/
structure CFn (Self : Type) (Args : Type) where
  CFnMutInst : CFnMut Self Args
  call : Self → Args → Result CFnMutInst.CFnOnceInst.Output

/- Trait declaration: [traits::GetTrait]
   Source: 'tests/src/traits.rs', lines 302:0-305:1 -/
structure GetTrait (Self : Type) where
  W : Type
  get_w : Self → Result W

/- [traits::test_get_trait]:
   Source: 'tests/src/traits.rs', lines 307:0-309:1 -/
def test_get_trait
  {T : Type} (GetTraitInst : GetTrait T) (x : T) : Result GetTraitInst.W :=
  GetTraitInst.get_w x

/- Trait declaration: [traits::Trait]
   Source: 'tests/src/traits.rs', lines 312:0-314:1 -/
structure Trait (Self : Type) where
  LEN : Usize

/- [traits::{traits::Trait for @Array<T, N>}#14::LEN]
   Source: 'tests/src/traits.rs', lines 317:4-317:25 -/
def TraitArray.LEN_body (T : Type) (N : Usize) : Result Usize := Result.ok N
def TraitArray.LEN (T : Type) (N : Usize) : Usize :=
  eval_global (TraitArray.LEN_body T N)

/- Trait implementation: [traits::{traits::Trait for @Array<T, N>}#14]
   Source: 'tests/src/traits.rs', lines 316:0-318:1 -/
@[reducible]
def TraitArray (T : Type) (N : Usize) : Trait (Array T N) := {
  LEN := TraitArray.LEN T N
}

/- [traits::{traits::Trait for traits::Wrapper<T>}#15::LEN]
   Source: 'tests/src/traits.rs', lines 321:4-321:25 -/
def TraittraitsWrapper.LEN_body {T : Type} (TraitInst : Trait T)
  : Result Usize :=
  Result.ok 0#usize
def TraittraitsWrapper.LEN {T : Type} (TraitInst : Trait T) : Usize :=
  eval_global (TraittraitsWrapper.LEN_body TraitInst)

/- Trait implementation: [traits::{traits::Trait for traits::Wrapper<T>}#15]
   Source: 'tests/src/traits.rs', lines 320:0-322:1 -/
@[reducible]
def TraittraitsWrapper {T : Type} (TraitInst : Trait T) : Trait (Wrapper T)
  := {
  LEN := TraittraitsWrapper.LEN TraitInst
}

/- [traits::use_wrapper_len]:
   Source: 'tests/src/traits.rs', lines 324:0-326:1 -/
def use_wrapper_len {T : Type} (TraitInst : Trait T) : Result Usize :=
  Result.ok (TraittraitsWrapper TraitInst).LEN

/- [traits::Foo]
   Source: 'tests/src/traits.rs', lines 328:0-331:1 -/
structure Foo (T : Type) (U : Type) where
  x : T
  y : U

/- [traits::{traits::Foo<T, U>}#16::FOO]
   Source: 'tests/src/traits.rs', lines 334:4-334:43 -/
def Foo.FOO_body {T : Type} (U : Type) (TraitInst : Trait T)
  : Result (core.result.Result T I32) :=
  Result.ok (core.result.Result.Err 0#i32)
def Foo.FOO {T : Type} (U : Type) (TraitInst : Trait T)
  : core.result.Result T I32 :=
  eval_global (Foo.FOO_body U TraitInst)

/- [traits::use_foo1]:
   Source: 'tests/src/traits.rs', lines 337:0-339:1 -/
def use_foo1
  {T : Type} (U : Type) (TraitInst : Trait T) :
  Result (core.result.Result T I32)
  :=
  Result.ok (Foo.FOO U TraitInst)

/- [traits::use_foo2]:
   Source: 'tests/src/traits.rs', lines 341:0-343:1 -/
def use_foo2
  (T : Type) {U : Type} (TraitInst : Trait U) :
  Result (core.result.Result U I32)
  :=
  Result.ok (Foo.FOO T TraitInst)

/- [traits::BoolTrait::ret_true]:
   Source: 'tests/src/traits.rs', lines 8:4-10:5 -/
def BoolTrait.ret_true.default
  {Self : Type} (self_clause : BoolTrait Self) (self : Self) : Result Bool :=
  Result.ok true

/- Trait declaration: [traits::{traits::TestType<T>}#6::test::TestTrait]
   Source: 'tests/src/traits.rs', lines 130:8-132:9 -/
structure TestType.test.TestTrait (Self : Type) where
  test : Self → Result Bool

/- Trait implementation: [traits::{traits::TestType<T>}#6::test::{traits::{traits::TestType<T>}#6::test::TestTrait for traits::{traits::TestType<T>}#6::test::TestType1}]
   Source: 'tests/src/traits.rs', lines 140:8-144:9 -/
@[reducible]
def TestType.test.TestTraittraitsTestTypetestTestType1 :
  TestType.test.TestTrait TestType.test.TestType1 := {
  test := TestType.test.TestTraittraitsTestTypetestTestType1.test
}

end traits

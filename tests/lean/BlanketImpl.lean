-- THIS FILE WAS AUTOMATICALLY GENERATED BY AENEAS
-- [blanket_impl]
import Aeneas
open Aeneas.Std Result Error
set_option linter.dupNamespace false
set_option linter.hashCommand false
set_option linter.unusedVariables false

namespace blanket_impl

/- Trait declaration: [core::iter::traits::iterator::Iterator]
   Source: '/rustc/library/core/src/iter/traits/iterator.rs', lines 39:0-39:18
   Name pattern: core::iter::traits::iterator::Iterator -/
structure core.iter.traits.iterator.Iterator (Self : Type) (Self_Item : Type)
  where
  next : Self → Result ((Option Self_Item) × Self)

/- [core::iter::traits::collect::{core::iter::traits::collect::IntoIterator<Clause1_Item, I> for I}#1::into_iter]:
   Source: '/rustc/library/core/src/iter/traits/collect.rs', lines 356:4-356:27
   Name pattern: core::iter::traits::collect::{core::iter::traits::collect::IntoIterator<@I, @Clause1_Item, @I>}::into_iter -/
axiom core.iter.traits.collect.IntoIterator.into_iter
  {I : Type} {Clause1_Item : Type} (iteratorIteratorInst :
  core.iter.traits.iterator.Iterator I Clause1_Item) :
  I → Result I

/- Trait declaration: [core::iter::range::Step]
   Source: '/rustc/library/core/src/iter/range.rs', lines 24:0-24:42
   Name pattern: core::iter::range::Step -/
structure core.iter.range.Step (Self : Type) where
  cloneCloneInst : core.clone.Clone Self
  cmpPartialOrdInst : core.cmp.PartialOrd Self Self
  steps_between : Self → Self → Result (Option Usize)
  forward_checked : Self → Usize → Result (Option Self)
  backward_checked : Self → Usize → Result (Option Self)

/- [core::iter::range::{core::iter::traits::iterator::Iterator<A> for core::ops::range::Range<A>}#6::next]:
   Source: '/rustc/library/core/src/iter/range.rs', lines 842:4-842:35
   Name pattern: core::iter::range::{core::iter::traits::iterator::Iterator<core::ops::range::Range<@A>, @A>}::next -/
axiom core.iter.range.IteratorcoreopsrangeRangeA.next
  {A : Type} (StepInst : core.iter.range.Step A) :
  core.ops.range.Range A → Result ((Option A) × (core.ops.range.Range A))

/- Trait implementation: [core::iter::range::{core::iter::traits::iterator::Iterator<A> for core::ops::range::Range<A>}#6]
   Source: '/rustc/library/core/src/iter/range.rs', lines 838:0-838:40
   Name pattern: core::iter::traits::iterator::Iterator<core::ops::range::Range<@A>, @A> -/
@[reducible]
def core.iter.traits.iterator.IteratorcoreopsrangeRangeA {A : Type} (StepInst :
  core.iter.range.Step A) : core.iter.traits.iterator.Iterator
  (core.ops.range.Range A) A := {
  next := core.iter.range.IteratorcoreopsrangeRangeA.next StepInst
}

/- [core::iter::range::{core::iter::range::Step for i32}#40::steps_between]:
   Source: '/rustc/library/core/src/iter/range.rs', lines 297:16-297:75
   Name pattern: core::iter::range::{core::iter::range::Step<i32>}::steps_between -/
axiom core.iter.range.StepI32.steps_between
  : I32 → I32 → Result (Option Usize)

/- [core::iter::range::{core::iter::range::Step for i32}#40::forward_checked]:
   Source: '/rustc/library/core/src/iter/range.rs', lines 311:16-311:73
   Name pattern: core::iter::range::{core::iter::range::Step<i32>}::forward_checked -/
axiom core.iter.range.StepI32.forward_checked
  : I32 → Usize → Result (Option I32)

/- [core::iter::range::{core::iter::range::Step for i32}#40::backward_checked]:
   Source: '/rustc/library/core/src/iter/range.rs', lines 332:16-332:74
   Name pattern: core::iter::range::{core::iter::range::Step<i32>}::backward_checked -/
axiom core.iter.range.StepI32.backward_checked
  : I32 → Usize → Result (Option I32)

/- Trait implementation: [core::iter::range::{core::iter::range::Step for i32}#40]
   Source: '/rustc/library/core/src/iter/range.rs', lines 292:12-292:37
   Name pattern: core::iter::range::Step<i32> -/
@[reducible]
def core.iter.range.StepI32 : core.iter.range.Step I32 := {
  cloneCloneInst := core.clone.CloneI32
  cmpPartialOrdInst := core.cmp.PartialOrdI32
  steps_between := core.iter.range.StepI32.steps_between
  forward_checked := core.iter.range.StepI32.forward_checked
  backward_checked := core.iter.range.StepI32.backward_checked
}

/- [blanket_impl::main]:
   Source: 'tests/src/blanket_impl.rs', lines 2:0-5:1 -/
def main : Result Unit :=
  do
  let _ ←
    core.iter.traits.collect.IntoIterator.into_iter
      (core.iter.traits.iterator.IteratorcoreopsrangeRangeA
      core.iter.range.StepI32) { start := 0#i32, end_ := 1#i32 }
  ok ()

/- Trait declaration: [core::iter::traits::collect::IntoIterator]
   Source: '/rustc/library/core/src/iter/traits/collect.rs', lines 318:0-318:22
   Name pattern: core::iter::traits::collect::IntoIterator -/
structure core.iter.traits.collect.IntoIterator (Self : Type) (Self_Item :
  Type) (Self_IntoIter : Type) where
  iteratorIteratorInst : core.iter.traits.iterator.Iterator Self_IntoIter
    Self_Item
  into_iter : Self → Result Self_IntoIter

/- Trait implementation: [core::iter::traits::collect::{core::iter::traits::collect::IntoIterator<Clause1_Item, I> for I}#1]
   Source: '/rustc/library/core/src/iter/traits/collect.rs', lines 351:0-351:36
   Name pattern: core::iter::traits::collect::IntoIterator<@I, @Clause1_Item, @I> -/
@[reducible]
def core.iter.traits.collect.IntoIterator.blanket {I : Type} {Clause1_Item :
  Type} (iteratorIteratorInst : core.iter.traits.iterator.Iterator I
  Clause1_Item) : core.iter.traits.collect.IntoIterator I Clause1_Item I := {
  iteratorIteratorInst := iteratorIteratorInst
  into_iter := core.iter.traits.collect.IntoIterator.into_iter
    iteratorIteratorInst
}

/- Trait declaration: [core::iter::adapters::zip::TrustedRandomAccessNoCoerce]
   Source: '/rustc/library/core/src/iter/adapters/zip.rs', lines 593:0-593:51
   Name pattern: core::iter::adapters::zip::TrustedRandomAccessNoCoerce -/
structure core.iter.adapters.zip.TrustedRandomAccessNoCoerce (Self : Type)
  where
  MAY_HAVE_SIDE_EFFECT : Bool

/- Trait declaration: [core::ops::function::FnOnce]
   Source: '/rustc/library/core/src/ops/function.rs', lines 242:0-242:29
   Name pattern: core::ops::function::FnOnce -/
structure core.ops.function.FnOnce (Self : Type) (Args : Type) (Self_Output :
  Type) where
  call_once : Self → Args → Result Self_Output

/- Trait declaration: [core::ops::function::FnMut]
   Source: '/rustc/library/core/src/ops/function.rs', lines 163:0-163:42
   Name pattern: core::ops::function::FnMut -/
structure core.ops.function.FnMut (Self : Type) (Args : Type)
  (Self_Clause0_Output : Type) where
  FnOnceInst : core.ops.function.FnOnce Self Args Self_Clause0_Output
  call_mut : Self → Args → Result (Self_Clause0_Output × Self)

/- Trait declaration: [core::iter::traits::collect::FromIterator]
   Source: '/rustc/library/core/src/iter/traits/collect.rs', lines 134:0-134:32
   Name pattern: core::iter::traits::collect::FromIterator -/
structure core.iter.traits.collect.FromIterator (Self : Type) (A : Type) where
  from_iter : forall {T : Type} {Clause1_IntoIter : Type} (IntoIteratorInst :
    core.iter.traits.collect.IntoIterator T A Clause1_IntoIter), T → Result
    Self

/- Trait declaration: [core::ops::try_trait::FromResidual]
   Source: '/rustc/library/core/src/ops/try_trait.rs', lines 307:0-307:51
   Name pattern: core::ops::try_trait::FromResidual -/
structure core.ops.try_trait.FromResidual (Self : Type) (R : Type) where
  from_residual : R → Result Self

/- [core::ops::control_flow::ControlFlow]
   Source: '/rustc/library/core/src/ops/control_flow.rs', lines 85:0-85:31
   Name pattern: core::ops::control_flow::ControlFlow -/
inductive core.ops.control_flow.ControlFlow (B : Type) (C : Type) where
| Continue : C → core.ops.control_flow.ControlFlow B C
| Break : B → core.ops.control_flow.ControlFlow B C

/- Trait declaration: [core::ops::try_trait::Try]
   Source: '/rustc/library/core/src/ops/try_trait.rs', lines 131:0-131:27
   Name pattern: core::ops::try_trait::Try -/
structure core.ops.try_trait.Try (Self : Type) (Self_Output : Type)
  (Self_Residual : Type) where
  FromResidualInst : core.ops.try_trait.FromResidual Self Self_Residual
  from_output : Self_Output → Result Self
  branch : Self → Result (core.ops.control_flow.ControlFlow Self_Residual
    Self_Output)

/- Trait declaration: [core::ops::try_trait::Residual]
   Source: '/rustc/library/core/src/ops/try_trait.rs', lines 359:0-359:21
   Name pattern: core::ops::try_trait::Residual -/
structure core.ops.try_trait.Residual (Self : Type) (O : Type) (Self_TryType :
  Type) where
  TryInst : core.ops.try_trait.Try Self_TryType O Self

/- Trait declaration: [core::iter::traits::collect::Extend]
   Source: '/rustc/library/core/src/iter/traits/collect.rs', lines 431:0-431:19
   Name pattern: core::iter::traits::collect::Extend -/
structure core.iter.traits.collect.Extend (Self : Type) (A : Type) where
  extend : forall {T : Type} {Clause1_IntoIter : Type} (IntoIteratorInst :
    core.iter.traits.collect.IntoIterator T A Clause1_IntoIter), Self → T →
    Result Self

/- Trait declaration: [core::default::Default]
   Source: '/rustc/library/core/src/default.rs', lines 107:0-107:24
   Name pattern: core::default::Default -/
structure core.default.Default (Self : Type) where
  default : Result Self

/- Trait declaration: [core::iter::traits::double_ended::DoubleEndedIterator]
   Source: '/rustc/library/core/src/iter/traits/double_ended.rs', lines 41:0-41:39
   Name pattern: core::iter::traits::double_ended::DoubleEndedIterator -/
structure core.iter.traits.double_ended.DoubleEndedIterator (Self : Type)
  (Self_Clause0_Item : Type) where
  iteratorIteratorInst : core.iter.traits.iterator.Iterator Self
    Self_Clause0_Item
  next_back : Self → Result ((Option Self_Clause0_Item) × Self)

/- Trait declaration: [core::iter::traits::exact_size::ExactSizeIterator]
   Source: '/rustc/library/core/src/iter/traits/exact_size.rs', lines 86:0-86:37
   Name pattern: core::iter::traits::exact_size::ExactSizeIterator -/
structure core.iter.traits.exact_size.ExactSizeIterator (Self : Type)
  (Self_Clause0_Item : Type) where
  iteratorIteratorInst : core.iter.traits.iterator.Iterator Self
    Self_Clause0_Item

/- Trait declaration: [core::iter::traits::accum::Sum]
   Source: '/rustc/library/core/src/iter/traits/accum.rs', lines 17:0-17:30
   Name pattern: core::iter::traits::accum::Sum -/
structure core.iter.traits.accum.Sum (Self : Type) (A : Type) where
  sum : forall {I : Type} (iteratorIteratorInst :
    core.iter.traits.iterator.Iterator I A), I → Result Self

/- Trait declaration: [core::iter::traits::accum::Product]
   Source: '/rustc/library/core/src/iter/traits/accum.rs', lines 38:0-38:34
   Name pattern: core::iter::traits::accum::Product -/
structure core.iter.traits.accum.Product (Self : Type) (A : Type) where
  product : forall {I : Type} (iteratorIteratorInst :
    core.iter.traits.iterator.Iterator I A), I → Result Self

end blanket_impl
